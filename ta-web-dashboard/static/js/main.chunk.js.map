{"version":3,"sources":["components/LeftMenu/LeftMenu.module.scss","components/LeftMenu/assets/logo.svg","components/LeftMenu/assets/circulation.svg","components/LeftMenu/assets/resales.svg","components/LeftMenu/assets/search.svg","components/LeftMenu/assets/dark.svg","components/LeftMenu/assets/light.svg","components/LeftMenu/LeftMenu.tsx","components/BottomMenu/assets/restoreFilters.svg","components/BottomMenu/assets/map.svg","components/BottomMenu/assets/list.svg","components/BottomMenu/BottomMenu.tsx","components/ProductTraceability/assets/traceability.svg","components/ProductTraceability/assets/dropdown.svg","components/ProductTraceability/ProductTraceability.tsx","components/IncludeTranceability/assets/back.svg","components/Icon/Icon.tsx","components/IncludeTranceability/IncludeTranceability.tsx","components/LeaveTraceability/assets/back.svg","components/LeaveTraceability/LeaveTranceability.tsx","components/Participants/Participants.tsx","components/DetailedParticipants/assets/back.svg","components/DetailedParticipants/DetailedParticipants.tsx","components/GroupProduct/assets/dropdown.svg","components/GroupProduct/assets/info.svg","components/GroupProduct/assets/back.svg","components/GroupProduct/components/DetailedLine/DetailedLine.tsx","components/GroupProduct/GroupProduct.tsx","components/Countries/assets/dropdown.svg","components/Countries/assets/back.svg","components/Countries/components/DetailedCountries/DetailedCountries.tsx","components/Countries/Countries.tsx","components/Risks/assets/dropdown.svg","components/Risks/Risks.tsx","components/DiagramsMain/DiagramsMain.tsx","components/Map/components/Breadcrumb/Breadcrumb.tsx","components/Map/Map.tsx","components/Periods/components/Period/Period.tsx","components/Periods/Periods.tsx","components/App/App.tsx","stores/ProductTraceabilityStore.tsx","components/Map/json/data.js","stores/MapStore.tsx","stores/ParticipantsStore.tsx","stores/GroupProductStore.tsx","stores/CountriesStore.tsx","stores/PeriodsStore.tsx","stores/AppStore.tsx","index.tsx","components/Countries/components/DetailedCountries/DetailedCountries.module.scss","components/IncludeTranceability/IncludeTranceability.module.scss","components/LeaveTraceability/LeaveTranceability.module.scss","components/GroupProduct/components/DetailedLine/DetailedLine.module.scss","components/Map/Map.module.scss","components/Participants/Participants.module.scss","components/Risks/Risks.module.scss","components/Periods/Periods.module.scss","components/Periods/components/Period/Period.module.scss","components/Countries/Countries.module.scss","components/Map/components/Breadcrumb/Breadcrumb.module.scss","components/GroupProduct/GroupProduct.module.scss","components/Map/components/Breadcrumb/assets/arrow.svg","components/DiagramsMain/DiagramsMain.module.scss","components/BottomMenu/BottomMenu.module.scss","components/Icon/assets/icons.svg","components/ProductTraceability/ProductTraceability.module.scss","components/Map/assets/kn.svg","components/DetailedParticipants/DetailedParticipants.module.scss"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","fill","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","fillRule","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","rx","cx","cy","r","x","y","transform","LeftMenu","PureComponent","constructor","super","state","switchTurnover","switchResales","switchSearch","render","className","styles","containerMenu","menu","logoIconContainer","logoIcon","iconsContainer","menuItem","activeMenu","onClick","setState","icons","labelUpper","labelLower","themeContainer","iconsTheme","clipPath","id","opacity","BottomMenu","inject","observer","_switchUnits","checkedSwitchUnits","switchMap","switchList","AppStore","periodType","setPeriodType","resetFilters","setUnitSize","unitSize","containerCounts","containerUnits","activeSpan","containerSwitch","noActive","active","checked","onChange","offHandleColor","onHandleColor","offColor","onColor","handleDiameter","uncheckedIcon","checkedIcon","switchSelect","containerRestoreFilters","filters","containerMap","iconsMap","containerPeriods","fillOpacity","ProductTraceability","ProductTraceabilityStore","changeIncludeTraceability","changeLeaveTraceability","unitSizeName","indicators","data","container","containerTitle","containerTotalCost","titleTotalCost","import","value","turnover","export","toLocaleString","maximumFractionDigits","titleUnit","containerProgressBar","containerProgressBarLines","containerProgressIcon","containerProgressTitle","progressBarTitle","progressBarCost","iconDropdown","percent","trailWidth","strokeColor","trailColor","progressLine","Icon","name","size","href","defaultProps","IncludeTraceability","description","color","containerlegend","map","item","index","legend","legendName","containerIcons","circle","ellipse","legendDescription","LeaveTraceability","Participants","ParticipantsStore","changeOSN","changeSRN","participants","preparedData","parts","part","isOsno","count","full","containerChart","radius","segmentsShift","containerLegend","show","DetailedParticipants","dataInfo","OSNcheck","find","containerBack","containerDetailedInfo","detailedInfo","importers","importersPercent","exporters","exportersPercent","insideTurn","insideTurnPercent","consumers","consumersPercent","DetailedLine","itemNumber","GroupProductStore","openGroup","closeGroup","openedGroup","getColor","code","data-tip","place","type","effect","border","borderColor","arrowColor","GroupProduct","goodsGroups","DetailedCountries","CountriesStore","isOpen","setOpen","setClose","countries","components","countryCode","svg","style","iconCountry","country","containerProgressBarLinesDetailed","Countries","filterAll","filterEAES","showAllCountries","showEAESCountries","containerChooseCountries","containerCountries","Risks","risks","risk","withRisks","DiagramsMain","OSN","SRN","includeTraceability","leaveTraceability","SRNcheck","containerGroupAndCountires","Breadcrumb","MapStore","level","currentFO","currentRegion","backToFO","reset","NavCountry","breadcrumb__title","breadcrumb__link","NavFO","src","arrow","alt","breadcrumb__arrow","properties","NavRegion","breadcrumb","Map","mapContainerRef","React","createRef","onBundleMouseEnter","e","mapGroup","document","querySelector","currentBundle","currentTarget","parentNode","appendChild","zoom","areas","querySelectorAll","currentArea","classList","forEach","area","onBundleMouseLeave","cuurentValue","contains","onAreaMouseEnter","onAreaMouseLeave","relatedTarget","bubble__circle","componentDidMount","mapContainer","current","mapHeight","offsetHeight","offsetWidth","setHeight","center","diffs","districts","regions","maxValue","sort","a","b","minValue","map__container","kn","kn__icon","KnIcon","kn__text","kn__title","kn__value","projection","maxZoom","map__zoomable","geography","rusFederative","rusRegions","geographies","geo","foId","regionId","markerData","rsmKey","onMouseLeave","onMouseEnter","map__area","selectFO","selectRegion","default","getSizeColor","outline","cursor","hover","pressed","diff","centroid","geoCentroid","valueStyle","textVisible","visible","coordinates","bubble","fontSize","bubble__name","bubble__value","Period","PeriodsStore","period","activeYear","selectYear","barStyle","periodClass","period__container","period__top","period__bar","period__value","period__date","Periods","periods","periods__line","periods__line__1","periods__line__2","periods__line__3","periods__line__4","App","theme","configure","enforceActions","appStore","setParams","decorate","observable","action","currentFOCenter","currentFOZoom","geoMercator","rotate","translate","precision","step","handleGeographyClick","isToFO","path","geoPath","bounds","dx","dy","Math","max","group","number","activeColor","year","params","indicator","fetch","paramsKeys","filter","method","then","res","json","updateData","param","computed","AppWrapper","stores","ReactDOM","getElementById"],"mappings":"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MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,EACVD,KAAM,GACNhM,MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,EACVD,KAAM,GACNhM,MAAO,OACPsH,MAAO,GAET,CACE2E,SAAU,EACVD,KAAM,GACNhM,MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,EACVD,KAAM,GACNhM,MAAO,OACPsH,MAAO,GAGT,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,IACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,MACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,GAET,CACE2E,SAAU,GACVD,KAAM,GACNhM,MAAO,KACPsH,MAAO,ICtJXyH,aAAU,CAAEC,eAAgB,aAE5B,MAAM3H,G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","file":"static/js/main.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMenu\":\"LeftMenu_containerMenu__OCSyp\",\"menu\":\"LeftMenu_menu__1eLfC\",\"logoIconContainer\":\"LeftMenu_logoIconContainer__35BPX\",\"logoIcon\":\"LeftMenu_logoIcon__2Vywj\",\"iconsContainer\":\"LeftMenu_iconsContainer__iUkCf\",\"icons\":\"LeftMenu_icons__3M4GK\",\"menuItem\":\"LeftMenu_menuItem__4YIfo\",\"activeMenu\":\"LeftMenu_activeMenu__35_5-\",\"labelUpper\":\"LeftMenu_labelUpper__3PDmC\",\"labelLower\":\"LeftMenu_labelLower__1IpIW\",\"themeContainer\":\"LeftMenu_themeContainer__3r3qZ\",\"iconsTheme\":\"LeftMenu_iconsTheme__3GNPQ\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.5184 42.8378C14.6532 43.1157 6.42323 35.3561 6.14534 25.4908C5.85675 15.6256 13.6271 7.40639 23.4923 7.11781C33.3575 6.83992 41.5768 14.5996 41.8653 24.4648C42.1432 34.33 34.3729 42.5599 24.5184 42.8378ZM47.9897 24.2938C47.6156 11.0404 36.564 0.60869 23.3106 0.993465C10.0679 1.37824 -0.374475 12.4192 0.0103011 25.6725C0.395077 38.9259 11.436 49.3576 24.6894 48.9728C37.9428 48.5988 48.3745 37.5471 47.9897 24.2938Z\",\n  fill: \"#0066B3\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.9952 42.421C14.5041 42.421 6.85133 34.982 6.58413 25.4908C6.30623 15.8715 13.8949 7.83392 23.5036 7.55603C23.6746 7.55603 23.8456 7.54534 24.0166 7.54534C33.5077 7.54534 41.1605 14.9843 41.4277 24.4755C41.5666 29.1248 39.8779 33.5604 36.6821 36.9379C33.4864 40.3261 29.1576 42.2607 24.5083 42.3996C24.3372 42.4103 24.1555 42.421 23.9952 42.421ZM23.9952 42.8485C24.1662 42.8485 24.3372 42.8485 24.5189 42.8378C34.3735 42.5599 42.1438 34.33 41.8659 24.4648C41.588 14.7813 33.6467 7.10712 24.0166 7.11781C23.8456 7.11781 23.6746 7.11781 23.4929 7.11781C13.6277 7.40639 5.86802 15.6256 6.14591 25.4908C6.4238 35.1851 14.3651 42.8485 23.9952 42.8485Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.0041 7.9837C23.8438 7.9837 23.6728 7.9837 23.5124 7.99439C14.1389 8.2616 6.74264 16.1067 7.00984 25.4696C7.27705 34.7256 14.7374 41.9829 23.9934 41.9829C24.1537 41.9829 24.3248 41.9829 24.4851 41.9722C29.0169 41.844 33.2387 39.9521 36.3597 36.6495C39.4806 33.3468 41.1266 29.0288 40.9877 24.497C40.7205 15.241 33.2601 7.9837 24.0041 7.9837ZM23.9934 43.2869C19.2158 43.2869 14.6947 41.4485 11.2638 38.1245C7.82215 34.7897 5.84483 30.3114 5.71657 25.5124C5.57762 20.6279 7.35187 15.9785 10.6973 12.43C14.0534 8.87082 18.5959 6.84006 23.4804 6.70112C23.6621 6.69043 23.8331 6.69043 24.0148 6.69043C28.7924 6.69043 33.3135 8.5288 36.7445 11.8528C40.1861 15.1876 42.1527 19.6659 42.2916 24.4649C42.4306 29.3494 40.667 33.9988 37.3109 37.558C33.9548 41.1065 29.4123 43.1479 24.5278 43.2869C24.3461 43.2762 24.1644 43.2869 23.9934 43.2869Z\",\n  fill: \"#0066B3\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M40.946 38.6054L40.1871 37.4297L39.6313 38.1244L40.946 38.6054ZM38.2632 38.3061C38.2098 38.2847 38.1563 38.2633 38.135 38.2527C38.1029 38.2313 38.0922 38.2099 38.0815 38.1885C38.0815 38.1672 38.0922 38.1351 38.1136 38.0923C38.1456 38.0496 38.1777 38.0068 38.2312 37.9427C38.2846 37.8786 38.3273 37.8251 38.3594 37.7931C38.3915 37.761 38.4129 37.7396 38.4342 37.7182C38.4556 37.6969 38.477 37.6969 38.4877 37.6969C38.4984 37.6969 38.5197 37.7076 38.5411 37.7076L39.161 37.932L39.8878 37.0128L39.5351 36.4784C39.5244 36.457 39.5137 36.4357 39.5031 36.425C39.5031 36.4036 39.5031 36.3822 39.5031 36.3608C39.5137 36.3395 39.5244 36.3074 39.5565 36.2753C39.5779 36.2433 39.6099 36.1898 39.6527 36.1364C39.6954 36.083 39.7382 36.0295 39.7703 36.0081C39.8023 35.9761 39.8237 35.9654 39.8558 35.9654C39.8771 35.9654 39.9092 35.9761 39.9306 35.9974C39.952 36.0188 39.984 36.0616 40.0161 36.115L41.5873 38.5947C41.5979 38.6161 41.6086 38.6374 41.6193 38.6588C41.6193 38.6802 41.6193 38.7016 41.6086 38.7336C41.5979 38.755 41.5766 38.7978 41.5445 38.8298C41.5124 38.8726 41.4804 38.926 41.4269 38.9901C41.3628 39.065 41.32 39.1291 41.288 39.1612C41.2452 39.2039 41.2132 39.236 41.1918 39.2574C41.1597 39.2787 41.1383 39.2787 41.117 39.2787C41.0956 39.2787 41.0635 39.2787 41.0422 39.268L38.2632 38.3061ZM41.1704 35.4951C41.2345 35.5272 41.288 35.5485 41.3521 35.5592C41.4162 35.5699 41.4697 35.5592 41.5231 35.5378C41.5766 35.5165 41.63 35.4844 41.6834 35.431C41.7369 35.3882 41.7903 35.3134 41.8438 35.2065L42.0468 34.8538L41.2666 34.4156L41.0635 34.779C41.0101 34.8645 40.978 34.95 40.9673 35.0141C40.9566 35.0783 40.946 35.1424 40.9566 35.2065C40.9673 35.26 40.9887 35.3241 41.0315 35.3668C41.0528 35.4203 41.1063 35.463 41.1704 35.4951ZM40.8925 36.083C40.7643 36.0081 40.6681 35.9333 40.5932 35.8264C40.5184 35.7302 40.465 35.6127 40.4329 35.4844C40.4115 35.3562 40.4115 35.2172 40.4436 35.0676C40.4757 34.9179 40.5505 34.7362 40.6681 34.5225L41.0742 33.8064C41.0956 33.7529 41.1383 33.7209 41.1811 33.7102C41.2239 33.6888 41.2773 33.6995 41.3414 33.7422L43.7035 35.0676C43.7676 35.0996 43.7997 35.1424 43.8104 35.1958C43.8211 35.2493 43.8104 35.292 43.789 35.3348L42.9233 36.8739C42.9126 36.8846 42.9019 36.8953 42.8912 36.9059C42.8805 36.9059 42.8591 36.9166 42.8378 36.9166C42.8164 36.9166 42.7843 36.9059 42.763 36.8953C42.7309 36.8846 42.6988 36.8632 42.6561 36.8418C42.6133 36.8204 42.5813 36.7991 42.5599 36.7777C42.5385 36.7563 42.5171 36.7349 42.4958 36.7242C42.4851 36.7029 42.4744 36.6922 42.4744 36.6815C42.4744 36.6601 42.4744 36.6494 42.4851 36.6387L43.137 35.4844L42.4637 35.0996L42.2072 35.5485C42.111 35.7196 42.0148 35.8585 41.9186 35.9547C41.8224 36.0509 41.7155 36.115 41.6086 36.1578C41.5017 36.2005 41.3842 36.2112 41.2666 36.2005C41.1277 36.1898 41.0101 36.1471 40.8925 36.083ZM41.5979 33.0582C41.5766 33.0475 41.5659 33.0475 41.5552 33.0261C41.5445 33.0154 41.5445 32.9941 41.5445 32.9727C41.5445 32.9513 41.5445 32.9086 41.5552 32.8765C41.5659 32.8337 41.5766 32.7803 41.6086 32.7162C41.63 32.652 41.6514 32.5986 41.6621 32.5558C41.6728 32.5131 41.6941 32.4917 41.7155 32.4596C41.7262 32.4383 41.7476 32.4276 41.769 32.4169C41.7903 32.4062 41.8117 32.4062 41.8331 32.4062L42.5706 32.4169C42.6774 32.4169 42.763 32.4169 42.8378 32.4062C42.9126 32.3955 42.9767 32.3741 43.0302 32.3421C43.0836 32.31 43.1264 32.2779 43.1584 32.2245C43.1905 32.1711 43.2225 32.1176 43.2439 32.0428L43.2867 31.9252L42.1003 31.5298C42.0789 31.5191 42.0682 31.5191 42.0682 31.4977C42.0575 31.487 42.0468 31.4656 42.0468 31.4443C42.0468 31.4229 42.0468 31.3908 42.0575 31.3481C42.0682 31.3053 42.0789 31.2626 42.1003 31.1984C42.1217 31.1343 42.143 31.0916 42.1537 31.0595C42.1644 31.0167 42.1858 30.9954 42.2072 30.974C42.2179 30.9526 42.2392 30.9419 42.2499 30.9419C42.2606 30.9419 42.282 30.9419 42.3034 30.9419L43.4898 31.3374L43.5325 31.2198C43.5539 31.145 43.5646 31.0809 43.5646 31.0167C43.5646 30.9526 43.5539 30.8885 43.5325 30.835C43.5004 30.7816 43.4684 30.7175 43.4149 30.6747C43.3615 30.6213 43.2974 30.5678 43.2225 30.5144L42.624 30.0762C42.6026 30.0655 42.5919 30.0441 42.5813 30.0334C42.5706 30.012 42.5706 29.9907 42.5706 29.9693C42.5706 29.9372 42.5706 29.9052 42.5813 29.8624C42.5919 29.8197 42.6026 29.7662 42.624 29.7021C42.6454 29.638 42.6668 29.5845 42.6881 29.5525C42.6988 29.5097 42.7202 29.4883 42.7309 29.4669C42.7523 29.4456 42.763 29.4349 42.7736 29.4242C42.7843 29.4242 42.8057 29.4242 42.8164 29.4242C42.8271 29.4242 42.8378 29.4349 42.8485 29.4349C42.8591 29.4349 42.8698 29.4456 42.8805 29.4563C42.8912 29.4669 42.9126 29.4776 42.9233 29.4883C42.9447 29.499 42.966 29.5204 42.9874 29.5418L43.5111 29.9479C43.6073 30.0227 43.6928 30.0869 43.7463 30.151C43.8104 30.2151 43.8638 30.2686 43.8959 30.3327C43.928 30.3968 43.96 30.4503 43.9707 30.5144C43.9921 30.5785 43.9921 30.6427 44.0028 30.7068C44.0349 30.664 44.0776 30.6213 44.1204 30.5785C44.1631 30.5358 44.2165 30.5144 44.2807 30.493C44.3448 30.4716 44.4196 30.4503 44.4944 30.4396C44.5799 30.4289 44.6761 30.4182 44.7937 30.4182H45.3816C45.435 30.4182 45.4778 30.4182 45.5098 30.4289C45.5419 30.4289 45.5633 30.4396 45.5846 30.4396C45.606 30.4503 45.6167 30.4503 45.6274 30.4716C45.6381 30.4823 45.6381 30.5037 45.6381 30.5251C45.6381 30.5465 45.6274 30.5785 45.6274 30.6213C45.6167 30.664 45.606 30.7175 45.5846 30.7709C45.5633 30.835 45.5419 30.8885 45.5205 30.9205C45.5098 30.9633 45.4884 30.9954 45.4671 31.006C45.4564 31.0274 45.435 31.0381 45.4136 31.0488C45.3923 31.0488 45.3816 31.0595 45.3495 31.0595L44.6655 31.0381C44.5693 31.0381 44.4944 31.0381 44.4196 31.0488C44.3448 31.0595 44.2914 31.0809 44.2379 31.1022C44.1845 31.1343 44.1417 31.1664 44.1097 31.2198C44.0776 31.2626 44.0455 31.3267 44.0242 31.4015L43.9921 31.5191L45.1037 31.8718C45.125 31.8825 45.1357 31.8932 45.1464 31.9039C45.1571 31.9145 45.1571 31.9359 45.1571 31.9573C45.1571 31.9787 45.1571 32.0107 45.1464 32.0535C45.1357 32.0856 45.125 32.139 45.1037 32.1924C45.093 32.2459 45.0609 32.2993 45.0502 32.3314C45.0289 32.3635 45.0182 32.3955 44.9968 32.4169C44.9861 32.4383 44.9647 32.449 44.954 32.4596C44.9434 32.4703 44.922 32.4703 44.9113 32.4596L43.7997 32.0856L43.757 32.2031C43.7356 32.2779 43.7249 32.3421 43.7249 32.3955C43.7249 32.449 43.7356 32.5131 43.7676 32.5665C43.789 32.62 43.8318 32.6734 43.8745 32.7269C43.928 32.7803 43.9814 32.823 44.0669 32.8765L44.6227 33.2719C44.6441 33.2826 44.6548 33.304 44.6655 33.3147C44.6761 33.3254 44.6868 33.3468 44.6868 33.3788C44.6868 33.4002 44.6868 33.4323 44.6761 33.475C44.6655 33.5178 44.6548 33.5712 44.6334 33.6353C44.612 33.6995 44.5906 33.7422 44.58 33.7743C44.5693 33.817 44.5479 33.8384 44.5372 33.8598C44.5265 33.8812 44.5051 33.8919 44.4944 33.9026C44.4838 33.9026 44.4624 33.9026 44.4517 33.9026C44.4303 33.8919 44.4089 33.8812 44.3769 33.8705C44.3555 33.8598 44.3127 33.8277 44.27 33.7957L43.8104 33.443C43.7249 33.3788 43.6501 33.3147 43.5966 33.2613C43.5432 33.1971 43.4898 33.1437 43.4577 33.0903C43.4256 33.0368 43.3936 32.9834 43.3829 32.9299C43.3615 32.8765 43.3615 32.8124 43.3508 32.7482C43.2974 32.8017 43.2546 32.8551 43.2012 32.8872C43.1477 32.9299 43.0943 32.962 43.0195 32.9834C42.9553 33.0154 42.8805 33.0261 42.795 33.0368C42.7095 33.0475 42.6026 33.0582 42.4744 33.0582L41.8117 33.0689C41.7796 33.0689 41.7583 33.0689 41.7369 33.0689C41.7155 33.0689 41.6941 33.0689 41.6834 33.0689C41.6621 33.0689 41.6514 33.0689 41.6407 33.0689C41.6086 33.0582 41.6086 33.0582 41.5979 33.0582ZM43.7249 28.2699C43.5539 28.1737 43.4149 28.0882 43.3081 28.0027C43.2012 27.9172 43.1157 27.8316 43.0622 27.7461C42.9981 27.6606 42.966 27.5644 42.9553 27.4789C42.9447 27.3827 42.9447 27.2759 42.9553 27.1583C42.9553 27.1155 42.966 27.0728 42.9767 27.03C42.9874 26.9873 42.9981 26.9552 43.0195 26.9125C43.0302 26.8804 43.0515 26.8483 43.0622 26.8163C43.0729 26.7949 43.0943 26.7735 43.105 26.7628C43.1157 26.7521 43.1264 26.7415 43.1477 26.7415C43.1584 26.7415 43.1798 26.7308 43.2012 26.7308C43.2225 26.7308 43.2546 26.7308 43.2867 26.7308C43.3187 26.7308 43.3615 26.7415 43.4149 26.7415C43.5111 26.7521 43.5753 26.7735 43.6073 26.7842C43.6394 26.8056 43.6608 26.827 43.6608 26.859C43.6608 26.8697 43.6501 26.8911 43.6394 26.9018C43.6287 26.9125 43.6073 26.9338 43.5966 26.9552C43.5859 26.9766 43.5646 27.0087 43.5539 27.0407C43.5432 27.0728 43.5325 27.1049 43.5218 27.1583C43.5111 27.1904 43.5111 27.2224 43.5218 27.2545C43.5218 27.2866 43.5325 27.3079 43.5539 27.34C43.5646 27.3721 43.5966 27.3934 43.6287 27.4255C43.6608 27.4576 43.7035 27.4896 43.7676 27.5324L45.9801 26.7842C46.0336 26.7735 46.0763 26.7628 46.1084 26.7628C46.1404 26.7628 46.1618 26.7735 46.1832 26.7949C46.1939 26.8163 46.2046 26.8483 46.2046 26.8911C46.2046 26.9338 46.1939 26.998 46.1832 27.0728C46.1725 27.1476 46.1618 27.201 46.1511 27.2545C46.1404 27.2972 46.1297 27.3293 46.1191 27.3614C46.1084 27.3827 46.087 27.4041 46.0656 27.4148C46.0442 27.4255 46.0122 27.4362 45.9801 27.4469L44.9861 27.7568C44.8792 27.7889 44.7723 27.821 44.6655 27.853C44.5586 27.8851 44.4517 27.9065 44.3448 27.9385V27.9492C44.441 27.992 44.5479 28.0454 44.6441 28.0989C44.7403 28.1523 44.8472 28.2057 44.9434 28.2592L45.8412 28.7401C45.8625 28.7508 45.8839 28.7615 45.8946 28.7829C45.9053 28.7936 45.916 28.815 45.916 28.847C45.916 28.8791 45.9267 28.9112 45.916 28.9539C45.916 28.9967 45.9053 29.0608 45.8946 29.1249C45.8839 29.1997 45.8732 29.2532 45.8625 29.2959C45.8518 29.3387 45.8412 29.3708 45.8198 29.3814C45.7984 29.4028 45.777 29.4028 45.7557 29.4028C45.7343 29.3921 45.7022 29.3814 45.6595 29.3601L43.7249 28.2699ZM43.2119 25.7581C43.2012 25.7581 43.1798 25.7581 43.1691 25.7474C43.1584 25.7368 43.1477 25.7261 43.137 25.694C43.1264 25.6726 43.1264 25.6406 43.1157 25.5978C43.105 25.5551 43.105 25.5123 43.105 25.4482C43.105 25.384 43.105 25.3306 43.105 25.2985C43.105 25.2558 43.1157 25.2237 43.1157 25.2024C43.1264 25.181 43.1264 25.1596 43.1477 25.1489C43.1691 25.1382 43.1691 25.1382 43.1905 25.1382L45.7022 25.0634L45.6808 24.39C45.3067 24.358 44.9861 24.3259 44.7082 24.2832C44.4303 24.2404 44.1952 24.2083 43.9921 24.1549C43.7997 24.1122 43.6287 24.0587 43.5004 23.9946C43.3722 23.9305 43.276 23.8663 43.2012 23.7808C43.1264 23.706 43.0729 23.6098 43.0409 23.5136C43.0088 23.4067 42.9874 23.2998 42.9874 23.1609C42.9874 23.1395 42.9874 23.1181 42.9981 23.0968C43.0088 23.0754 43.0195 23.0647 43.0302 23.054C43.0515 23.0433 43.0729 23.0326 43.105 23.0326C43.137 23.022 43.1798 23.022 43.2225 23.022C43.2974 23.022 43.3508 23.022 43.3936 23.022C43.4363 23.022 43.4684 23.0326 43.4898 23.0326C43.5111 23.0433 43.5325 23.0433 43.5432 23.0647C43.5539 23.0754 43.5539 23.0968 43.5539 23.1075C43.5539 23.1609 43.5646 23.2037 43.5859 23.2464C43.6073 23.2892 43.6501 23.3319 43.7035 23.3747C43.7676 23.4174 43.8532 23.4602 43.96 23.4922C44.0669 23.5243 44.2165 23.5671 44.3876 23.5991C44.5693 23.6312 44.783 23.6632 45.0289 23.6953C45.2854 23.7274 45.5846 23.7488 45.9374 23.7808C46.0122 23.7915 46.0763 23.8022 46.1084 23.8343C46.1404 23.8663 46.1618 23.9091 46.1618 23.9625L46.2046 25.4909C46.2046 25.5444 46.1939 25.5978 46.1618 25.6299C46.1297 25.6619 46.0763 25.6833 46.0122 25.6833L43.2119 25.7581ZM43.4363 22.5624C43.3936 22.573 43.3615 22.573 43.3401 22.573C43.3081 22.573 43.2867 22.5837 43.2653 22.573C43.2439 22.573 43.2225 22.573 43.2119 22.5624C43.2012 22.5517 43.1798 22.5517 43.1584 22.5303C43.137 22.5196 43.105 22.4875 43.0729 22.4448C43.0408 22.402 42.9981 22.3486 42.9553 22.2845C42.9126 22.2203 42.8805 22.1348 42.8378 22.0493C42.8057 21.9638 42.7736 21.8569 42.7523 21.7501C42.7095 21.547 42.7095 21.3439 42.7416 21.1622C42.7736 20.9805 42.8378 20.8202 42.9447 20.6812C43.0515 20.5423 43.1905 20.414 43.3722 20.3178C43.5539 20.2216 43.7676 20.1361 44.0242 20.0934C44.2807 20.0399 44.5158 20.0293 44.7403 20.0613C44.954 20.0934 45.1464 20.1575 45.3067 20.2537C45.4671 20.3499 45.5953 20.4782 45.7022 20.6492C45.8091 20.8095 45.8839 20.9912 45.9267 21.205C45.9374 21.2905 45.948 21.376 45.948 21.4615C45.948 21.547 45.948 21.6218 45.9374 21.6966C45.9267 21.7607 45.916 21.8356 45.8946 21.889C45.8732 21.9531 45.8518 21.9852 45.8412 22.0173C45.8198 22.0386 45.8091 22.06 45.7984 22.0707C45.7877 22.0814 45.7663 22.0921 45.745 22.1028C45.7236 22.1135 45.7022 22.1241 45.6701 22.1241C45.6381 22.1348 45.606 22.1455 45.5633 22.1455C45.5098 22.1562 45.4778 22.1562 45.435 22.1669C45.4029 22.1669 45.3709 22.1669 45.3495 22.1669C45.3281 22.1669 45.3067 22.1562 45.2961 22.1455C45.2854 22.1348 45.2747 22.1241 45.2747 22.1135C45.2747 22.0921 45.2747 22.06 45.2961 22.0173C45.3174 21.9745 45.3388 21.9211 45.3602 21.8569C45.3816 21.7928 45.4029 21.718 45.4136 21.6325C45.4243 21.547 45.4243 21.4508 45.4029 21.3332C45.3816 21.2156 45.3281 21.1088 45.264 21.0233C45.1999 20.9378 45.1144 20.8736 45.0075 20.8202C44.9006 20.7667 44.783 20.7454 44.6441 20.7347C44.5051 20.724 44.3555 20.7347 44.1845 20.7667C44.0028 20.7988 43.8532 20.8522 43.7249 20.9164C43.5966 20.9805 43.5004 21.0553 43.4363 21.1408C43.3615 21.2263 43.3187 21.3225 43.2974 21.4294C43.276 21.5363 43.276 21.6432 43.2974 21.7714C43.3187 21.8783 43.3508 21.9745 43.3936 22.0493C43.4363 22.1241 43.4791 22.1883 43.5218 22.2417C43.5646 22.2952 43.5966 22.3379 43.6394 22.37C43.6715 22.402 43.6928 22.4341 43.6928 22.4448C43.6928 22.4662 43.6928 22.4769 43.6928 22.4875C43.6928 22.4982 43.6715 22.5089 43.6608 22.5196C43.6394 22.5303 43.618 22.541 43.5859 22.5517C43.5432 22.5303 43.5004 22.5517 43.4363 22.5624ZM43.3187 15.1554L43.1691 14.8668C43.105 14.7493 43.0408 14.6638 42.9981 14.6103C42.9447 14.5569 42.8912 14.5248 42.8378 14.5034C42.7843 14.4821 42.7309 14.4821 42.6668 14.4928C42.6026 14.5034 42.5492 14.5248 42.4851 14.5569C42.4209 14.589 42.3782 14.6317 42.3354 14.6745C42.3034 14.7172 42.2713 14.7707 42.2606 14.8241C42.2499 14.8775 42.2392 14.9417 42.2606 15.0165C42.2713 15.0913 42.314 15.1768 42.3675 15.2837L42.5278 15.583L43.3187 15.1554ZM41.3842 16.9297C41.3735 16.9404 41.3521 16.9404 41.3414 16.9404C41.3307 16.9404 41.3094 16.9297 41.288 16.9083C41.2666 16.8869 41.2559 16.8655 41.2239 16.8335C41.2025 16.8014 41.1704 16.7587 41.149 16.7052C41.117 16.6518 41.0956 16.609 41.0849 16.5663C41.0635 16.5235 41.0635 16.5021 41.0528 16.4701C41.0528 16.438 41.0528 16.4273 41.0528 16.406C41.0528 16.3953 41.0635 16.3846 41.0849 16.3739L42.111 15.8181L41.9934 15.615C41.9506 15.5295 41.9079 15.4654 41.8651 15.4333C41.8224 15.4013 41.7796 15.3692 41.7262 15.3585C41.6728 15.3478 41.6086 15.3371 41.5445 15.3371C41.4804 15.3371 41.4056 15.3478 41.32 15.3585L40.6146 15.4761C40.5932 15.4761 40.5719 15.4761 40.5612 15.4761C40.5398 15.4761 40.5184 15.4547 40.5077 15.444C40.4864 15.4226 40.465 15.4013 40.4436 15.3585C40.4222 15.3264 40.3902 15.273 40.3581 15.2089C40.326 15.1447 40.294 15.0913 40.2833 15.0485C40.2726 15.0058 40.2619 14.9737 40.2512 14.9524C40.2512 14.931 40.2512 14.9096 40.2619 14.8989C40.2726 14.8882 40.2726 14.8775 40.2833 14.8775C40.294 14.8668 40.3154 14.8668 40.3367 14.8562C40.3581 14.8455 40.4009 14.8455 40.4436 14.8348L41.0956 14.7493C41.1811 14.7386 41.2559 14.7279 41.3307 14.7279C41.3949 14.7279 41.459 14.7386 41.5231 14.7493C41.5872 14.76 41.6407 14.7813 41.6834 14.8027C41.7369 14.8241 41.7796 14.8562 41.8224 14.8989C41.801 14.8027 41.7903 14.7065 41.7903 14.6103C41.7903 14.5248 41.8117 14.4393 41.8438 14.3645C41.8758 14.2897 41.9186 14.2149 41.9827 14.1507C42.0468 14.0866 42.1217 14.0332 42.2072 13.9797C42.3354 13.9156 42.453 13.8728 42.5813 13.8622C42.7095 13.8515 42.8271 13.8728 42.9447 13.9156C43.0622 13.9584 43.1691 14.0439 43.2867 14.14C43.3936 14.2469 43.5111 14.4073 43.6287 14.6317L43.9921 15.3051C44.0242 15.3478 44.0242 15.4013 44.0135 15.444C44.0028 15.4868 43.96 15.5295 43.8959 15.5616L41.3842 16.9297ZM41.0528 11.8207L39.7275 12.2803L40.2726 12.975L41.0528 11.8207ZM40.123 14.3538C40.0909 14.4073 40.0588 14.4393 40.0375 14.4714C40.0161 14.4928 39.9947 14.5034 39.9626 14.5034C39.9413 14.5034 39.9092 14.4821 39.8771 14.45C39.8451 14.4179 39.8023 14.3645 39.7596 14.3111C39.7061 14.2469 39.6741 14.1935 39.642 14.1614C39.6206 14.1187 39.5992 14.0973 39.5886 14.0759C39.5779 14.0545 39.5779 14.0332 39.5779 14.0118C39.5779 14.0011 39.5886 13.9797 39.5992 13.9584L39.9626 13.4026L39.2465 12.4834L38.6373 12.6971C38.6159 12.7078 38.5946 12.7078 38.5732 12.7078C38.5518 12.7078 38.5304 12.6971 38.5197 12.6865C38.4984 12.6758 38.477 12.6544 38.4449 12.6223C38.4129 12.5903 38.3808 12.5475 38.338 12.4941C38.2953 12.4406 38.2632 12.3872 38.2418 12.3551C38.2205 12.3231 38.2098 12.291 38.2205 12.2589C38.2205 12.2375 38.2418 12.2162 38.2739 12.1948C38.306 12.1734 38.3487 12.1627 38.4022 12.1414L41.1811 11.2008C41.2132 11.1901 41.2345 11.1901 41.2559 11.1901C41.2773 11.1901 41.2987 11.2008 41.32 11.2115C41.3414 11.2329 41.3735 11.2542 41.4056 11.297C41.4376 11.3397 41.4804 11.3825 41.5338 11.4466C41.5979 11.5214 41.6407 11.5856 41.6728 11.6283C41.7048 11.6711 41.7262 11.7138 41.7369 11.7459C41.7476 11.778 41.7476 11.7993 41.7476 11.8207C41.7476 11.8421 41.7369 11.8635 41.7155 11.8955L40.123 14.3538ZM38.8404 9.75788C38.8831 9.71513 38.9152 9.66169 38.9366 9.61894C38.958 9.5655 38.9686 9.52274 38.958 9.4693C38.9473 9.41586 38.9366 9.36242 38.9045 9.31967C38.8724 9.26622 38.819 9.2021 38.7549 9.13797L38.5197 8.91351L37.9639 9.50137L38.2205 9.74719C38.2846 9.81132 38.3487 9.85408 38.4022 9.87545C38.4556 9.89683 38.509 9.90752 38.5625 9.90752C38.6159 9.90752 38.6587 9.88614 38.7121 9.86476C38.7549 9.8327 38.7976 9.80064 38.8404 9.75788ZM38.0388 10.8481C38.0922 10.7946 38.1243 10.7412 38.1456 10.6878C38.167 10.6343 38.1777 10.5702 38.167 10.5061C38.1563 10.4419 38.135 10.3885 38.0922 10.3137C38.0495 10.2495 37.996 10.1747 37.9105 10.0999L37.6433 9.84339L37.0341 10.4954L37.3654 10.8053C37.4295 10.8695 37.4937 10.9122 37.5471 10.9336C37.6005 10.9657 37.6647 10.9763 37.7181 10.9763C37.7716 10.9763 37.8357 10.9657 37.8891 10.9443C37.9426 10.9336 37.996 10.8908 38.0388 10.8481ZM38.5411 11.2756C38.4663 11.3611 38.3808 11.4146 38.306 11.468C38.2205 11.5107 38.135 11.5428 38.0495 11.5535C37.9639 11.5642 37.8784 11.5642 37.7822 11.5535C37.6967 11.5428 37.6112 11.5107 37.515 11.4787C37.4295 11.4359 37.344 11.3932 37.2585 11.3291C37.173 11.2649 37.0875 11.2008 36.9913 11.1153L36.3928 10.5488C36.35 10.5167 36.3287 10.474 36.3287 10.4206C36.318 10.3778 36.3393 10.3244 36.3928 10.2709L38.2525 8.28291C38.2953 8.22947 38.3487 8.20809 38.3915 8.20809C38.4449 8.20809 38.477 8.22947 38.5197 8.26153L39.0969 8.79594C39.2358 8.9242 39.3427 9.05246 39.4175 9.15934C39.4924 9.27691 39.5458 9.38379 39.5672 9.49068C39.5886 9.59756 39.5779 9.70444 39.5458 9.81132C39.5137 9.91821 39.4496 10.0144 39.3534 10.1213C39.3 10.1747 39.2465 10.2175 39.1824 10.2602C39.1183 10.2923 39.0648 10.3244 39.0007 10.335C38.9366 10.3457 38.8724 10.3564 38.7976 10.3457C38.7335 10.3457 38.6587 10.3244 38.5946 10.2923C38.648 10.3671 38.6907 10.4419 38.7121 10.5167C38.7442 10.5916 38.7549 10.6771 38.7549 10.7626C38.7549 10.8481 38.7335 10.9336 38.7014 11.0191C38.6694 11.126 38.6052 11.2008 38.5411 11.2756ZM35.9653 8.24016C36.0614 8.10121 36.1256 7.97295 36.179 7.84469C36.2325 7.71643 36.2538 7.59886 36.2538 7.48129C36.2538 7.36372 36.2218 7.25684 36.1683 7.16065C36.1149 7.06445 36.0187 6.96826 35.8904 6.88275C35.7622 6.79725 35.6339 6.75449 35.5163 6.74381C35.3988 6.73312 35.2812 6.75449 35.1743 6.79725C35.0674 6.84 34.9712 6.91482 34.8751 7.01101C34.7789 7.10721 34.6934 7.21409 34.6078 7.34235C34.5117 7.48129 34.4475 7.62024 34.3941 7.7485C34.3406 7.87676 34.3086 7.99433 34.3086 8.1119C34.3086 8.22947 34.3406 8.33635 34.3941 8.43254C34.4475 8.52874 34.5437 8.62493 34.672 8.71044C34.8002 8.79594 34.9285 8.8387 35.0461 8.84938C35.1636 8.86007 35.2812 8.8387 35.3881 8.79594C35.495 8.7425 35.6019 8.67837 35.698 8.58218C35.7942 8.4753 35.8904 8.36841 35.9653 8.24016ZM36.5424 8.58218C36.4035 8.79594 36.2538 8.97764 36.0828 9.1059C35.9225 9.24485 35.7408 9.33035 35.5591 9.38379C35.3774 9.42655 35.185 9.43724 34.9819 9.39448C34.7789 9.35173 34.5865 9.26622 34.3727 9.13797C34.1696 8.99902 34.0093 8.86007 33.8917 8.71044C33.7742 8.5608 33.6993 8.38979 33.6673 8.21878C33.6352 8.03708 33.6566 7.85538 33.71 7.6523C33.7742 7.44923 33.8704 7.23546 34.0307 7.01101C34.1696 6.79725 34.3193 6.62624 34.4796 6.49798C34.6399 6.35903 34.8216 6.27353 35.0033 6.22008C35.185 6.16664 35.3774 6.16664 35.5805 6.2094C35.7836 6.25215 35.9759 6.33765 36.1897 6.46591C36.3928 6.59417 36.5424 6.73312 36.66 6.89344C36.7776 7.04308 36.8524 7.2034 36.8844 7.3851C36.9165 7.55611 36.9058 7.7485 36.8417 7.95157C36.7882 8.14396 36.6921 8.35773 36.5424 8.58218ZM34.0948 5.5681C34.0734 5.61086 34.0521 5.65361 34.0414 5.67499C34.02 5.70705 34.0093 5.72843 33.9879 5.73911C33.9772 5.7498 33.9559 5.76049 33.9452 5.77118C33.9345 5.77118 33.9131 5.77118 33.9024 5.76049L32.9619 5.33296L31.9037 7.62024C31.9037 7.63093 31.893 7.64162 31.8717 7.6523C31.861 7.6523 31.8396 7.66299 31.8075 7.6523C31.7862 7.6523 31.7541 7.64162 31.7113 7.63093C31.6686 7.62024 31.6258 7.59886 31.5617 7.5668C31.5083 7.54542 31.4655 7.51336 31.4228 7.50267C31.3907 7.48129 31.3586 7.45992 31.3479 7.44923C31.3266 7.42785 31.3159 7.41716 31.3159 7.39579C31.3052 7.3851 31.3159 7.36372 31.3159 7.35303L32.5023 4.77718C32.5343 4.71305 32.5664 4.68098 32.6092 4.65961C32.6519 4.63823 32.7053 4.64892 32.7588 4.67029L34.1055 5.29021C34.1269 5.3009 34.1483 5.33296 34.1483 5.37572C34.1483 5.41847 34.1269 5.4826 34.0948 5.5681ZM30.3646 5.41847C30.4074 5.25815 30.4394 5.10851 30.4501 4.98025C30.4608 4.8413 30.4501 4.72373 30.4181 4.61685C30.386 4.50997 30.3219 4.41378 30.2364 4.33896C30.1509 4.26414 30.0333 4.20001 29.8837 4.15726C29.734 4.11451 29.6058 4.10382 29.4882 4.13588C29.3706 4.16795 29.2637 4.22139 29.1782 4.29621C29.0927 4.37102 29.0179 4.46722 28.9538 4.59548C28.8897 4.71305 28.8469 4.8413 28.8041 4.98025C28.7614 5.14057 28.7293 5.29021 28.7186 5.42916C28.708 5.5681 28.7186 5.68567 28.7507 5.80324C28.7828 5.91013 28.8469 6.00632 28.9324 6.08114C29.0179 6.15596 29.1355 6.22008 29.2851 6.26284C29.4348 6.30559 29.563 6.30559 29.6806 6.28421C29.7982 6.26284 29.8943 6.19871 29.9905 6.12389C30.076 6.04907 30.1509 5.94219 30.215 5.82462C30.2684 5.69636 30.3219 5.55742 30.3646 5.41847ZM31.0059 5.55742C30.9418 5.80324 30.8456 6.01701 30.728 6.19871C30.6105 6.38041 30.4715 6.51935 30.3112 6.62624C30.1509 6.72243 29.9692 6.78656 29.7661 6.80794C29.563 6.82931 29.3492 6.80794 29.1141 6.74381C28.879 6.67968 28.6866 6.59417 28.5263 6.4766C28.3659 6.36972 28.2484 6.23077 28.1735 6.07045C28.088 5.91013 28.056 5.72843 28.0453 5.51466C28.0453 5.3009 28.0774 5.06576 28.1522 4.79855C28.2163 4.55272 28.3125 4.34965 28.4301 4.16795C28.5476 3.98625 28.6866 3.8473 28.8469 3.75111C29.0072 3.64422 29.1889 3.59078 29.392 3.56941C29.5951 3.54803 29.8088 3.56941 30.0547 3.63354C30.2791 3.69767 30.4822 3.78317 30.6318 3.90074C30.7815 4.00762 30.9097 4.14657 30.9845 4.29621C31.07 4.45653 31.1128 4.63823 31.1128 4.8413C31.1128 5.06576 31.0807 5.3009 31.0059 5.55742ZM26.9872 6.10251C26.9872 6.12389 26.9765 6.13458 26.9658 6.14527C26.9551 6.15595 26.9337 6.16664 26.9123 6.16664C26.891 6.17733 26.8589 6.17733 26.8161 6.17733C26.7734 6.17733 26.7199 6.17733 26.6665 6.16664C26.6024 6.15595 26.5489 6.15595 26.5169 6.14527C26.4741 6.13458 26.4421 6.12389 26.4207 6.1132C26.3993 6.10251 26.3779 6.09183 26.3779 6.08114C26.3672 6.07045 26.3672 6.05976 26.3672 6.03838L26.6024 3.53734L25.9397 3.47321C25.8542 3.83661 25.7794 4.14657 25.7153 4.41378C25.6404 4.68098 25.5763 4.91612 25.5015 5.10851C25.4267 5.3009 25.3625 5.45053 25.2877 5.5681C25.2129 5.68567 25.1274 5.78187 25.0419 5.846C24.9564 5.91013 24.8602 5.95288 24.7533 5.97426C24.6464 5.99563 24.5396 5.99563 24.4006 5.98494C24.3792 5.98494 24.3579 5.97426 24.3365 5.96357C24.3151 5.95288 24.3044 5.94219 24.2937 5.92081C24.283 5.89944 24.283 5.87806 24.283 5.846C24.283 5.81393 24.283 5.77118 24.283 5.72843C24.2937 5.6643 24.2937 5.60017 24.3044 5.55742C24.3151 5.51466 24.3258 5.4826 24.3258 5.46122C24.3365 5.43984 24.3472 5.41847 24.3579 5.41847C24.3685 5.40778 24.3899 5.40778 24.4006 5.40778C24.454 5.41847 24.4968 5.40778 24.5502 5.39709C24.593 5.3864 24.6464 5.34365 24.6892 5.29021C24.7319 5.23677 24.7854 5.15126 24.8388 5.05507C24.8923 4.94819 24.9457 4.80924 24.9991 4.63823C25.0526 4.46722 25.1167 4.25345 25.1702 4.00762C25.2343 3.7618 25.2984 3.46253 25.3732 3.1205C25.3946 3.035 25.416 2.98156 25.4481 2.94949C25.4801 2.91743 25.5229 2.90674 25.5763 2.91743L27.1047 3.06706C27.1582 3.07775 27.2009 3.09913 27.233 3.13119C27.265 3.16326 27.2757 3.2167 27.265 3.28083L26.9872 6.10251ZM22.2737 3.51597L21.9316 4.87337L22.8188 4.80924L22.2737 3.51597ZM23.8769 5.69636C23.8983 5.7498 23.9196 5.79256 23.9196 5.83531C23.9303 5.86737 23.9196 5.88875 23.9089 5.91013C23.8983 5.9315 23.8662 5.94219 23.8234 5.95288C23.7807 5.96357 23.7166 5.96357 23.6311 5.97426C23.5562 5.98494 23.4921 5.98494 23.4387 5.98494C23.3959 5.98494 23.3532 5.98494 23.3318 5.97426C23.3104 5.97426 23.289 5.96357 23.2783 5.95288C23.2677 5.94219 23.257 5.92081 23.2463 5.89944L22.9898 5.29021L21.8354 5.36503L21.6858 5.98494C21.6751 6.00632 21.6751 6.0277 21.6644 6.04907C21.6537 6.05976 21.6324 6.08114 21.6217 6.09183C21.6003 6.10251 21.5682 6.1132 21.5255 6.1132C21.4827 6.12389 21.4293 6.12389 21.3545 6.13458C21.2796 6.13458 21.2262 6.14527 21.1835 6.14527C21.1407 6.14527 21.1086 6.13458 21.0979 6.1132C21.0766 6.09183 21.0659 6.07045 21.0766 6.03838C21.0766 6.00632 21.0873 5.96357 21.0979 5.89944L21.8568 3.06706C21.8675 3.04569 21.8782 3.01362 21.8889 3.00293C21.8996 2.98156 21.9209 2.97087 21.9423 2.96018C21.9744 2.94949 22.0064 2.9388 22.0599 2.9388C22.1133 2.92811 22.1775 2.92811 22.2523 2.91743C22.3485 2.90674 22.4233 2.90674 22.4767 2.90674C22.5302 2.90674 22.5729 2.90674 22.6157 2.91743C22.6477 2.92811 22.6691 2.9388 22.6905 2.94949C22.7012 2.96018 22.7226 2.99224 22.7332 3.02431L23.8769 5.69636ZM20.4246 6.17733C20.4246 6.18802 20.4246 6.2094 20.4246 6.22008C20.4139 6.23077 20.4032 6.25215 20.3818 6.26284C20.3605 6.27353 20.3284 6.2949 20.2963 6.30559C20.2536 6.31628 20.2108 6.33765 20.1467 6.34834C20.0826 6.35903 20.0398 6.38041 19.9971 6.38041C19.9543 6.3911 19.9222 6.3911 19.9009 6.3911C19.8795 6.3911 19.8581 6.38041 19.8474 6.36972C19.8367 6.35903 19.8261 6.34834 19.8261 6.32697L19.5161 5.10851L18.3831 5.3864L18.6931 6.61555C18.6931 6.62624 18.6931 6.64761 18.6931 6.6583C18.6824 6.66899 18.6717 6.69037 18.6503 6.70105C18.629 6.71174 18.5969 6.73312 18.5648 6.74381C18.5221 6.75449 18.4793 6.77587 18.4152 6.78656C18.3511 6.79725 18.3083 6.80794 18.2656 6.81862C18.2228 6.82931 18.1908 6.82931 18.1694 6.82931C18.148 6.82931 18.1266 6.81862 18.1159 6.80794C18.1052 6.79725 18.0946 6.78656 18.0839 6.76518L17.3678 3.91143C17.3678 3.89005 17.3678 3.87937 17.3678 3.86868C17.3785 3.85799 17.3891 3.83661 17.4105 3.82592C17.4319 3.81524 17.464 3.79386 17.5067 3.78317C17.5495 3.77248 17.5922 3.75111 17.6563 3.74042C17.7205 3.72973 17.7632 3.71904 17.806 3.70835C17.8487 3.69767 17.8808 3.69767 17.9022 3.70835C17.9235 3.70835 17.9449 3.71904 17.9556 3.72973C17.9663 3.74042 17.977 3.75111 17.977 3.77248L18.2549 4.88406L19.3878 4.59548L19.1099 3.4839C19.1099 3.47321 19.1099 3.45184 19.1099 3.44115C19.1206 3.43046 19.1313 3.40908 19.1527 3.3984C19.1741 3.38771 19.2061 3.36633 19.2382 3.35564C19.281 3.34496 19.3237 3.32358 19.3878 3.31289C19.452 3.29151 19.4947 3.29151 19.5375 3.28083C19.5802 3.28083 19.6123 3.27014 19.6337 3.28083C19.655 3.28083 19.6764 3.29151 19.6871 3.3022C19.6978 3.31289 19.7085 3.32358 19.7192 3.33427L20.4246 6.17733ZM12.6863 6.46591L12.4084 6.63692C12.2909 6.71174 12.216 6.77587 12.1626 6.82931C12.1198 6.88275 12.0878 6.93619 12.0664 6.98964C12.0557 7.04308 12.045 7.10721 12.0664 7.16065C12.0771 7.22478 12.1092 7.27822 12.1412 7.33166C12.1733 7.3851 12.216 7.43854 12.2695 7.4706C12.3122 7.50267 12.3657 7.52405 12.4298 7.54542C12.4832 7.55611 12.5474 7.55611 12.6222 7.53473C12.697 7.51336 12.7825 7.4706 12.8894 7.40648L13.178 7.22478L12.6863 6.46591ZM14.5781 8.28291C14.5888 8.2936 14.5888 8.31497 14.5888 8.32566C14.5888 8.33635 14.5781 8.35773 14.5568 8.3791C14.5461 8.40048 14.514 8.42186 14.4819 8.44323C14.4499 8.4753 14.4071 8.49667 14.3537 8.52874C14.3002 8.5608 14.2575 8.58218 14.2254 8.60356C14.1827 8.62493 14.1613 8.63562 14.1292 8.63562C14.1079 8.64631 14.0865 8.64631 14.0651 8.63562C14.0544 8.62493 14.0437 8.62493 14.033 8.60356L13.4131 7.62024L13.21 7.7485C13.1245 7.80194 13.0711 7.84469 13.039 7.88744C13.007 7.9302 12.9856 7.98364 12.9749 8.03708C12.9642 8.09052 12.9642 8.15465 12.9642 8.21878C12.9749 8.28291 12.9856 8.35773 13.007 8.44323L13.1673 9.13797C13.1673 9.15934 13.1673 9.18072 13.1673 9.2021C13.1673 9.22347 13.1566 9.24485 13.1352 9.26622C13.1139 9.2876 13.0925 9.30898 13.0604 9.34104C13.0283 9.36242 12.9749 9.39448 12.9215 9.43724C12.8573 9.47999 12.8039 9.50137 12.7718 9.52274C12.7291 9.54412 12.7077 9.55481 12.6756 9.55481C12.6543 9.56549 12.6329 9.56549 12.6222 9.55481C12.6115 9.55481 12.6008 9.54412 12.5901 9.53343C12.5794 9.52274 12.5688 9.50137 12.5688 9.47999C12.5581 9.45861 12.5474 9.41586 12.5367 9.37311L12.4084 8.73181C12.3871 8.64631 12.3871 8.57149 12.3764 8.49667C12.3657 8.43254 12.3764 8.36841 12.3764 8.30429C12.3871 8.24016 12.3977 8.18672 12.4191 8.13327C12.4405 8.07983 12.4619 8.03708 12.5046 7.99433C12.4084 8.02639 12.3122 8.03708 12.2267 8.04777C12.1412 8.04777 12.0557 8.03708 11.9809 8.0157C11.9061 7.99433 11.8313 7.95157 11.7671 7.89813C11.703 7.84469 11.6389 7.76988 11.5854 7.68437C11.5106 7.5668 11.4572 7.43854 11.4358 7.32097C11.4144 7.19271 11.4251 7.07514 11.4679 6.95757C11.5106 6.84 11.5747 6.72243 11.6709 6.60486C11.7671 6.48729 11.9275 6.36972 12.1412 6.23077L12.7932 5.82462C12.836 5.79256 12.8787 5.78187 12.9322 5.79256C12.9749 5.80324 13.0177 5.83531 13.0604 5.88875L14.5781 8.28291ZM9.50124 8.95627L10.0463 10.2389L10.709 9.651L9.50124 8.95627ZM12.0878 9.71513C12.1412 9.74719 12.184 9.76857 12.2054 9.78995C12.2374 9.81132 12.2481 9.8327 12.2481 9.85408C12.2481 9.87545 12.2267 9.90752 12.1947 9.93958C12.1626 9.97165 12.1198 10.0144 12.0557 10.0678C11.9916 10.1213 11.9488 10.164 11.9061 10.1961C11.8633 10.2282 11.842 10.2389 11.8206 10.2602C11.7992 10.2709 11.7778 10.2709 11.7671 10.2709C11.7458 10.2709 11.7351 10.2602 11.7137 10.2495L11.1365 9.91821L10.2601 10.6984L10.5166 11.2863C10.5273 11.3077 10.5273 11.3291 10.538 11.3504C10.538 11.3718 10.538 11.3932 10.5273 11.4146C10.5166 11.4359 10.4952 11.4573 10.4632 11.4894C10.4311 11.5214 10.3884 11.5535 10.3456 11.6069C10.2922 11.6497 10.2494 11.6924 10.2067 11.7138C10.1746 11.7352 10.1425 11.7459 10.1212 11.7459C10.0998 11.7459 10.0784 11.7245 10.057 11.6924C10.0356 11.6604 10.0143 11.6283 9.9929 11.5642L8.88132 8.86007C8.87063 8.8387 8.85994 8.80663 8.85994 8.78525C8.85994 8.76388 8.87063 8.7425 8.88132 8.72113C8.9027 8.69975 8.92407 8.66769 8.95614 8.62493C8.9882 8.59287 9.04164 8.55011 9.10577 8.49667C9.18059 8.43254 9.23403 8.3791 9.27678 8.34704C9.31954 8.31497 9.36229 8.28291 9.38367 8.27222C9.41573 8.26153 9.43711 8.25084 9.45848 8.25084C9.47986 8.25084 9.50124 8.27222 9.5333 8.28291L12.0878 9.71513ZM9.64018 12.1948C9.65087 12.2055 9.66156 12.2162 9.66156 12.2375C9.66156 12.2589 9.66156 12.2696 9.65087 12.3017C9.64018 12.3231 9.6295 12.3551 9.60812 12.3872C9.58674 12.4192 9.55468 12.462 9.52261 12.5154C9.47986 12.5582 9.4478 12.6009 9.41573 12.633C9.38367 12.6651 9.36229 12.6865 9.34091 12.6971C9.31954 12.7078 9.29816 12.7185 9.28747 12.7185C9.2661 12.7185 9.25541 12.7185 9.24472 12.7078L8.2614 11.9169L7.53461 12.8254L8.51792 13.6163C8.52861 13.627 8.5393 13.6377 8.5393 13.6484C8.5393 13.6591 8.5393 13.6805 8.52861 13.7125C8.51792 13.7339 8.50723 13.766 8.48586 13.798C8.46448 13.8301 8.43242 13.8728 8.38966 13.9263C8.34691 13.9797 8.31484 14.0118 8.29347 14.0439C8.2614 14.0759 8.24003 14.0973 8.21865 14.108C8.19727 14.1187 8.1759 14.1294 8.16521 14.1294C8.14383 14.1294 8.13315 14.1294 8.12246 14.1187L5.82449 12.2803C5.8138 12.2696 5.80311 12.2589 5.79243 12.2375C5.79243 12.2269 5.79243 12.2055 5.80311 12.1734C5.8138 12.152 5.82449 12.12 5.84587 12.0879C5.86724 12.0558 5.89931 12.0131 5.93137 11.9597C5.97413 11.9062 6.00619 11.8741 6.02757 11.8421C6.05963 11.81 6.08101 11.7886 6.10238 11.778C6.12376 11.7673 6.14514 11.7566 6.15583 11.7566C6.1772 11.7566 6.18789 11.7566 6.19858 11.7673L7.09639 12.4834L7.82319 11.5749L6.92538 10.8588C6.91469 10.8481 6.904 10.8374 6.904 10.816C6.904 10.7946 6.904 10.784 6.91469 10.7519C6.92538 10.7305 6.93607 10.6984 6.95744 10.6664C6.97882 10.6343 7.01088 10.5916 7.05364 10.5381C7.09639 10.4954 7.12845 10.4526 7.16052 10.4206C7.19258 10.3885 7.21396 10.3671 7.23533 10.3564C7.25671 10.3457 7.27809 10.335 7.28878 10.335C7.31015 10.335 7.32084 10.335 7.33153 10.3457L9.64018 12.1948ZM6.6368 14.8027C6.56198 14.76 6.49785 14.7386 6.43372 14.7279C6.36959 14.7172 6.30546 14.7172 6.24133 14.7386C6.1772 14.76 6.12376 14.792 6.07032 14.8455C6.01688 14.8989 5.95275 14.9844 5.87793 15.1127L5.69623 15.4333L6.56198 15.9143L6.74368 15.583C6.81849 15.444 6.86125 15.3478 6.87194 15.2623C6.88262 15.1875 6.88262 15.1127 6.86125 15.0485C6.83987 14.9844 6.80781 14.9417 6.76505 14.8989C6.7223 14.8668 6.67955 14.8348 6.6368 14.8027ZM6.904 14.2042C7.03226 14.279 7.13914 14.3645 7.22465 14.4607C7.31015 14.5569 7.37428 14.6745 7.40635 14.8027C7.43841 14.931 7.43841 15.0806 7.40635 15.2409C7.37428 15.4013 7.29946 15.615 7.16052 15.8502L6.78643 16.5342C6.77574 16.5556 6.75437 16.577 6.74368 16.5983C6.7223 16.6197 6.71161 16.6304 6.67955 16.6304C6.65817 16.6411 6.6368 16.6411 6.60473 16.6411C6.57267 16.6411 6.55129 16.6304 6.51923 16.609L4.03956 15.2196C4.02887 15.2089 4.01818 15.1982 4.00749 15.1875C4.00749 15.1768 4.00749 15.1554 4.00749 15.1234C4.01818 15.102 4.02887 15.0592 4.03956 15.0272C4.06094 14.9951 4.08231 14.9417 4.10369 14.8882C4.13575 14.8348 4.15713 14.792 4.18919 14.76C4.21057 14.7279 4.23195 14.6958 4.25332 14.6851C4.2747 14.6638 4.28539 14.6531 4.30676 14.6531C4.31745 14.6531 4.33883 14.6531 4.34952 14.6638L5.27939 15.1768L5.49316 14.792C5.61073 14.589 5.71761 14.4286 5.82449 14.3324C5.93137 14.2362 6.03826 14.1614 6.15583 14.108C6.2734 14.0652 6.40165 14.0439 6.52991 14.0545C6.6368 14.0973 6.77574 14.1294 6.904 14.2042ZM6.21995 17.5175C6.23064 17.5175 6.25202 17.5282 6.25202 17.5496C6.26271 17.5603 6.26271 17.5817 6.26271 17.603C6.26271 17.6244 6.25202 17.6565 6.25202 17.6992C6.24133 17.742 6.21995 17.7847 6.19858 17.8489C6.1772 17.913 6.15583 17.9557 6.14514 17.9878C6.12376 18.0199 6.11307 18.0519 6.0917 18.0733C6.07032 18.0947 6.05963 18.1054 6.04894 18.1054C6.02757 18.1161 6.01688 18.1161 6.00619 18.1054L3.63341 17.261L3.40896 17.8916C3.74029 18.0626 4.02887 18.2123 4.2747 18.3512C4.52053 18.4902 4.72361 18.6184 4.89462 18.7253C5.05494 18.8429 5.19389 18.9497 5.29008 19.0566C5.38627 19.1635 5.4504 19.2597 5.49316 19.3559C5.53591 19.4628 5.5466 19.559 5.5466 19.6659C5.53591 19.7727 5.51453 19.8903 5.47178 20.0079C5.46109 20.0293 5.4504 20.0506 5.43972 20.0613C5.42903 20.072 5.40765 20.0827 5.38627 20.0934C5.3649 20.0934 5.34352 20.0934 5.31146 20.0934C5.27939 20.0827 5.23664 20.072 5.19389 20.0613C5.12976 20.0399 5.07632 20.0186 5.03356 19.9972C4.99081 19.9865 4.96943 19.9651 4.94806 19.9437C4.92668 19.9224 4.91599 19.9117 4.91599 19.901C4.91599 19.8903 4.91599 19.8689 4.91599 19.8476C4.93737 19.8048 4.93737 19.7514 4.93737 19.6979C4.93737 19.6445 4.9053 19.591 4.87324 19.5376C4.83049 19.4735 4.76636 19.4093 4.68085 19.3345C4.59535 19.2597 4.46709 19.1742 4.31745 19.078C4.16782 18.9818 3.97543 18.8749 3.75098 18.7574C3.52653 18.6398 3.25932 18.5008 2.93867 18.3405C2.86386 18.2978 2.8211 18.2657 2.78904 18.2229C2.76766 18.1802 2.76766 18.1374 2.78904 18.084L3.30207 16.6411C3.32345 16.5877 3.35551 16.5449 3.39827 16.5342C3.44102 16.5128 3.49446 16.5128 3.55859 16.5449L6.21995 17.5175ZM2.5539 21.4508L3.78304 22.1135L3.93268 21.2477L2.5539 21.4508ZM5.05494 20.4354C5.11907 20.4247 5.16182 20.4247 5.19389 20.4247C5.22595 20.4247 5.24733 20.4354 5.2687 20.4568C5.27939 20.4782 5.29008 20.5102 5.27939 20.553C5.27939 20.5957 5.2687 20.6599 5.25802 20.7347C5.24733 20.8202 5.22595 20.8843 5.21526 20.9271C5.20457 20.9698 5.19389 21.0019 5.1832 21.0339C5.17251 21.0553 5.16182 21.066 5.14045 21.0767C5.12976 21.0874 5.10838 21.0874 5.087 21.0874L4.43502 21.1836L4.23195 22.3379L4.79842 22.6372C4.8198 22.6479 4.83049 22.6586 4.85186 22.6692C4.86255 22.6799 4.87324 22.7013 4.88393 22.7227C4.89462 22.7441 4.89462 22.7868 4.88393 22.8296C4.88393 22.8723 4.87324 22.9258 4.86255 22.9899C4.85186 23.0647 4.84118 23.1181 4.83049 23.1609C4.8198 23.2037 4.79842 23.225 4.78773 23.2464C4.76636 23.2571 4.74498 23.2571 4.70223 23.2464C4.67016 23.2357 4.62741 23.2143 4.57397 23.193L2.0088 21.7714C1.98742 21.7607 1.96605 21.7394 1.94467 21.7287C1.93398 21.718 1.92329 21.6859 1.92329 21.6646C1.92329 21.6325 1.92329 21.6004 1.92329 21.547C1.93398 21.4935 1.94467 21.4294 1.95536 21.3546C1.97673 21.2584 1.98742 21.1836 1.99811 21.1301C2.0088 21.0767 2.01949 21.0339 2.04086 21.0019C2.05155 20.9698 2.07293 20.9484 2.0943 20.9378C2.11568 20.9271 2.13706 20.9271 2.16912 20.9164L5.05494 20.4354ZM2.66078 24.0694C2.5539 24.0694 2.4577 24.0801 2.39357 24.1228C2.31876 24.1549 2.26532 24.2083 2.23325 24.2618C2.20119 24.3152 2.16912 24.3794 2.15843 24.4435C2.14775 24.5076 2.13706 24.5717 2.13706 24.6359L2.12637 24.9031L3.1845 24.9351L3.19519 24.6466C3.19519 24.5504 3.1845 24.4649 3.16313 24.39C3.14175 24.3259 3.099 24.2618 3.05624 24.219C3.01349 24.1763 2.94936 24.1335 2.88523 24.1122C2.8211 24.0801 2.74629 24.0694 2.66078 24.0694ZM2.6394 23.396C2.81042 23.396 2.97074 23.4388 3.099 23.4922C3.23794 23.5457 3.34483 23.6312 3.43033 23.7381C3.51584 23.8449 3.59065 23.9732 3.63341 24.1335C3.67616 24.2832 3.69754 24.4649 3.68685 24.6679L3.67616 24.9245L4.67016 24.9565C4.69154 24.9565 4.70223 24.9672 4.71292 24.9779C4.72361 24.9886 4.73429 25.01 4.74498 25.0313C4.75567 25.0527 4.75567 25.0848 4.76636 25.1275C4.76636 25.1703 4.76636 25.2237 4.76636 25.2772C4.76636 25.3413 4.75567 25.3947 4.75567 25.4375C4.75567 25.4802 4.74498 25.5123 4.73429 25.5337C4.72361 25.5551 4.71292 25.5764 4.70223 25.5871C4.69154 25.5978 4.67016 25.5978 4.65948 25.5978L1.84848 25.523C1.77366 25.523 1.72022 25.5016 1.67746 25.4589C1.6454 25.4161 1.62402 25.3627 1.62402 25.2985L1.6454 24.5611C1.6454 24.4862 1.65609 24.4114 1.65609 24.3473C1.66678 24.2832 1.67746 24.1977 1.69884 24.1122C1.72022 24.0266 1.75228 23.9198 1.80572 23.8343C1.85916 23.7381 1.92329 23.6632 1.99811 23.5884C2.07293 23.5243 2.16912 23.4709 2.276 23.4388C2.39357 23.4067 2.51115 23.396 2.6394 23.396ZM4.53122 26.4315C4.57397 26.4315 4.61672 26.4208 4.64879 26.4208C4.68085 26.4208 4.70223 26.4208 4.72361 26.4315C4.74498 26.4422 4.75567 26.4422 4.76636 26.4529C4.77705 26.4636 4.78773 26.4742 4.78773 26.4956L4.96943 28.0561C4.96943 28.1095 4.95875 28.1523 4.93737 28.195C4.9053 28.2378 4.86255 28.2592 4.78773 28.2699L2.08362 28.5798C2.0088 28.5905 1.96605 28.5798 1.92329 28.5371C1.89123 28.505 1.86985 28.4623 1.85916 28.4088L1.67746 26.859C1.67746 26.8483 1.67746 26.8376 1.68815 26.8163C1.69884 26.8056 1.70953 26.7949 1.73091 26.7842C1.75228 26.7735 1.77366 26.7628 1.80572 26.7628C1.83779 26.7521 1.88054 26.7521 1.92329 26.7415C1.96605 26.7308 2.0088 26.7308 2.04086 26.7308C2.07293 26.7308 2.0943 26.7308 2.11568 26.7415C2.13706 26.7415 2.14775 26.7521 2.15843 26.7628C2.16912 26.7735 2.16912 26.7842 2.17981 26.8056L2.30807 27.9065L3.06693 27.821L2.96005 26.8804C2.96005 26.8697 2.96005 26.859 2.97074 26.8376C2.98143 26.827 2.99211 26.8163 3.01349 26.8056C3.03487 26.7949 3.05624 26.7842 3.08831 26.7735C3.12037 26.7628 3.15244 26.7628 3.20588 26.7521C3.24863 26.7415 3.29138 26.7415 3.32345 26.7415C3.35551 26.7415 3.37689 26.7415 3.39827 26.7521C3.41964 26.7521 3.43033 26.7628 3.44102 26.7735C3.45171 26.7842 3.4624 26.7949 3.4624 26.8163L3.56928 27.7461L4.44571 27.65L4.31745 26.5384C4.31745 26.5277 4.31745 26.5063 4.32814 26.4956C4.33883 26.4849 4.34952 26.4742 4.36021 26.4636C4.38158 26.4529 4.40296 26.4422 4.43502 26.4315C4.4564 26.4422 4.48846 26.4422 4.53122 26.4315ZM2.84248 30.6213L3.04556 31.316C3.29138 31.2733 3.50515 31.2412 3.68685 31.2198C3.86855 31.1984 4.03956 31.1771 4.17851 31.1664C4.31745 31.1557 4.44571 31.1557 4.55259 31.1557C4.65948 31.1557 4.75567 31.1557 4.83049 31.1664C4.9053 31.1771 4.98012 31.1877 5.04425 31.2091C5.10838 31.2305 5.16182 31.2412 5.20457 31.2626L4.86255 30.0548L2.84248 30.6213ZM5.78174 28.7295C5.80311 28.7188 5.8138 28.7188 5.82449 28.7295C5.83518 28.7401 5.85656 28.7508 5.86724 28.7615C5.87793 28.7829 5.88862 28.8043 5.91 28.8363C5.92068 28.8684 5.94206 28.9112 5.95275 28.9646C5.97413 29.018 5.97413 29.0608 5.98481 29.0929C5.98481 29.1249 5.9955 29.157 5.9955 29.1784C5.9955 29.1997 5.98481 29.2211 5.98481 29.2318C5.97413 29.2425 5.96344 29.2532 5.95275 29.2532L5.24733 29.4563L5.8138 31.455L6.51923 31.2519C6.52991 31.2412 6.55129 31.2412 6.56198 31.2519C6.57267 31.2626 6.58335 31.2733 6.60473 31.2946C6.61542 31.316 6.6368 31.3374 6.64748 31.3694C6.65817 31.4015 6.67955 31.4443 6.69024 31.4977C6.70092 31.5511 6.71161 31.5939 6.7223 31.6367C6.73299 31.6687 6.73299 31.7008 6.73299 31.7222C6.73299 31.7435 6.73299 31.7649 6.7223 31.7756C6.71161 31.7863 6.70092 31.797 6.67955 31.797L5.60004 32.1069C5.55729 32.1283 5.52522 32.1283 5.50384 32.1069C5.48247 32.0962 5.46109 32.0642 5.4504 32.0321L5.40765 31.8932C5.34352 31.8718 5.27939 31.8504 5.21526 31.8397C5.15113 31.8184 5.07632 31.8077 4.99081 31.797C4.9053 31.7863 4.80911 31.7863 4.69154 31.7863C4.57397 31.7863 4.43502 31.797 4.2747 31.8077C4.11438 31.8184 3.92199 31.8397 3.70823 31.8718C3.49446 31.9039 3.23794 31.9359 2.93867 31.9894C2.86386 32.0001 2.81042 32.0001 2.77835 31.9787C2.7356 31.9573 2.71422 31.9252 2.69284 31.8718L2.25463 30.3434C2.23325 30.2899 2.24394 30.2365 2.26532 30.2044C2.28669 30.1617 2.32945 30.1403 2.39357 30.1189L4.70223 29.4563L4.62741 29.1997C4.61672 29.157 4.61672 29.1249 4.6381 29.1035C4.65948 29.0822 4.68085 29.0608 4.72361 29.0501L5.78174 28.7295ZM5.94206 32.5131C5.98481 32.4917 6.01688 32.481 6.04894 32.4703C6.08101 32.4596 6.10238 32.4596 6.12376 32.4596C6.14514 32.4596 6.16651 32.4596 6.1772 32.4703C6.18789 32.481 6.19858 32.4917 6.19858 32.5024L6.87194 33.9239C6.89331 33.9774 6.904 34.0201 6.88262 34.0629C6.87194 34.1056 6.82918 34.1484 6.76505 34.1804L4.30676 35.3455C4.24264 35.3775 4.18919 35.3775 4.14644 35.3668C4.10369 35.3455 4.07162 35.3134 4.05025 35.26L3.38758 33.8491C3.37689 33.8384 3.37689 33.8277 3.37689 33.8064C3.37689 33.7957 3.38758 33.7743 3.40896 33.7636C3.41964 33.7529 3.44102 33.7315 3.47308 33.7102C3.50515 33.6888 3.53721 33.6781 3.57997 33.6567C3.62272 33.6354 3.65478 33.6247 3.68685 33.614C3.71891 33.6033 3.74029 33.6033 3.76167 33.6033C3.78304 33.6033 3.80442 33.6033 3.81511 33.614C3.8258 33.6247 3.83648 33.6353 3.84717 33.646L4.32814 34.6507L5.01219 34.3301L4.61672 33.475C4.60603 33.4643 4.60603 33.4536 4.60603 33.4323C4.60603 33.4216 4.61672 33.4002 4.62741 33.3895C4.6381 33.3788 4.65948 33.3575 4.69154 33.3361C4.72361 33.3147 4.75567 33.304 4.78773 33.2826C4.83049 33.2613 4.86255 33.2506 4.89462 33.2399C4.92668 33.2292 4.94806 33.2292 4.96943 33.2185C4.99081 33.2185 5.0015 33.2185 5.01219 33.2292C5.02288 33.2399 5.03356 33.2506 5.04425 33.2613L5.4504 34.1163L6.24133 33.7422L5.76036 32.7269C5.74967 32.7162 5.74967 32.7055 5.76036 32.6841C5.76036 32.6734 5.77105 32.652 5.78174 32.6413C5.79243 32.6307 5.8138 32.6093 5.84587 32.5879C5.86724 32.5558 5.89931 32.5345 5.94206 32.5131ZM6.44441 37.6862C6.52991 37.7824 6.60473 37.8465 6.69024 37.8893C6.77574 37.932 6.85056 37.9641 6.93607 37.9641C7.01088 37.9748 7.09639 37.9641 7.17121 37.932C7.24602 37.9106 7.32084 37.8679 7.39566 37.8144C7.48116 37.7503 7.55598 37.6862 7.60942 37.6221C7.66286 37.5579 7.70562 37.4831 7.72699 37.4083C7.74837 37.3335 7.74837 37.248 7.73768 37.1518C7.71631 37.0663 7.68424 36.9594 7.62011 36.8525L6.44441 37.6862ZM6.30546 36.2219C6.21995 36.2753 6.15583 36.3395 6.10238 36.4143C6.04894 36.4784 6.00619 36.5532 5.98481 36.628C5.96344 36.7029 5.96344 36.7884 5.97413 36.8846C5.9955 36.9808 6.02757 37.077 6.0917 37.1838L7.2674 36.3608C7.18189 36.2646 7.10708 36.2005 7.02157 36.1578C6.93607 36.1043 6.86125 36.083 6.77574 36.083C6.69024 36.0723 6.61542 36.083 6.52991 36.115C6.4551 36.1364 6.38028 36.1791 6.30546 36.2219ZM5.92069 35.7196C6.05963 35.6234 6.20927 35.5485 6.3589 35.5165C6.50854 35.4737 6.65817 35.4737 6.79712 35.5058C6.94675 35.5378 7.09639 35.602 7.23533 35.6982C7.38497 35.7944 7.52392 35.9226 7.65218 36.0936L7.95145 35.8906C7.96213 35.8799 7.98351 35.8799 7.9942 35.8799C8.00489 35.8799 8.02626 35.8906 8.04764 35.9013C8.06902 35.9119 8.09039 35.944 8.11177 35.9654C8.14383 35.9974 8.16521 36.0402 8.20796 36.083C8.24003 36.1364 8.27209 36.1791 8.29347 36.2112C8.31484 36.2433 8.32553 36.2753 8.33622 36.2967C8.34691 36.3181 8.34691 36.3395 8.34691 36.3502C8.34691 36.3608 8.33622 36.3822 8.31485 36.3929L8.01557 36.596C8.13315 36.7777 8.20796 36.9487 8.2614 37.109C8.30416 37.2693 8.32553 37.419 8.30416 37.5686C8.28278 37.7182 8.22934 37.8465 8.14383 37.9748C8.05833 38.103 7.93007 38.2206 7.78043 38.3382C7.64149 38.4344 7.50254 38.4985 7.35291 38.5305C7.20327 38.5626 7.06432 38.5733 6.91469 38.5412C6.76505 38.5092 6.62611 38.445 6.47647 38.3489C6.32684 38.2527 6.18789 38.1244 6.05963 37.9641L5.78174 38.1565C5.77105 38.1671 5.74967 38.1672 5.73899 38.1672C5.7283 38.1672 5.70692 38.1565 5.68554 38.1351C5.66417 38.1244 5.64279 38.0923 5.62141 38.0603C5.58935 38.0282 5.56797 37.9855 5.52522 37.9427C5.49316 37.8893 5.46109 37.8572 5.43972 37.8144C5.41834 37.7824 5.40765 37.7503 5.39696 37.7289C5.38627 37.7076 5.38627 37.6862 5.38627 37.6755C5.38627 37.6648 5.39696 37.6434 5.40765 37.6434L5.68554 37.451C5.56797 37.2693 5.49316 37.0983 5.43972 36.938C5.39696 36.7777 5.37559 36.6174 5.39696 36.4784C5.41834 36.3288 5.46109 36.2005 5.5466 36.0723C5.65348 35.944 5.77105 35.8264 5.92069 35.7196Z\",\n  fill: \"white\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.87 40.0697L33.7738 39.9521C33.6776 39.8345 33.2822 39.4391 32.3416 39.4391C32.0103 39.4391 31.6362 39.4925 31.23 39.5887C30.8667 39.6742 30.4177 39.8238 29.8833 40.0055C29.8299 39.888 29.7551 39.7704 29.6696 39.6742C29.2848 39.236 28.5901 39.0222 27.6281 39.0222C26.3028 39.0329 24.4644 39.4497 22.594 40.1659C21.3007 40.6575 20.125 40.914 19.1096 40.9247C17.5278 40.9354 16.5765 40.3689 15.7428 39.8773L15.3046 39.6208L14.7595 39.3001L14.6526 39.9307L13.5518 46.6002L13.9579 46.7819L14.1503 45.6275L15.0802 40.0055L15.0909 40.0162V40.0055L15.5291 40.2621C16.1597 40.6361 16.9079 41.0744 17.9553 41.2667C18.2973 41.3309 18.6821 41.3629 19.0989 41.3629C20.1784 41.3522 21.3969 41.0957 22.7329 40.572C24.5606 39.8773 26.3349 39.4604 27.6174 39.4604C27.9274 39.4604 28.2053 39.4818 28.4404 39.5246C28.8466 39.5994 29.1458 39.749 29.3382 39.9628C29.4879 40.1231 29.5627 40.3262 29.5734 40.5506C30.236 40.3262 30.856 40.1124 31.3156 40.0055C31.6896 39.9093 32.021 39.8666 32.3202 39.8666C32.3523 39.8666 32.3844 39.8666 32.4164 39.8773C32.4592 39.8773 32.4913 39.8773 32.5233 39.8773C32.5554 39.8773 32.5768 39.8773 32.6088 39.888C32.673 39.8987 32.7371 39.9093 32.8012 39.92H32.8119C32.9829 39.9628 33.1219 40.0055 33.2181 40.059C33.3463 40.1338 33.6135 39.888 33.6135 39.888L32.4592 47.4445L32.844 47.2842C32.8653 47.1025 32.8974 46.9101 32.9295 46.707C33.0577 45.9268 33.1539 45.3603 33.1539 45.3603L33.1753 45.2107L33.2074 45.029L33.1967 45.0076C33.2822 44.4732 33.3677 43.9495 33.4425 43.4471C33.6776 41.9615 33.8807 40.7537 33.9128 40.572C33.9128 40.5613 33.9128 40.5506 33.9128 40.5506L33.9342 40.401L33.9662 40.2086L33.87 40.0697Z\",\n  fill: \"#0066B3\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.9952 42.421C14.5041 42.421 6.85133 34.982 6.58413 25.4908C6.30623 15.8715 13.8949 7.83392 23.5036 7.55603C23.6746 7.55603 23.8456 7.54534 24.0166 7.54534C33.5077 7.54534 41.1605 14.9843 41.4277 24.4755C41.5666 29.1248 39.8779 33.5604 36.6821 36.9379C33.4864 40.3261 29.1576 42.2607 24.5083 42.3996C24.3372 42.4103 24.1555 42.421 23.9952 42.421ZM23.9952 42.8485C24.1662 42.8485 24.3372 42.8485 24.5189 42.8378C34.3735 42.5599 42.1438 34.33 41.8659 24.4648C41.588 14.7813 33.6467 7.10712 24.0166 7.11781C23.8456 7.11781 23.6746 7.11781 23.4929 7.11781C13.6277 7.40639 5.86802 15.6256 6.14591 25.4908C6.4238 35.1851 14.3651 42.8485 23.9952 42.8485Z\",\n  fill: \"white\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M27.6283 39.4712C28.462 39.4712 29.0391 39.6422 29.3384 39.9735C29.488 40.1445 29.5735 40.3476 29.5735 40.5721C30.2469 40.3476 30.8668 40.1339 31.3264 40.027C31.7005 39.9308 32.0318 39.888 32.3311 39.888C33.1007 39.888 33.2824 40.0484 33.3358 40.1018L33.6137 39.8987L32.0639 49.7746L31.6471 49.5395C31.444 49.4219 31.1982 49.3685 30.8989 49.3685C30.0545 49.3685 29.0071 49.8067 27.981 50.2235C27.2008 50.5442 26.4633 50.8434 25.8647 50.9396C25.6403 50.9717 25.4479 50.9931 25.2769 50.9931C24.3577 51.0038 24.2081 50.5014 24.1974 50.2556L24.2508 49.7425C24.005 49.8387 23.7592 49.9349 23.524 50.0204C23.0324 50.2128 22.5728 50.3838 22.1773 50.5228C21.4826 50.7686 20.6168 50.8969 19.6763 50.9076C17.4959 50.9182 15.1658 50.2663 13.7443 49.2402L13.584 49.1226L15.091 40.0056L15.5292 40.2621C16.3736 40.7538 17.4104 41.3844 19.1205 41.3737C20.2 41.363 21.4184 41.1065 22.7545 40.5828C24.5822 39.888 26.3564 39.4712 27.6283 39.4712Z\",\n  fill: \"white\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M25.0424 46.472L24.54 50.0525C24.4118 50.7045 25.1493 50.7152 25.8226 50.6083C27.4579 50.3518 30.3117 48.4065 31.8187 49.2402C32.0432 47.4446 32.428 45.168 32.428 45.168C32.428 45.168 32.0539 44.6443 30.643 44.9863C29.2322 45.339 26.0898 46.6857 25.0424 46.472Z\",\n  fill: \"#ED1C24\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.2678 46.2046C32.4281 45.2106 32.5885 44.1417 32.7488 43.2012C32.535 43.0622 31.9685 42.8271 30.889 43.0836C29.5209 43.4149 26.5283 44.6975 25.3846 44.5693L24.9678 47.2413C25.096 47.6795 25.5877 47.7864 26.2717 47.7223C27.907 47.5834 30.7608 45.4136 32.2678 46.2046Z\",\n  fill: \"#0066B3\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.5078 50.2981C24.604 49.6141 25.5446 49.5927 26.1645 49.6248C26.7951 49.6568 27.9387 49.6355 28.0242 49.1331C28.1418 48.4598 28.1845 47.6475 28.1845 47.6475L24.914 47.6902L24.5078 50.2981Z\",\n  fill: \"#BE1E2D\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.9375 48.973L14.6964 44.4412C16.011 45.2215 18.0845 46.3437 22.317 44.7084C25.7052 43.4045 28.8582 43.18 28.6979 44.516C28.7193 44.5374 28.0139 49.1547 28.0139 49.1547C28.2597 47.5622 24.2089 49.4647 22.0819 50.2021C19.7733 51.0144 15.9683 50.4373 13.9375 48.973Z\",\n  fill: \"#ED1C24\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.4554 43.7679C18.3618 45.339 16.2242 43.9389 14.8881 43.1373L14.3965 46.0765C16.4379 47.4981 19.452 48.0004 22.4661 46.8461C24.3793 46.1086 28.0667 44.8367 28.4728 45.9803C28.6118 45.0291 28.7614 44.003 28.8897 43.1266C28.3873 42.2608 25.4588 42.6242 22.4554 43.7679Z\",\n  fill: \"#0066B3\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.4646 31.968C33.4646 31.968 33.4219 32.107 33.5074 32.1818C33.5929 32.2566 33.7211 32.1818 33.7211 32.1818C33.7211 32.1818 33.7532 32.3849 33.8921 32.4383C34.0311 32.4918 34.138 32.3742 34.138 32.3742C34.138 32.3742 34.1914 32.5666 34.341 32.62C34.48 32.6735 34.5869 32.5559 34.5869 32.5559C34.5869 32.5559 34.6831 32.6841 34.7579 32.6948C34.8434 32.7055 34.9182 32.6307 34.961 32.5238C35.0037 32.62 35.1534 32.7483 35.2602 32.759C35.3885 32.759 35.4419 32.7269 35.5381 32.6307C35.6664 32.4704 35.6129 32.6735 35.6236 32.7269C35.6236 32.9727 35.6023 33.2079 35.5916 33.4537C35.5916 33.6247 35.6023 33.8705 35.7519 33.9774C35.7733 33.9881 35.8802 34.0522 35.9443 34.0095C35.9336 33.7423 35.9443 33.4751 35.9336 33.2079C35.9336 32.9086 35.9336 32.5986 35.8481 32.3101C35.7519 32.1284 35.6878 31.9039 35.4954 31.8077C35.3351 31.7008 35.1213 31.6581 34.9289 31.7436C34.7258 31.7863 34.651 32.0108 34.4586 32.0642C34.2983 32.1177 34.1166 32.0856 33.9883 31.9787C33.8387 31.8291 33.7532 31.6153 33.7532 31.4122C33.5822 31.5726 33.315 31.8398 33.2509 31.8825C33.3043 31.9894 33.4646 31.968 33.4646 31.968ZM35.5809 33.8064C35.5809 33.8064 35.474 34.7363 35.5702 35.0142C35.6664 35.2921 35.8267 35.5379 35.9336 35.6555L35.9443 34.0629C35.9336 34.0629 35.7198 34.1484 35.5809 33.8064ZM35.1213 33.785C35.0892 34.0095 35.0892 34.6828 35.303 35.0249C35.3778 34.95 35.3992 34.8325 35.4312 34.7363C35.4633 34.6615 35.474 34.5011 35.474 34.5011L35.5381 33.6888L35.6023 32.62C35.4419 32.8124 35.3564 32.8017 35.2175 32.791C35.2175 32.791 35.1534 33.4109 35.1213 33.785ZM34.7793 33.2827C34.7044 33.6781 34.6617 34.5118 34.8434 34.6722C35.0251 34.4156 35.0785 33.6781 35.0785 33.6781L35.164 32.7696C35.0678 32.7162 35.0251 32.6735 34.9717 32.6093C34.9717 32.6093 34.9503 32.6628 34.9075 32.6948C34.8755 32.759 34.7793 33.2827 34.7793 33.2827ZM34.4479 32.93C34.4479 32.93 34.2983 33.5499 34.4586 34.1271C34.4586 34.1271 34.5655 33.956 34.5869 33.8705C34.6403 33.6995 34.7472 33.1758 34.7472 33.1758L34.8541 32.7162C34.79 32.7483 34.7258 32.7376 34.6724 32.7055C34.6189 32.6735 34.5762 32.62 34.5762 32.62C34.5762 32.62 34.5441 32.6414 34.5121 32.6521L34.4479 32.93ZM34.0738 32.62C33.8815 33.2934 34.0738 33.6995 34.0738 33.6995C34.17 33.6247 34.2769 33.3575 34.2769 33.3575C34.2983 33.3147 34.4693 32.6628 34.4693 32.6628C34.4693 32.6628 34.3731 32.7055 34.2662 32.6307C34.138 32.5559 34.1166 32.4383 34.1166 32.4383L34.0738 32.62ZM33.6356 32.62C33.5181 32.9727 33.5287 33.1972 33.6463 33.4323C33.9135 33.1651 34.0738 32.4597 34.0738 32.4597C33.967 32.5131 33.9242 32.5024 33.8708 32.4811C33.7639 32.449 33.7211 32.3207 33.7211 32.3207C33.7211 32.3207 33.6463 32.5986 33.6356 32.62ZM33.4219 32.1284C33.2829 32.3207 33.1012 32.6628 33.2188 32.8979C33.4646 32.7803 33.6249 32.4704 33.6249 32.4704C33.6463 32.449 33.6998 32.278 33.6998 32.278C33.6998 32.278 33.6891 32.2352 33.6998 32.2139C33.657 32.2459 33.5394 32.2352 33.5394 32.2352C33.486 32.2352 33.4539 32.2032 33.4219 32.1284ZM33.2188 31.9039C33.0478 32.0535 32.9409 32.2673 32.9195 32.4704C33.005 32.4811 33.1119 32.3956 33.1653 32.3528C33.2188 32.3101 33.4219 32.107 33.4219 32.0963C33.4112 32.0429 33.4219 32.0108 33.4219 32.0108C33.4219 32.0108 33.3364 32.0535 33.2188 31.9039ZM29.852 33.272C30.0123 33.3468 30.162 33.4216 30.2902 33.5071C30.3116 33.5606 30.3437 33.614 30.365 33.6675L30.023 33.9881C29.9482 33.7637 29.8841 33.5178 29.852 33.272ZM29.5634 34.4156L28.2167 35.6768C27.9174 34.8752 28.0884 34.5653 28.2488 34.3943C28.345 34.2981 28.7191 34.0202 29.5634 34.4156ZM27.9709 36.2754C28.1098 36.6388 28.3022 37.1946 28.1205 37.3549C27.9602 37.5045 27.4792 37.3335 27.0517 37.077L27.9709 36.2754ZM27.7892 36.0723L26.8914 36.906C26.6776 36.4571 26.5707 35.9547 26.731 35.8158C26.9127 35.6555 27.4472 35.8906 27.7892 36.0723ZM28.4091 35.9013L29.8092 34.6935C30.1192 35.5806 29.7986 35.9227 29.6917 36.0082C29.4993 36.1471 29.168 36.2754 28.4091 35.9013ZM11.9065 29.5846C11.7462 30.0335 11.821 30.5144 12.1416 30.803C12.505 31.1344 13.0822 31.1237 13.5525 30.8137L15.7436 32.7803C15.6687 32.9407 15.6367 33.1224 15.6687 33.3254C15.7329 33.7102 16.0535 34.0415 16.4704 34.1164C16.7162 34.1698 16.9513 34.1377 17.1437 34.0415L22.5733 38.9261C22.5733 38.9261 22.8512 39.1719 23.1077 38.894L23.1291 38.8619C23.1291 38.8619 23.3749 38.584 23.0971 38.3382L21.9427 37.3015L22.103 37.1304L22.5733 37.558L22.6268 37.6114C22.6268 37.6114 22.755 37.729 22.8619 37.6007L22.9154 37.5473L23.6528 36.7243C23.6528 36.7243 23.7704 36.596 23.6421 36.4891L23.5887 36.4357C23.5887 36.4357 23.546 36.4357 23.4391 36.564L23.3322 36.4678L22.9581 36.8846L22.6054 36.5747L23.0009 36.1364C23.0009 36.1364 23.1184 36.0082 22.9902 35.9013L22.9367 35.8479C22.9367 35.8479 22.8085 35.7303 22.7016 35.8585L22.071 36.5533L21.7183 36.2433L22.1886 35.7196L22.103 35.602C22.103 35.602 22.3168 35.3883 22.3382 35.3028L22.2847 35.2493C22.2847 35.2493 22.1565 35.1317 22.0496 35.26L21.3121 36.083L21.2587 36.1364C21.2587 36.1364 21.1411 36.2647 21.2694 36.3716L21.3228 36.425L21.7931 36.8525L21.6328 37.0236L17.7316 33.5178C18.3515 33.101 19.4631 32.8124 20.3929 32.8124C20.5639 32.8124 20.6388 32.6735 20.5746 32.5345C20.1471 31.5084 21.0663 30.7603 22.0175 31.3695C22.4344 31.6367 22.8512 32.1604 23.1719 33.0262C21.9641 33.3147 20.5105 34.0095 19.741 34.8432L20.6388 35.741C21.3014 34.5546 22.6161 33.7102 23.3749 33.5392C23.4177 33.6675 23.407 33.6247 23.4498 33.753C22.6909 34.1164 21.9427 34.7683 21.4831 35.5807C21.5152 35.5379 21.5473 35.5165 21.5579 35.4951C21.6648 35.3989 22.0924 34.8645 22.1992 34.9607C22.2527 35.0142 22.4237 35.1531 22.5733 35.2814C22.6054 35.3134 22.2741 35.7944 22.3061 35.8158C22.3382 35.8372 22.3916 35.944 22.413 35.9227C22.4878 35.8479 22.5733 35.7623 22.6375 35.6982C22.9047 35.0462 23.2467 34.5225 23.578 34.2019C23.5994 34.3194 23.6101 34.437 23.6208 34.5546C23.6208 34.5546 23.3322 35.3455 23.1505 36.2647L23.2681 36.3609L23.5353 36.1471L23.8025 36.3609C23.8025 36.3609 24.0162 36.5747 23.9094 36.7884C23.8238 36.9487 23.2894 37.5366 23.0329 37.8145C23.2039 38.2848 23.888 38.6054 24.0055 38.6589C24.1017 38.6268 24.4438 38.4665 24.711 38.2206C24.6362 38.0389 24.6041 37.5152 24.6041 37.4297C24.6041 37.3335 24.6575 36.7884 24.7644 36.6815C24.8072 36.6388 24.8606 36.5747 24.9354 36.5105C24.7537 35.5058 24.4224 34.5653 24.4224 34.5653C24.4331 34.4477 24.4438 34.3301 24.4651 34.2126C24.882 34.6187 25.3202 35.3455 25.5981 36.254H25.9401V36.2006C25.9401 36.0937 25.9615 35.6234 26.047 35.5058C26.1432 35.3776 26.2394 35.2921 26.3356 35.2279C25.876 34.5866 25.2454 34.0629 24.6041 33.7637C24.6468 33.6354 24.6362 33.6781 24.6789 33.5499C25.2881 33.6888 26.2608 34.2553 26.9555 35.0997C27.1479 35.1317 27.4365 35.1852 27.4365 35.1852C27.4365 35.1852 27.3296 34.9714 27.3296 34.6508C27.3296 34.4905 27.4258 34.3194 27.522 34.2019C26.7417 33.6781 25.737 33.2506 24.8713 33.0369C25.1919 32.1711 25.6088 31.6474 26.0256 31.3802C26.9769 30.771 27.8961 31.5191 27.4685 32.5452C27.4151 32.6841 27.4899 32.8231 27.6502 32.8231C28.206 32.8231 28.8259 32.93 29.3603 33.101C29.3924 33.3896 29.4565 33.6781 29.5207 33.924C28.548 33.5499 28.0457 33.9454 27.9067 34.095C27.5861 34.437 27.5006 34.9073 27.6823 35.5272C27.2441 35.3241 26.7417 35.1959 26.4211 35.4845C26.1111 35.7623 26.1753 36.254 26.3035 36.6602C25.8867 36.4998 25.4591 36.4998 25.1278 36.7884C24.6148 37.2587 25.0102 37.9 25.0316 37.9321C25.0423 37.9534 25.053 37.9641 25.0637 37.9748C25.1278 38.0496 25.1813 38.1244 25.2774 38.071C25.3843 38.0176 25.3416 37.8572 25.2774 37.7504C25.2774 37.7504 25.0957 37.2694 25.363 37.0342C25.6408 36.7884 26.1859 37.0449 26.5066 37.2587L24.9782 38.7123L25.0209 38.7551L25.0637 38.7978L26.6562 37.419C26.8272 37.761 27.0303 38.3382 26.7524 38.584C26.4959 38.8192 26.0363 38.5947 26.0363 38.5947C25.9294 38.5306 25.7798 38.4665 25.7157 38.5627C25.6622 38.6482 25.7264 38.7123 25.7905 38.7871C25.8012 38.7978 25.8119 38.8085 25.8332 38.8192C25.8653 38.8406 26.4638 39.3108 26.9769 38.8406C27.3082 38.552 27.3403 38.1138 27.2227 37.6862C27.6182 37.8572 28.0991 37.9641 28.4091 37.6862C28.7297 37.3976 28.6549 36.8846 28.4946 36.425C29.0931 36.6602 29.5741 36.6388 29.9482 36.3502C30.1085 36.2219 30.5574 35.773 30.2902 34.7577C31.0063 35.0462 32.0431 35.3028 32.5668 34.8218C33.2295 34.2232 32.6951 33.2827 32.6737 33.2399C32.6096 33.133 32.4706 33.101 32.3637 33.1544C32.3424 33.1651 32.3317 33.1865 32.3103 33.1972L32.5134 33.4964L32.2675 33.4216C32.2675 33.4323 32.2782 33.443 32.2782 33.4537C32.2782 33.4644 32.6523 34.1271 32.2675 34.4798C31.9255 34.7897 30.985 34.5653 30.2688 34.2553L30.6216 33.9454C30.7926 34.0736 30.9956 34.1377 31.2201 34.1377C31.7759 34.1377 32.2248 33.6888 32.2248 33.1437C32.2248 32.962 32.1713 32.8017 32.0965 32.6628L33.8494 31.1344C33.9563 31.145 34.0632 31.1023 34.138 31.0275C34.1593 31.0061 34.1914 30.974 34.2021 30.9527C34.3945 30.9954 34.6083 30.942 34.7686 30.803C35.0358 30.5572 35.0572 30.151 34.822 29.8838C34.5762 29.6166 34.17 29.5952 33.9028 29.8304C33.7425 29.9693 33.6677 30.1831 33.6891 30.3755C33.657 30.3862 33.6249 30.4076 33.6036 30.4289C33.5181 30.5037 33.4753 30.6106 33.4753 30.7068L31.7652 32.2994C31.6049 32.1925 31.4125 32.139 31.2094 32.139C30.8674 32.139 30.5574 32.3101 30.3757 32.5773C30.194 32.5666 29.9909 32.5345 29.7772 32.5024C29.7986 32.2566 29.8627 32.0642 29.9803 31.9467C30.3757 31.5939 30.9956 32.0322 31.0063 32.0429C31.017 32.0535 31.0277 32.0535 31.0384 32.0642L30.9956 31.8184L31.2735 32.0535C31.2949 32.0429 31.3056 32.0215 31.327 32.0108C31.4018 31.9146 31.3804 31.7756 31.2735 31.7008C31.2415 31.6688 30.3543 31.0382 29.6917 31.6367C29.4779 31.8291 29.3817 32.1177 29.3497 32.4383C28.8046 32.3101 28.3557 32.1497 28.4305 32.0322C30.0871 29.7021 28.8152 28.3127 27.2975 28.3875V29.948C27.2975 30.4503 26.8593 30.8565 26.3142 30.8565H25.2668C24.5079 30.8565 24.0162 31.6153 24.0162 31.6153C24.0162 31.6153 23.5246 30.8565 22.7657 30.8565H21.7183C21.1732 30.8565 20.735 30.4503 20.735 29.948V28.3875C19.2065 28.3127 17.9453 29.7021 19.602 32.0322C19.7516 32.2566 18.1912 32.6093 17.4644 32.5131C17.272 32.3101 16.9941 32.1925 16.6841 32.1925C16.5559 32.1925 16.4383 32.2139 16.3207 32.2566L14.0655 30.2259C14.322 29.7342 14.2793 29.157 13.9159 28.8257C13.5952 28.5371 13.1036 28.5051 12.676 28.7188V29.4991L11.9065 29.5846ZM32.7058 30.5465C32.6096 30.4076 32.5989 30.2259 32.6737 30.0655C32.7485 29.8731 32.9836 29.8304 33.0478 29.6273C33.1547 29.4456 33.1333 29.2319 33.0478 29.0608C32.973 28.8578 32.7592 28.7723 32.5882 28.6547C32.2996 28.5371 32.0003 28.5051 31.7011 28.473C31.4339 28.4409 31.1667 28.4195 30.8994 28.3875C30.8567 28.4516 30.8994 28.5585 30.9101 28.5799C31.0063 28.7402 31.2522 28.7723 31.4232 28.7936C31.6583 28.8043 31.9041 28.8257 32.15 28.8471C32.2034 28.8578 32.4065 28.8364 32.2355 28.9433C32.1393 29.0181 32.1072 29.0608 32.0858 29.1357H32.0324C32.0431 29.0501 32.0858 28.9753 32.2355 28.8791L31.1667 28.8364L30.3543 28.815C30.3543 28.815 30.2047 28.815 30.1192 28.8364C30.0123 28.8578 29.8948 28.8685 29.8199 28.9326C30.1299 29.1784 30.7926 29.2532 31.0277 29.2425C31.1025 29.2639 31.1773 29.2853 31.2522 29.296H31.1453C31.1453 29.296 30.4078 29.2746 30.1299 29.4349C30.2795 29.638 31.1025 29.6808 31.5087 29.638C31.5087 29.638 32.0324 29.5846 32.1072 29.5739C32.1393 29.5311 32.1927 29.5204 32.1927 29.5204C32.1286 29.4563 32.0965 29.4135 32.0538 29.3067H31.7759C31.8507 29.296 31.9255 29.2746 32.0003 29.2532C32.0324 29.2532 32.0431 29.2532 32.0431 29.2532C32.0431 29.2425 32.0431 29.2425 32.0431 29.2318C32.0538 29.2318 32.0752 29.2212 32.0858 29.2212C32.0858 29.328 32.2034 29.4777 32.2889 29.5418C32.182 29.5739 32.0965 29.6487 32.0965 29.7235C32.0965 29.809 32.2248 29.9159 32.2248 29.9159C32.2248 29.9159 32.0965 30.0121 32.1286 30.151C32.1607 30.3007 32.353 30.3755 32.353 30.3755C32.353 30.3755 32.2248 30.4717 32.2675 30.6106C32.3103 30.7496 32.5027 30.803 32.5027 30.803C32.5027 30.803 32.4172 30.9206 32.4813 31.0168C32.5454 31.113 32.6844 31.0809 32.6844 31.0809C32.6844 31.0809 32.6523 31.2412 32.7592 31.3054C32.8126 31.2519 33.1012 31.0168 33.2829 30.8565C33.0478 30.8137 32.8447 30.7068 32.7058 30.5465ZM30.8246 28.3875L29.2428 28.2272C29.3497 28.3447 29.5848 28.5264 29.8413 28.6547C30.1192 28.7723 31.0491 28.7616 31.0491 28.7616C30.7177 28.5906 30.8246 28.3875 30.8246 28.3875ZM32.6844 31.3161C32.5561 31.1878 32.5989 31.1023 32.5989 31.1023C32.5989 31.1023 32.5668 31.113 32.5134 31.0916C32.5134 31.0916 32.2889 31.2733 32.2355 31.3267C32.182 31.3802 32.0965 31.4764 32.0965 31.5512C32.2889 31.5512 32.5134 31.4657 32.6844 31.3161ZM32.4813 31.0809C32.4172 31.0488 32.3851 31.0061 32.3851 30.9527C32.3851 30.9527 32.3744 30.8458 32.4172 30.803C32.3958 30.803 32.353 30.7923 32.353 30.7923C32.353 30.7923 32.182 30.8351 32.1607 30.8458C32.1607 30.8458 31.84 30.974 31.6904 31.1985C31.9148 31.3481 32.2782 31.1985 32.4813 31.0809ZM32.0217 30.8244C32.0431 30.8137 32.3317 30.771 32.3317 30.771C32.3317 30.771 32.2141 30.7175 32.182 30.5999C32.1713 30.5358 32.1607 30.4931 32.2248 30.3969C32.2248 30.3969 31.5087 30.4824 31.2094 30.7282C31.4339 30.8778 31.6583 30.9099 32.0217 30.8244ZM30.985 30.29C30.985 30.29 31.3697 30.5144 32.0645 30.3969L32.2462 30.3755C32.2462 30.3755 32.1393 30.3327 32.0751 30.2045C32.011 30.0869 32.0645 30.0014 32.0645 30.0014C32.0645 30.0014 31.4018 30.1083 31.359 30.1297C31.359 30.119 31.0811 30.1938 30.985 30.29ZM30.6109 29.8518C31.1667 30.0762 31.7973 29.9907 31.7973 29.9907L32.0858 29.948C32.0965 29.9159 32.1286 29.8945 32.1286 29.8945C32.1286 29.8945 32.0751 29.8518 32.0538 29.7876C32.0217 29.7342 32.0217 29.6701 32.0645 29.6059L31.6049 29.6701C31.6049 29.6701 31.0811 29.7235 30.8994 29.7556C30.7926 29.7663 30.6109 29.8518 30.6109 29.8518ZM29.7237 18.565C30.2261 18.6398 30.3864 18.9819 30.4185 19.0887C30.5895 18.9391 30.7498 18.4368 30.6857 18.1054C30.3971 16.5449 26.7631 17.5817 24.9354 16.919C24.9034 17.3786 25.5019 18.1054 26.0684 18.3726C25.0957 19.217 24.2193 20.9271 24.0376 23.0113C23.8666 20.9271 22.9795 19.217 22.0069 18.3726C22.5733 18.1054 23.1719 17.3786 23.1398 16.919C21.3121 17.5817 17.6888 16.5449 17.3895 18.1054C17.3254 18.4368 17.4857 18.9391 17.6568 19.0887C17.6888 18.9819 17.8491 18.6398 18.3515 18.565C20.906 18.1802 23.0436 22.1135 21.1197 23.706C21.0877 23.7274 21.109 23.7702 21.1518 23.7702H26.9234C26.9662 23.7702 26.9769 23.7274 26.9555 23.706C25.0316 22.1135 27.1693 18.1802 29.7237 18.565ZM28.7832 18.8857C28.6229 18.9177 28.0564 19.1529 27.8212 19.4521C28.1846 19.3346 28.8259 19.3346 29.2641 19.7193C29.2641 19.3025 28.9114 18.9284 28.7832 18.8857ZM19.292 18.8857C19.1638 18.9284 18.8111 19.3025 18.8111 19.7193C19.26 19.3346 19.8906 19.3346 20.254 19.4521C20.0082 19.1529 19.4524 18.9177 19.292 18.8857ZM25.0851 27.7889C25.0637 27.6714 25.1278 27.6179 25.224 27.5859C25.5553 27.4683 26.0684 27.5645 26.047 28.0348C26.047 28.1417 26.1966 28.1417 26.2073 28.0348C26.3035 27.3293 25.8225 27.1156 25.3202 27.2011C25.2561 26.9553 25.2026 26.7415 25.1492 26.5277C25.1064 26.3567 25.0851 26.0361 25.2881 26.0361C25.395 26.0361 25.3523 26.3353 25.3416 26.4636C25.3309 26.5812 25.3736 26.6453 25.4698 26.6453C25.5233 26.6453 25.5981 26.5705 25.6408 26.5277C25.9294 26.2071 25.9936 25.6941 25.6622 25.4589C25.3843 25.2558 24.6789 25.4055 24.4758 25.6941C24.4438 25.5872 24.3048 25.4055 24.2407 25.3307C24.1766 25.2558 24.1552 25.2024 24.2514 25.1383C24.2941 25.1062 24.4224 24.9779 24.4224 24.8497C24.4224 24.7749 24.3583 24.6252 24.1659 24.6252C24.0162 24.6252 23.8452 24.7321 23.8452 24.9673C23.8452 25.0207 23.8559 25.0741 23.888 25.1383C23.7918 25.1276 23.5353 25.1276 23.3963 25.1596L25.2454 30.2365C25.7798 29.98 26.1646 29.5632 26.1646 29.1143C26.1646 28.7402 25.6088 28.8578 25.3309 29.157C25.2561 28.6761 25.1706 28.2378 25.0851 27.7889ZM23.4605 29.1143C23.1291 29.1143 22.7337 29.1784 22.5306 29.3174C22.4878 29.0608 22.8405 28.6012 23.3001 28.1523C23.2039 28.4409 23.2681 28.9433 23.4605 29.1143ZM25.0744 30.3648L22.7871 24.0801C22.7443 23.9626 22.5733 24.016 22.6161 24.1443L23.0009 25.2238C22.6695 25.2986 22.1351 25.5444 22.1351 25.8651C22.1351 26.2926 22.894 26.5705 23.3322 26.5384C23.3108 26.6346 23.3322 26.7201 23.407 26.8056C23.2467 26.8056 22.9474 26.8804 22.8512 26.9873C22.6161 26.7736 22.2527 26.6881 22.0817 26.827C21.9107 26.9553 21.9 27.1797 22.0817 27.4362C22.2099 27.6072 22.2527 27.7889 22.1137 27.992C22.6375 27.992 22.4451 27.308 22.6588 27.308C22.6268 27.4362 22.6481 27.5966 22.7123 27.7676C22.755 27.8851 22.755 27.96 22.6802 28.0668C22.5092 28.334 22.242 28.9646 22.2847 29.5311C22.1137 29.5311 22.0282 29.4884 22.0817 29.2532C22.103 29.1677 22.0496 29.1036 21.9748 29.2105C21.9 29.328 21.8572 29.5311 21.8572 29.6166C21.8572 30.119 22.4558 30.2259 22.6909 30.119C23.3429 30.7496 24.6362 30.5786 25.0744 30.3648ZM12.2913 28.6226L11.7141 28.6333L11.7569 29.1998L12.2913 29.157V28.6226ZM11.8531 14.8134C11.8424 14.8028 11.8317 14.7921 11.821 14.7921C11.8103 14.7921 11.7996 14.7921 11.7889 14.8028C10.859 15.6151 10.7735 17.2183 11.7462 18.4795C12.3982 19.3132 13.7449 20.2217 15.145 21.0126C15.1236 21.1622 15.113 21.3119 15.1023 21.4508C12.2378 20.8416 10.4208 18.8643 10.1322 18.5329C10.1109 18.5116 10.0788 18.5116 10.0574 18.5436C9.53371 19.5804 9.9933 20.9592 11.0301 21.547C11.9492 22.0601 13.3815 22.3593 15.1557 22.5731C15.1771 22.7014 15.1985 22.8296 15.2305 22.9579C12.5798 23.3213 10.4956 22.3486 10.1429 22.1669C10.1216 22.1563 10.0895 22.1669 10.0788 22.199C9.93986 23.2999 10.6453 24.187 11.8317 24.3901C13.0288 24.5932 15.5619 23.9946 15.5619 23.9946C15.6153 24.1122 15.6687 24.2191 15.7222 24.3366C14.0441 25.2986 11.6927 25.1917 11.34 25.1703C11.3186 25.1703 11.2973 25.1917 11.2973 25.2131C11.3293 26.3781 12.4516 26.6881 13.4563 26.5598C14.3113 26.4422 15.4977 25.8758 16.3421 25.2345C16.4276 25.3307 16.5131 25.4162 16.6093 25.5017C15.8077 26.827 13.9052 27.3614 13.296 27.4149C13.2639 27.4149 13.2532 27.4469 13.2639 27.4683C13.67 28.1737 14.5785 28.3982 15.5832 27.9279C16.1711 27.6393 16.9086 26.8911 17.4216 26.0575C17.5392 26.1109 17.6568 26.1643 17.785 26.2071C17.4751 27.7889 15.9039 28.7509 15.626 28.9112C15.6153 28.9219 15.6046 28.9219 15.6046 28.9433C15.6046 28.954 15.6046 28.9646 15.6153 28.9753C16.0856 29.4991 17.1544 29.5097 17.8171 28.7509C18.2232 28.2806 18.5332 27.4149 18.7042 26.3674C19.1852 26.3674 20.2967 26.5812 20.6708 27.5538C20.6815 27.5966 20.7563 27.5859 20.7563 27.5431V24.8176C20.7563 24.7856 20.7243 24.7749 20.7029 24.7856C20.0937 24.9886 19.4631 25.01 19.0248 24.9245C18.1591 24.7749 17.5071 24.0694 17.5071 23.2144C17.5071 22.7227 17.7209 22.2845 18.0736 21.9746C18.1484 21.9104 18.1377 21.7929 18.0522 21.7394C18.0095 21.718 17.9774 21.6967 17.9346 21.6753C14.8992 19.7514 12.1523 15.3051 11.8531 14.8134ZM18.3942 16.4701C18.4049 16.4594 18.3942 16.267 18.3942 16.267C17.2078 16.267 16.6627 14.9845 17.5926 14.1187C17.0903 12.5369 16.3314 14.1187 15.6901 14.5249C15.3267 14.7493 14.322 14.6211 14.2472 15.07C14.1296 15.7113 15.284 15.7113 14.7709 17.1114C15.0275 16.919 15.9787 16.3632 15.7542 17.4107C15.8504 17.4107 16.1818 17.1862 16.1818 16.887C16.1818 16.235 15.284 15.9357 15.284 15.3051C15.284 14.3645 16.7803 14.3752 16.7376 14.5142C16.4917 15.3585 16.9834 16.3953 18.3942 16.4701ZM19.8799 14.1187L20.3716 13.5309L19.8799 12.9323L19.3882 13.5309L19.8799 14.1187ZM24.0269 11.8742L24.7217 10.9871L24.0269 10.1427L23.3322 10.9871L24.0269 11.8742ZM28.174 14.1187L28.6656 13.5309L28.174 12.9323L27.6823 13.5309L28.174 14.1187ZM29.4886 15.8181C29.7772 15.0379 29.4031 14.6852 28.8687 14.6852L28.174 15.3158L27.4792 14.6852C26.9341 14.6852 26.5707 15.0486 26.8593 15.8181C26.8914 15.9143 26.9876 16.064 27.0731 16.1922C26.4211 16.1067 25.5874 15.6578 25.4057 14.7066C25.4057 14.7066 25.8867 13.9477 26.0042 13.6377C26.4425 12.5262 25.8867 12.0773 25.0744 12.0773L24.0269 13.3064L22.9795 12.0773C22.1672 12.0773 21.6221 12.5262 22.0496 13.6377C22.1672 13.9477 22.6481 14.7066 22.6481 14.7066C22.4664 15.6578 21.6328 16.1067 20.9808 16.1922C21.0663 16.064 21.1518 15.9143 21.1945 15.8181C21.4831 15.0379 21.1197 14.6852 20.5746 14.6852L19.8799 15.3158L19.1852 14.6852C18.6401 14.6852 18.2767 15.0486 18.5652 15.8181C18.6508 16.0319 18.9714 16.4701 18.9714 16.4701H20.7991C22.3382 16.4701 23.0329 15.5296 23.2467 14.7066H24.8179C25.0316 15.5296 25.7157 16.4701 27.2655 16.4701H29.0931C29.0825 16.4701 29.4031 16.0319 29.4886 15.8181ZM33.796 15.07C33.7211 14.6211 32.7164 14.76 32.353 14.5249C31.7118 14.1187 30.9529 12.5475 30.4505 14.1187C31.3911 14.9845 30.846 16.267 29.6489 16.267C29.6489 16.267 29.6382 16.4594 29.6489 16.4701C31.0705 16.406 31.5621 15.3585 31.2949 14.5249C31.2522 14.3752 32.7485 14.3752 32.7485 15.3158C32.7485 15.9464 31.8507 16.2457 31.8507 16.8977C31.8507 17.1969 32.182 17.4214 32.2782 17.4214C32.0431 16.3739 33.005 16.919 33.2615 17.1221C32.7592 15.7006 33.9135 15.7113 33.796 15.07ZM37.9964 18.5329C37.9857 18.5116 37.943 18.5009 37.9216 18.5223C37.633 18.8536 35.816 20.8309 32.9516 21.4508C32.9409 21.3012 32.9302 21.1516 32.9088 21.0126C34.2983 20.2217 35.6557 19.3132 36.3077 18.4795C37.2803 17.2183 37.1948 15.6258 36.2649 14.8028C36.2542 14.7921 36.2436 14.7921 36.2329 14.7921C36.2222 14.7921 36.2115 14.8028 36.2008 14.8134C35.9015 15.2944 33.1547 19.7514 30.1299 21.6753C30.0978 21.6967 30.0551 21.718 30.023 21.7394C29.9375 21.7929 29.9268 21.8997 30.0016 21.9746C30.3543 22.2952 30.5681 22.7334 30.5681 23.2144C30.5681 24.0588 29.9161 24.7642 29.0504 24.9245C28.6122 25.01 27.9816 24.9886 27.3723 24.7856C27.3403 24.7749 27.3189 24.7962 27.3189 24.8176V27.5004C27.3189 27.5431 27.383 27.5538 27.4044 27.511C27.7785 26.5277 28.8794 26.3247 29.371 26.3247C29.4779 26.9553 29.6275 27.511 29.8199 27.9706C30.3009 28.0241 30.9636 28.0882 31.4766 28.1417C30.985 27.6821 30.4612 27.0194 30.3009 26.175C30.4292 26.1323 30.5467 26.0788 30.6643 26.0254C31.1667 26.8591 31.9041 27.6072 32.5027 27.8958C33.4967 28.3768 34.4159 28.1417 34.822 27.4362C34.8327 27.4149 34.822 27.3828 34.79 27.3828C34.17 27.3293 32.2782 26.7949 31.4766 25.4696C31.5728 25.3841 31.6583 25.2986 31.7438 25.2024C32.5882 25.8437 33.7746 26.4102 34.6296 26.5277C35.6236 26.6667 36.7566 26.346 36.7887 25.181C36.7887 25.1596 36.7673 25.1383 36.7459 25.1383C36.3932 25.1596 34.0418 25.2665 32.3637 24.3046C32.4172 24.1977 32.4813 24.0801 32.5241 23.9626C32.5241 23.9626 35.0572 24.5611 36.2542 24.358C37.4513 24.1656 38.1461 23.2678 38.0071 22.1669C38.0071 22.1349 37.975 22.1242 37.943 22.1349C37.5903 22.3166 35.5168 23.2892 32.8554 22.9258C32.8875 22.7975 32.9088 22.6693 32.9302 22.541C34.7045 22.3273 36.1367 22.028 37.0559 21.515C38.0712 20.9592 38.5201 19.5697 37.9964 18.5329Z\",\n  fill: \"white\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 51,\n    viewBox: \"0 0 48 51\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4.21875H22V10.5625H20V4.21875Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 3.5C8 3.22386 7.77614 3 7.5 3C7.22386 3 7 3.22386 7 3.5H8ZM7 10.1094C7 10.3855 7.22386 10.6094 7.5 10.6094C7.77614 10.6094 8 10.3855 8 10.1094H7ZM6 3.5C6 3.22386 5.77614 3 5.5 3C5.22386 3 5 3.22386 5 3.5H6ZM5 7.14989C5 7.42604 5.22386 7.64989 5.5 7.64989C5.77614 7.64989 6 7.42604 6 7.14989H5ZM6 9.5C6 9.22386 5.77614 9 5.5 9C5.22386 9 5 9.22386 5 9.5H6ZM5 10.5625C5 10.8386 5.22386 11.0625 5.5 11.0625C5.77614 11.0625 6 10.8386 6 10.5625H5ZM3.49999 2.57617H2.99999V2.57617L3.49999 2.57617ZM23.751 5.57617L24.251 5.58381V5.57617H23.751ZM7 3.5V10.1094H8V3.5H7ZM5 3.5V7.14989H6V3.5H5ZM5 9.5V10.5625H6V9.5H5ZM3.5 11.0625H25.0625V10.0625H3.5V11.0625ZM26.375 12.375V28.6875H27.375V12.375H26.375ZM25.0625 30H3.3125V31H25.0625V30ZM2 28.6875V12.375H1V28.6875H2ZM3.3125 30C2.58763 30 2 29.4124 2 28.6875H1C1 29.9647 2.03534 31 3.3125 31V30ZM26.375 28.6875C26.375 29.4124 25.7874 30 25.0625 30V31C26.3397 31 27.375 29.9647 27.375 28.6875H26.375ZM25.0625 11.0625C25.7874 11.0625 26.375 11.6501 26.375 12.375H27.375C27.375 11.0978 26.3397 10.0625 25.0625 10.0625V11.0625ZM3.5 10.0625C2.86892 10.0625 2.25401 10.3158 1.79538 10.7171C1.33552 11.1194 1 11.7017 1 12.375H2C2 12.0472 2.16398 11.7233 2.45386 11.4697C2.74498 11.215 3.13007 11.0625 3.5 11.0625V10.0625ZM4.57616 2H13.5361V1H4.57616V2ZM4 10.5625L3.99999 2.57617L2.99999 2.57617L3 10.5625L4 10.5625ZM14.1123 2.57617V10.5625H15.1123V2.57617H14.1123ZM4.57616 1C3.70566 1 2.99999 1.70568 2.99999 2.57617H3.99999C3.99999 2.25796 4.25795 2 4.57616 2V1ZM13.5361 2C13.8543 2 14.1123 2.25796 14.1123 2.57617H15.1123C15.1123 1.70568 14.4066 1 13.5361 1V2ZM22.6748 4H14.7168V5H22.6748V4ZM24.1748 10.5701L24.2509 5.58381L23.251 5.56853L23.1749 10.5549L24.1748 10.5701ZM22.6748 5C22.993 5 23.251 5.25796 23.251 5.57617H24.251C24.251 4.70568 23.5453 4 22.6748 4V5Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.4063 3C12.7342 3 13 3.26583 13 3.59375V6.17285C13 6.50077 12.7342 6.7666 12.4062 6.7666H10.9033C10.5754 6.7666 10.3096 6.50077 10.3096 6.17285L10.3096 3.59375C10.3096 3.26583 10.5754 3 10.9033 3L12.4063 3Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M24 17C22.8954 17 22 17.8955 22 19V21C22 22.1046 22.8954 23 24 23H29C30.1046 23 31 22.1046 31 21V19C31 17.8955 30.1046 17 29 17H24ZM25 19C24.4477 19 24 19.4477 24 20C24 20.5523 24.4477 21 25 21C25.5523 21 26 20.5523 26 20C26 19.4477 25.5523 19 25 19Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar SvgCirculation = function SvgCirculation(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCirculation, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/circulation.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.99097 5.24609C8.99097 7.17909 7.42396 8.74609 5.49097 8.74609C3.55797 8.74609 1.99097 7.17909 1.99097 5.24609C1.99097 3.3131 3.55797 1.74609 5.49097 1.74609C7.42396 1.74609 8.99097 3.3131 8.99097 5.24609Z\",\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M30.2988 26.5413C30.2988 28.4743 28.7318 30.0413 26.7988 30.0413C24.8658 30.0413 23.2988 28.4743 23.2988 26.5413C23.2988 24.6083 24.8658 23.0413 26.7988 23.0413C28.7318 23.0413 30.2988 24.6083 30.2988 26.5413Z\",\n  fill: \"#3F71ED\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 5.125C9 3.12297 7.32107 1.5 5.25 1.5C3.17893 1.5 1.5 3.12297 1.5 5.125C1.5 7.12703 3.17893 8.75 5.25 8.75C6.82377 8.75 8.17111 7.81286 8.72741 6.48438C8.9032 6.06459 9 5.60572 9 5.125ZM9 5.125H12.75C13.2678 5.125 13.6875 4.71926 13.6875 4.21875C13.6875 3.71824 14.1072 3.3125 14.625 3.3125H19.3125C19.8303 3.3125 20.25 3.71824 20.25 4.21875C20.25 4.71926 20.6697 5.125 21.1875 5.125H23M19.3125 16C19.3125 13.998 17.6336 12.375 15.5625 12.375C14.1745 12.375 12.9626 13.104 12.3142 14.1875C11.9951 14.7207 11.8125 15.3397 11.8125 16M19.3125 16C19.3125 17.0827 18.8215 18.0545 18.043 18.7188C17.3819 19.2828 16.5135 19.625 15.5625 19.625C13.4914 19.625 11.8125 18.002 11.8125 16M19.3125 16H20.9531C21.6003 16 22.125 15.4928 22.125 14.8672C22.125 14.2416 22.6497 13.7344 23.2969 13.7344H24.75C25.8546 13.7344 26.75 12.8688 26.75 11.801V8.75M11.8125 16H7.25C6.14543 16 5.25 16.8656 5.25 17.9333V21.4375M9 25.0625C9 27.0645 7.32107 28.6875 5.25 28.6875C3.17893 28.6875 1.5 27.0645 1.5 25.0625C1.5 23.0605 3.17893 21.4375 5.25 21.4375M9 25.0625C9 23.0605 7.32107 21.4375 5.25 21.4375M9 25.0625H15.3281C15.9753 25.0625 16.5 25.5697 16.5 26.1953C16.5 26.8209 17.0247 27.3281 17.6719 27.3281H23M23 5.125C23 7.12703 24.6789 8.75 26.75 8.75M23 5.125C23 3.12297 24.6789 1.5 26.75 1.5C28.8211 1.5 30.5 3.12297 30.5 5.125C30.5 5.60572 30.4032 6.06459 30.2274 6.48438C29.6711 7.81286 28.3238 8.75 26.75 8.75M30.5 26.875C30.5 28.877 28.8211 30.5 26.75 30.5C24.6789 30.5 23 28.877 23 26.875C23 25.5332 23.7541 24.3617 24.875 23.735C25.4266 23.4265 26.067 23.25 26.75 23.25C28.8211 23.25 30.5 24.873 30.5 26.875Z\",\n  stroke: \"#EDF1F7\"\n});\n\nvar SvgResales = function SvgResales(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgResales, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/resales.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.1476 18.5268C15.0873 20.5517 17.8183 21.8125 20.8438 21.8125C26.729 21.8125 31.5 17.0415 31.5 11.1562C31.5 5.27097 26.729 0.5 20.8438 0.5C14.9585 0.5 10.1875 5.27097 10.1875 11.1562C10.1875 14.0161 11.314 16.6128 13.1476 18.5268ZM13.1476 18.5268L1.5 30.5\",\n  stroke: \"#EDF1F7\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 21.5002L1.5 30.5002\",\n  stroke: \"#3F71ED\",\n  strokeWidth: 3,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/search.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  width: 32,\n  height: 32,\n  rx: 16,\n  fill: \"#3E516F\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.6977 8.16196C15.0302 8.78918 13.0459 11.165 13.0459 14C13.0459 17.3137 15.7569 20 19.101 20C21.1149 20 22.8992 19.0258 24 17.527C23.2807 21.2149 20.0053 24 16.0734 24C11.6146 24 8 20.4183 8 16C8 11.5817 11.6146 8 16.0734 8C16.6298 8 17.173 8.05576 17.6977 8.16196Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar SvgDark = function SvgDark(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDark, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dark.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 10,\n  cy: 10,\n  r: 4,\n  fill: \"#EDF1F7\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 9,\n  width: 2,\n  height: 4,\n  rx: 1,\n  fill: \"#EDF1F7\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 9,\n  y: 16,\n  width: 2,\n  height: 4,\n  rx: 1,\n  fill: \"#EDF1F7\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  y: 11,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-90 0 11)\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 16,\n  y: 11,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-90 16 11)\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 3.63604,\n  y: 17.7783,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-135 3.63604 17.7783)\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 14.9497,\n  y: 6.4646,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-135 14.9497 6.4646)\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 2.22182,\n  y: 3.63599,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-45 2.22182 3.63599)\",\n  fill: \"#EDF1F7\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 13.5355,\n  y: 14.9497,\n  width: 2,\n  height: 4,\n  rx: 1,\n  transform: \"rotate(-45 13.5355 14.9497)\",\n  fill: \"#EDF1F7\"\n});\n\nvar SvgLight = function SvgLight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/light.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\n\nimport styles from \"./LeftMenu.module.scss\";\n\nimport { ReactComponent as LogoIcon } from \"./assets/logo.svg\";\nimport { ReactComponent as CirculationIcon } from \"./assets/circulation.svg\";\nimport { ReactComponent as ResalesIcon } from \"./assets/resales.svg\";\nimport { ReactComponent as SearchIcon } from \"./assets/search.svg\";\nimport { ReactComponent as DarkThemeIcon } from \"./assets/dark.svg\";\nimport { ReactComponent as LightThemeIcon } from \"./assets/light.svg\";\n\ntype LeftMenuProps = {};\n\ntype LeftMenuState = {\n  // Меню - Оборот\n  switchTurnover: boolean;\n  // Меню - Перепродажи\n  switchResales: boolean;\n  // Меню - поиск ИФНС или НП\n  switchSearch: boolean;\n};\n\n/**\n * Компонент - боковое меню\n */\nclass LeftMenu extends PureComponent<LeftMenuProps, LeftMenuState> {\n  constructor(props: LeftMenuProps) {\n    super(props);\n    this.state = {\n      switchTurnover: true,\n      switchResales: false,\n      switchSearch: false,\n    };\n  }\n\n  render() {\n    const {\n      state: { switchTurnover, switchResales, switchSearch },\n    } = this;\n\n    return (\n      <div className={styles.containerMenu}>\n        <div className={styles.menu}>\n          <div className={styles.logoIconContainer}>\n            <LogoIcon className={styles.logoIcon} />\n          </div>\n          <div className={styles.iconsContainer}>\n            <div\n              className={\n                switchTurnover\n                  ? `${styles.menuItem} ${styles.activeMenu}`\n                  : styles.menuItem\n              }\n              onClick={() => {\n                this.setState({\n                  switchTurnover: true,\n                  switchResales: false,\n                  switchSearch: false,\n                });\n              }}\n            >\n              <CirculationIcon className={styles.icons} />\n              <span className={styles.labelUpper}>Оборот</span>\n            </div>\n            <div\n              className={\n                switchResales\n                  ? `${styles.menuItem} ${styles.activeMenu}`\n                  : styles.menuItem\n              }\n              onClick={() => {\n                this.setState({\n                  switchTurnover: false,\n                  switchResales: true,\n                  switchSearch: false,\n                });\n              }}\n            >\n              <ResalesIcon className={styles.icons} />\n              <span className={styles.labelUpper}>Перепродажи</span>\n            </div>\n            <div\n              className={\n                switchSearch\n                  ? `${styles.menuItem} ${styles.activeMenu}`\n                  : styles.menuItem\n              }\n              onClick={() => {\n                this.setState({\n                  switchTurnover: false,\n                  switchResales: false,\n                  switchSearch: true,\n                });\n              }}\n            >\n              <SearchIcon className={styles.icons} />\n              <span className={styles.labelLower}>\n                Поиск\n                <br />\n                ИФНС или НП\n              </span>\n            </div>\n          </div>\n          <div className={styles.themeContainer}>\n            <DarkThemeIcon className={styles.iconsTheme} />\n            <LightThemeIcon className={styles.iconsTheme} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftMenu;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.08397 19.3203C5.28189 19.6172 5.71811 19.6172 5.91602 19.3203L8.98177 14.7217C9.20329 14.3894 8.96509 13.9443 8.56574 13.9443H2.43426C2.03491 13.9443 1.79672 14.3894 2.01823 14.7217L5.08397 19.3203Z\",\n  fill: \"#8B9CB8\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 13.5,\n  y: 12.9443,\n  width: 6,\n  height: 6,\n  rx: 3,\n  fill: \"#8B9CB8\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6.5 27.9443H16.5C23.1274 27.9443 28.5 22.5718 28.5 15.9443V15.4443C28.5 9.09306 23.3513 3.94434 17 3.94434H16.1667C10.2756 3.94434 5.5 8.71997 5.5 14.611V14.611\",\n  stroke: \"#8B9CB8\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"bevel\"\n});\n\nvar SvgRestoreFilters = function SvgRestoreFilters(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 32,\n    viewBox: \"0 0 33 32\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgRestoreFilters, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/restoreFilters.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#clip0)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.0001 8.6897C24.0001 8.63919 23.9383 8.46671 23.9412 8.39535C23.944 8.32399 23.8822 8.18127 23.8598 8.13367C23.8373 8.08607 23.6773 7.97311 23.6745 7.93152C23.6716 7.88993 23.6689 7.72336 23.6716 7.70552C23.6745 7.68768 23.7839 7.68768 23.7614 7.66092C23.739 7.63416 23.6688 7.649 23.6548 7.61332C23.6408 7.57764 23.5761 7.57463 23.5453 7.54196C23.5144 7.50928 23.461 7.46168 23.4582 7.39924C23.4554 7.3368 23.4498 7.19709 23.4666 7.17033C23.4835 7.14357 23.5593 7.13165 23.548 7.08113C23.5368 7.03062 23.534 6.99194 23.5031 6.96818C23.4722 6.94443 23.3599 6.95626 23.3122 6.92358C23.2645 6.89091 23.1381 6.76012 23.1297 6.70951C23.1213 6.65899 23.1354 6.65899 23.1241 6.62332C23.1129 6.58764 23.0848 6.54304 23.1101 6.54003C23.1354 6.53703 23.1045 6.59656 23.1551 6.59656C23.2056 6.59656 23.2646 6.60848 23.2561 6.55787C23.2477 6.50736 23.1045 6.42999 23.0821 6.43299C23.0597 6.436 23.0597 6.47459 23.0147 6.46867C22.9698 6.46276 22.9305 6.40323 22.8771 6.38248C22.8754 6.3818 22.8741 6.38054 22.8724 6.37967C22.8238 6.35553 22.817 6.27447 22.7845 6.24568C22.7508 6.21591 22.6497 6.26652 22.6469 6.29619C22.6441 6.32596 22.6891 6.37056 22.6609 6.37346C22.6328 6.37637 22.5655 6.41506 22.5346 6.37647C22.5037 6.33779 22.4588 6.31704 22.456 6.26943C22.4531 6.22183 22.3914 6.09104 22.3577 6.02268C22.324 5.95433 22.178 5.87105 22.1808 5.82344C22.1837 5.77584 22.1275 5.72232 22.15 5.70748C22.1724 5.69265 22.2118 5.71941 22.2118 5.69265C22.2118 5.66589 22.1472 5.61237 22.1949 5.60045C22.2426 5.58852 22.3072 5.63312 22.296 5.57369C22.2847 5.51425 22.223 5.50533 22.2258 5.47858C22.2286 5.45182 22.1752 5.27933 22.2061 5.2645C22.237 5.24967 22.3857 5.42806 22.3857 5.36562C22.3857 5.30319 22.3183 5.19314 22.3183 5.14563C22.3183 5.09803 22.338 4.91963 22.3633 4.86912C22.3886 4.81861 22.4083 4.75617 22.4784 4.75016C22.5486 4.74424 22.7282 4.768 22.6917 4.70556C22.6552 4.64312 22.5345 4.55993 22.5345 4.52716C22.5345 4.49439 22.5205 4.32201 22.5008 4.2744C22.4811 4.2268 22.411 4.11685 22.411 4.07817C22.411 4.03948 22.3997 3.98005 22.3829 3.96221C22.3661 3.94437 22.3408 3.93545 22.3632 3.87893C22.3772 3.84363 22.3563 3.7969 22.3426 3.75366C22.3344 3.72758 22.3288 3.70286 22.3351 3.68269C22.352 3.62917 22.3379 3.61434 22.3183 3.57565C22.2986 3.53697 22.3014 3.45669 22.2958 3.3705C22.2902 3.28431 22.2818 3.28431 22.2621 3.26346C22.2425 3.24261 22.1499 3.26647 22.2144 3.22187C22.279 3.17727 22.2734 3.18919 22.2847 3.15943C22.2959 3.12966 22.4054 3.01671 22.4334 2.98404C22.4615 2.95136 22.3604 2.85615 22.3211 2.83541C22.2818 2.81466 22.2621 2.87109 22.2397 2.85625C22.2173 2.84142 22.2173 2.82358 22.192 2.82649C22.1667 2.82949 22.1415 2.87409 22.1078 2.87409C22.0741 2.87409 21.9787 2.89785 21.9562 2.8771C21.9337 2.85625 21.9196 2.82949 21.8944 2.84142C21.8691 2.85334 21.8438 2.88902 21.7905 2.86517C21.7372 2.84142 21.7709 2.94545 21.7316 2.94846C21.6923 2.95146 21.681 2.98413 21.6558 2.97221C21.6305 2.96028 21.594 2.94545 21.5855 2.97521C21.5771 3.00498 21.549 3.10009 21.5322 3.10009C21.5153 3.10009 21.4283 3.10901 21.4424 3.08225C21.4564 3.05549 21.6529 2.82949 21.6558 2.77597C21.6586 2.72245 21.6108 2.60058 21.5884 2.54997C21.566 2.49946 21.4705 2.39543 21.4396 2.37759C21.4088 2.35975 21.347 2.41327 21.3105 2.41327C21.2741 2.41327 21.2123 2.39242 21.2375 2.35975C21.2628 2.32708 21.2067 2.31214 21.2123 2.2914C21.2179 2.27065 21.26 2.27356 21.2488 2.2468C21.2375 2.22004 21.1898 2.18736 21.2235 2.18736C21.2572 2.18736 21.3106 2.26464 21.3443 2.25872C21.378 2.25281 21.4033 2.20821 21.4229 2.21713C21.4426 2.22605 21.4847 2.26473 21.5043 2.23196C21.524 2.19929 21.5268 2.10408 21.5156 2.05657C21.5043 2.00897 21.5886 1.92278 21.6138 1.90193C21.6391 1.88109 21.771 1.91386 21.7879 1.90494C21.8047 1.89602 21.8609 1.85442 21.8413 1.82165C21.8216 1.78898 21.8834 1.73245 21.9058 1.7087C21.9282 1.68495 21.9985 1.7087 22.0181 1.67603C22.0378 1.64335 22.0574 1.63734 22.0406 1.61058C22.0237 1.58382 21.976 1.56298 22.0013 1.56007C22.0266 1.55716 22.1051 1.59575 22.0827 1.55706C22.0603 1.51838 22.0462 1.52439 22.0462 1.49162C22.0462 1.45885 22.0686 1.41726 22.0433 1.43219C22.0181 1.44702 21.9928 1.50054 21.9563 1.47979C21.9197 1.45895 21.8945 1.37867 21.872 1.36684C21.8496 1.35491 21.7991 1.39059 21.7878 1.37576C21.7765 1.36093 21.7569 1.33116 21.7428 1.33116C21.7288 1.33116 21.6389 1.37876 21.653 1.35201C21.667 1.32525 21.7036 1.28957 21.7036 1.26581C21.7036 1.24206 21.7008 1.20037 21.698 1.18553C21.6951 1.1707 21.6474 1.20638 21.6503 1.17962C21.6531 1.15286 21.7064 1.12019 21.6924 1.08742C21.6784 1.05474 21.5913 1.06366 21.5885 1.02798C21.5856 0.992305 21.5857 0.941792 21.566 0.9447C21.5464 0.947706 21.2797 1.1677 21.2488 1.17361C21.218 1.17952 21.2039 1.31633 21.1843 1.32224C21.1646 1.32815 21.1983 1.36984 21.1814 1.37876C21.1646 1.38768 21.1365 1.39069 21.114 1.43228C21.0916 1.47388 21.0804 1.54524 21.1112 1.52449C21.1421 1.50364 21.2347 1.51256 21.274 1.5304C21.3133 1.54824 21.3554 1.57801 21.3301 1.57801C21.3048 1.57801 21.2375 1.64936 21.215 1.63453C21.1926 1.6197 21.0297 1.58402 21.0017 1.56317C20.9736 1.54233 20.982 1.63453 20.954 1.63453C20.9259 1.63453 20.8669 1.60777 20.8445 1.63453C20.8221 1.66129 20.6339 1.85452 20.6143 1.85753C20.5947 1.86053 20.5133 1.97048 20.4796 1.97048C20.4459 1.97048 20.4262 1.96156 20.4066 1.97348C20.3869 1.98541 20.3616 2.04484 20.3252 2.04484C20.2888 2.04484 20.2831 2.13995 20.2326 2.13995C20.182 2.13995 20.0949 2.22615 20.0809 2.24108C20.0669 2.25591 19.9237 2.44623 19.8676 2.46107C19.8115 2.4759 19.8058 2.5235 19.7918 2.57402C19.7778 2.62453 19.7188 2.76725 19.702 2.78509C19.6852 2.80293 19.7244 2.8356 19.6907 2.84753C19.657 2.85945 19.6234 2.88912 19.6065 2.91888C19.5897 2.94865 19.5364 3.07644 19.5167 3.09427C19.497 3.11211 19.5757 3.18047 19.5925 3.21023C19.6093 3.24 19.6964 3.18347 19.7385 3.18648C19.7806 3.18948 19.8593 3.23408 19.8789 3.26976C19.8986 3.30544 19.8845 3.45116 19.8424 3.44816C19.8002 3.44515 19.7581 3.43332 19.7329 3.44515C19.7076 3.45708 19.6711 3.51952 19.6262 3.51351C19.5812 3.50759 19.4774 3.46891 19.4577 3.50158C19.438 3.53425 19.5111 3.61453 19.4914 3.63829C19.4717 3.66204 19.3454 3.8256 19.3285 3.86429C19.3117 3.90297 19.2443 3.90889 19.2246 3.94757C19.2049 3.98625 19.1965 4.08137 19.1713 4.11404C19.1667 4.11995 19.1625 4.12752 19.1584 4.13547C19.1405 4.17134 19.1291 4.22244 19.1291 4.24183C19.1291 4.26558 18.9579 4.39346 18.9186 4.36971C18.8792 4.34596 18.8428 4.26267 18.8147 4.24183C18.7865 4.22098 18.6153 4.17047 18.5003 4.2745C18.3852 4.37853 18.2251 4.77992 18.197 4.81861C18.1689 4.85729 18.0847 4.96132 18.0595 4.92865C18.0342 4.89598 17.9472 4.85138 17.9135 4.87513C17.8798 4.89889 17.8798 4.96132 17.8574 4.94649C17.8349 4.93166 17.8265 4.91081 17.8068 4.91673C17.7871 4.92264 17.7619 4.98217 17.7423 4.97325C17.7227 4.96433 17.7142 4.93757 17.7002 4.94649C17.6861 4.95541 17.6552 5.03569 17.6328 4.997C17.6103 4.95832 17.6243 4.92565 17.6496 4.91081C17.6749 4.89598 17.6833 4.88105 17.658 4.8603C17.6328 4.83945 17.5345 4.8187 17.5121 4.84546C17.4897 4.87222 17.3689 4.95551 17.3521 4.98517C17.3352 5.01484 17.4082 5.23192 17.3886 5.27361C17.3689 5.31521 17.3633 5.38957 17.3268 5.35981C17.2903 5.33004 17.2678 5.32413 17.2931 5.29436C17.3184 5.2646 17.3408 5.25868 17.3296 5.23192C17.3184 5.20516 17.2763 5.15756 17.251 5.16057C17.2257 5.16357 17.1612 5.2646 17.1499 5.24676C17.1387 5.22892 17.105 5.16347 17.1302 5.15756C17.1555 5.15165 17.2987 5.0832 17.2847 5.05353C17.2707 5.02376 17.1639 5.08329 17.1191 5.11296C17.0742 5.14263 16.8861 5.31511 16.8327 5.31812C16.7793 5.32112 16.6867 5.34187 16.7063 5.37464C16.726 5.40731 16.7766 5.38947 16.7737 5.42816C16.7709 5.46684 16.7793 5.47576 16.7513 5.50252C16.7232 5.52928 16.6867 5.57088 16.6979 5.60365C16.7092 5.63632 16.7569 5.73444 16.7569 5.69585C16.7569 5.65717 16.7906 5.57689 16.7934 5.60966C16.7962 5.64233 16.7794 5.68402 16.8271 5.7167C16.8748 5.74937 16.9338 5.80589 16.9563 5.80589C16.9787 5.80589 16.9226 5.90101 16.8945 5.88918C16.8664 5.87725 16.8243 5.85941 16.8102 5.87434C16.7962 5.88918 16.7962 5.93087 16.7821 5.9427C16.7681 5.95462 16.8495 5.97838 16.8495 6.01105C16.8495 6.04372 16.8888 6.08832 16.8355 6.06757C16.7821 6.04673 16.5969 6.08842 16.5717 6.10325C16.5464 6.11809 16.5211 6.26381 16.5043 6.27573C16.4874 6.28766 16.3751 6.34118 16.3358 6.30841C16.2965 6.27573 16.2487 6.22222 16.2376 6.24897C16.2263 6.27573 16.2573 6.37085 16.2825 6.4392C16.3078 6.50755 16.3162 6.72163 16.2881 6.7098C16.26 6.69797 16.26 6.67712 16.2347 6.67412C16.2095 6.67111 16.1842 6.7098 16.1674 6.70088C16.1505 6.69196 15.9793 6.59976 15.9652 6.56117C15.9512 6.52248 15.8978 6.54633 15.8641 6.51957C15.8304 6.49282 15.7294 6.42146 15.749 6.40662C15.7687 6.39179 15.8052 6.45423 15.8304 6.40362C15.8557 6.3531 15.8922 6.32033 15.8333 6.28465C15.7743 6.24897 15.7013 6.33817 15.7182 6.27874C15.735 6.21931 15.7576 6.19546 15.7463 6.17471C15.735 6.15386 15.6396 6.20147 15.6396 6.15386C15.6396 6.10626 15.6882 6.07998 15.6396 6.05575C15.5919 6.03189 15.561 6.06466 15.5273 6.03791C15.4936 6.01115 15.4908 5.99331 15.4655 5.99631C15.4402 5.99932 15.3981 6.04683 15.3784 6.05284C15.3587 6.05875 15.4009 6.13612 15.37 6.11828C15.3391 6.10044 15.3195 6.07368 15.3082 6.08561C15.2969 6.09753 15.2942 6.16889 15.2661 6.14805C15.238 6.1272 15.1482 6.09152 15.1145 6.10345C15.0808 6.11537 15.0976 6.1718 15.0695 6.1748C15.0414 6.17781 15.1032 6.3056 15.1145 6.32344C15.1257 6.34128 15.1116 6.44831 15.0976 6.44831C15.0836 6.44831 14.9207 6.55234 14.9012 6.55234C14.8815 6.55234 14.8338 6.51667 14.8113 6.52258C14.7889 6.52849 14.7945 6.59093 14.7748 6.59093C14.7551 6.59093 14.6485 6.58793 14.6316 6.54633C14.6148 6.50474 14.654 6.47498 14.6316 6.45714C14.6092 6.4393 14.5558 6.44822 14.525 6.46906C14.4941 6.48991 14.306 6.51065 14.2864 6.51065C14.2668 6.51065 14.2077 6.62962 14.1797 6.63553C14.1516 6.64145 14.1741 6.76632 14.146 6.72774C14.1179 6.68905 14.1067 6.62661 14.0899 6.59093C14.073 6.55525 14.0759 6.51657 14.0562 6.53441C14.0365 6.55225 14.0534 6.61168 14.0338 6.61769C14.0141 6.62361 13.8877 6.64445 13.8877 6.6207C13.8877 6.59791 13.9258 6.55099 13.9093 6.54449C13.9085 6.5442 13.9083 6.54352 13.9074 6.54343C13.885 6.54042 13.8372 6.5761 13.8176 6.5761C13.798 6.5761 13.7305 6.5791 13.7221 6.59093C13.7137 6.60286 13.6884 6.68605 13.7221 6.68605C13.7558 6.68605 13.8316 6.64736 13.8288 6.67412C13.8259 6.70088 13.8035 6.79008 13.7782 6.79599C13.753 6.80191 13.7417 6.77515 13.7193 6.80491C13.6968 6.83468 13.5958 6.9803 13.5508 6.9803C13.5059 6.9803 13.461 6.97138 13.4469 6.99814C13.4329 7.0249 13.4132 7.17654 13.3964 7.15278C13.3795 7.12903 13.3908 7.01899 13.4048 6.98631C13.4188 6.95364 13.4693 6.95063 13.4722 6.92387C13.475 6.89711 13.4609 6.84059 13.4946 6.81984C13.5283 6.79909 13.5676 6.82285 13.576 6.76933C13.5844 6.71581 13.6125 6.6207 13.6405 6.58793C13.6686 6.55525 13.7079 6.54032 13.7023 6.51065C13.6968 6.48089 13.6518 6.49282 13.6855 6.46606C13.7192 6.4393 13.7557 6.34418 13.7922 6.30851C13.8287 6.27283 13.8511 6.25799 13.8511 6.20447C13.8511 6.15095 13.9438 6.038 13.9298 5.98448C13.9158 5.93096 13.8231 5.9458 13.854 5.91904C13.8848 5.89228 13.8792 5.82393 13.8736 5.80308C13.8681 5.78224 13.8231 5.70196 13.7781 5.6782C13.7332 5.65445 13.7473 5.72581 13.7332 5.70797C13.7192 5.69013 13.6771 5.66638 13.6827 5.63361C13.6882 5.60093 13.7023 5.55633 13.6714 5.55032C13.6405 5.54441 13.6321 5.57117 13.6068 5.55624C13.5816 5.5414 13.5703 5.51164 13.5479 5.52647C13.5255 5.54131 13.4749 5.57408 13.4355 5.57698C13.3963 5.57999 13.3008 5.61567 13.2895 5.61858C13.2783 5.62158 13.3008 5.6751 13.2755 5.69294C13.2502 5.71078 13.1688 5.76731 13.1688 5.73163C13.1688 5.69595 13.2671 5.60975 13.2362 5.56215C13.2054 5.51455 13.065 5.57999 13.0734 5.55914C13.0819 5.5383 13.0903 5.50262 13.0763 5.50563C13.0623 5.50863 12.9444 5.56806 12.9781 5.52347C13.0117 5.47887 13.1128 5.44319 13.0791 5.39558C13.0454 5.34798 12.9809 5.36291 12.9668 5.34507C12.9527 5.32723 12.9022 5.29456 12.8573 5.33615C12.8123 5.37774 12.7338 5.53539 12.7254 5.56806C12.7169 5.60074 12.658 5.6721 12.6832 5.71078C12.7085 5.74947 12.7478 5.7643 12.7338 5.79106C12.7198 5.81782 12.6861 5.84157 12.6524 5.85941C12.6187 5.87725 12.5316 5.83265 12.5205 5.85641C12.5092 5.88016 12.5065 5.92476 12.5373 5.92777C12.5682 5.93077 12.6412 6.01396 12.6075 5.99912C12.5738 5.98429 12.5065 5.97537 12.4896 5.99612C12.4728 6.01696 12.4672 6.0794 12.4306 6.07339C12.3941 6.06748 12.4026 6.04964 12.3914 6.04964C12.3801 6.04964 12.3689 6.14184 12.3577 6.12691C12.3464 6.11208 12.3408 6.09424 12.3211 6.09714C12.3015 6.10015 12.2763 6.15958 12.2734 6.12691C12.2706 6.09424 12.2734 6.04072 12.2959 6.03471C12.3183 6.02879 12.3548 5.99602 12.3324 5.9871C12.31 5.97818 12.2903 5.96926 12.265 6.00494C12.2398 6.04062 12.2145 6.06147 12.1921 6.06147C12.1696 6.06147 12.091 6.04363 12.0544 6.07039C12.0179 6.09714 12.0039 6.13282 12.0404 6.12691C12.077 6.121 12.091 6.15667 12.0433 6.18043C11.9956 6.20418 11.9254 6.23695 11.9001 6.24587C11.8748 6.25479 11.8186 6.26672 11.7597 6.27263C11.7008 6.27855 11.6362 6.36774 11.6194 6.40051C11.6025 6.43329 11.597 6.47187 11.5576 6.45403C11.5182 6.43619 11.4818 6.40643 11.4705 6.43619C11.4593 6.46596 11.5351 6.50164 11.5014 6.50164C11.4677 6.50164 11.4171 6.49272 11.4227 6.51948C11.4283 6.54624 11.4788 6.59384 11.4648 6.60276C11.4508 6.61168 11.3946 6.55816 11.3666 6.57901C11.3385 6.59985 11.3132 6.64736 11.3413 6.68013C11.3694 6.7128 11.448 6.73365 11.42 6.73064C11.3919 6.72764 11.3413 6.73064 11.3639 6.7574C11.3863 6.78416 11.4368 6.79008 11.4425 6.81092C11.4481 6.83177 11.4509 6.81984 11.4509 6.86444C11.4509 6.90904 11.4846 6.95364 11.4425 6.94472C11.4004 6.9358 11.3695 6.91205 11.3274 6.94171C11.2853 6.97148 11.2713 7.01307 11.2319 6.98932C11.1926 6.96556 11.187 6.95664 11.1421 6.97739C11.0972 6.99824 11.0018 7.01899 10.9484 7.00115C10.895 6.98331 10.8108 6.94462 10.7855 7.00415C10.7602 7.06359 10.7321 7.10818 10.7546 7.15579C10.7771 7.20339 10.7968 7.24799 10.7828 7.30442C10.7687 7.36094 10.7294 7.39362 10.7659 7.4323C10.8024 7.47099 10.9035 7.48582 10.9035 7.5215C10.9035 7.55718 10.9091 7.59586 10.9259 7.63445C10.9428 7.67314 10.9175 7.71172 10.8698 7.71172C10.8221 7.71172 10.7716 7.67905 10.7547 7.62844C10.7379 7.57793 10.7098 7.60469 10.7098 7.54816C10.7098 7.49164 10.6564 7.49164 10.5975 7.43812C10.5701 7.4132 10.5458 7.40671 10.5245 7.40642C10.4999 7.40613 10.4793 7.41437 10.4627 7.41437C10.4318 7.41437 10.3785 7.44113 10.384 7.46488C10.3896 7.48863 10.4374 7.48272 10.4317 7.51248C10.4262 7.54225 10.4346 7.57793 10.4233 7.57793C10.4121 7.57793 10.4009 7.60769 10.3699 7.58093C10.3391 7.55417 10.3138 7.51549 10.2885 7.50657C10.2633 7.49765 10.2043 7.49765 10.2015 7.52441C10.1986 7.55117 10.1959 7.60769 10.2043 7.65229C10.2127 7.69689 10.238 7.69098 10.2801 7.72666C10.3222 7.76234 10.3307 7.78609 10.3644 7.79501C10.398 7.80393 10.4121 7.85444 10.4093 7.87829C10.4065 7.90205 10.3869 7.95266 10.3672 7.9259C10.3475 7.89914 10.3644 7.84862 10.3222 7.8367C10.2801 7.82477 10.1088 7.77126 10.1004 7.71774C10.092 7.66422 10.1144 7.66121 10.1088 7.62262C10.1032 7.58394 10.106 7.53042 10.1201 7.50667C10.1341 7.48291 10.1931 7.41446 10.1931 7.35503C10.1931 7.2956 10.2127 7.18856 10.1931 7.17072C10.1734 7.15288 10.1538 7.12312 10.1454 7.15879C10.1369 7.19447 10.1482 7.37287 10.1313 7.39371C10.1145 7.41456 10.0106 7.47099 9.96572 7.47399C9.92077 7.477 9.90118 7.53343 9.89276 7.56319C9.88433 7.59296 9.81979 7.59887 9.82537 7.63455C9.83096 7.67023 9.8619 7.68215 9.8619 7.73858C9.8619 7.79511 9.91802 7.92289 9.9096 7.95266C9.90118 7.98242 9.81979 8.10129 9.80569 8.12514C9.79168 8.14889 9.75799 8.2441 9.75799 8.28569C9.75799 8.32729 9.78042 8.32729 9.75515 8.36898C9.72988 8.41057 9.68218 8.48794 9.72146 8.49386C9.76073 8.49977 9.79726 8.49085 9.81695 8.50578C9.83663 8.52062 9.87875 8.53555 9.9096 8.5147C9.94045 8.49386 9.97415 8.49095 10.0247 8.53254C10.0752 8.57413 10.1987 8.66333 10.1876 8.68718C10.1763 8.71094 10.1679 8.7853 10.1904 8.81797C10.2128 8.85065 10.2101 8.89234 10.1876 8.91018C10.1651 8.92802 10.1483 8.93994 10.137 8.95778C10.1258 8.97562 10.0893 9.02914 10.1062 9.06181C10.123 9.09449 10.1595 9.13909 10.1904 9.13618C10.2213 9.13317 10.2746 9.18669 10.2072 9.17777C10.1399 9.16885 10.0612 9.13909 10.0528 9.07965C10.0444 9.02022 10.0836 8.98745 10.0865 8.93694C10.0893 8.88642 10.0641 8.86257 10.0809 8.84473C10.0977 8.82689 10.1259 8.84774 10.109 8.79713C10.0922 8.74662 10.0529 8.70493 10.0529 8.67817C10.0529 8.65141 10.0726 8.61272 10.0473 8.61573C10.022 8.61873 9.81429 8.62465 9.79461 8.65141C9.77492 8.67817 9.75249 8.74652 9.74691 8.78821C9.74132 8.8298 9.76659 8.83581 9.76092 8.90417C9.75533 8.97252 9.72164 9.04097 9.68795 9.06172C9.65426 9.08256 9.61498 9.12416 9.60656 9.15392C9.59813 9.18369 9.55602 9.28772 9.52232 9.29664C9.48863 9.30556 9.39314 9.35607 9.34544 9.34715C9.29774 9.33823 9.31459 9.46902 9.2668 9.4601C9.2191 9.45118 9.21342 9.40658 9.17973 9.39175C9.14604 9.37692 9.01969 9.37692 9.00568 9.34414C8.99168 9.31137 9.0001 9.29955 8.97199 9.28171C8.94388 9.26387 8.8906 9.22819 8.8906 9.19842C8.8906 9.16866 8.8906 9.12406 8.91028 9.13298C8.92997 9.1419 9.00578 9.13298 9.01978 9.17166C9.03379 9.21035 9.06474 9.22518 9.09275 9.22218C9.12086 9.21917 9.24995 9.21025 9.28648 9.1895C9.32301 9.16866 9.40156 9.04979 9.4381 9.01702C9.47463 8.98435 9.49147 9.02594 9.51949 8.96942C9.54759 8.91289 9.4998 8.8713 9.53633 8.82079C9.57286 8.77027 9.64299 8.72567 9.63182 8.68999C9.62056 8.65431 9.53359 8.54427 9.55318 8.48183C9.57286 8.41939 9.58403 8.39264 9.59246 8.33611C9.60088 8.27959 9.65425 8.23208 9.65425 8.18147C9.65425 8.13096 9.65709 8.09227 9.69079 8.00608C9.72448 7.91989 9.74975 7.89313 9.74975 7.84252C9.74975 7.792 9.74416 7.75632 9.72732 7.68787C9.71047 7.61952 9.67678 7.61351 9.71047 7.58384C9.74416 7.55408 9.87609 7.39653 9.88451 7.31625C9.89294 7.23597 9.89852 7.20029 9.91537 7.15569C9.93221 7.11109 9.83956 7.09626 9.81429 7.05166C9.78902 7.00706 9.64025 6.99514 9.62615 6.97439C9.61214 6.95354 9.58687 6.95955 9.55034 7.01307C9.51381 7.06659 9.37062 7.37277 9.33693 7.39362C9.30324 7.41446 9.17689 7.48582 9.14888 7.48582C9.12077 7.48582 9.01411 7.64046 9.06464 7.63746C9.11518 7.63445 9.14045 7.63154 9.13203 7.6583C9.12361 7.68506 9.07023 7.80994 9.06181 7.8367C9.05338 7.86346 9.06181 7.9289 9.03095 7.9289C9.0001 7.9289 8.98884 7.90806 8.96915 7.94374C8.94947 7.97942 8.91578 8.08946 8.94105 8.06561C8.96632 8.04185 8.986 8.03885 9.01127 8.0626C9.03654 8.08636 9.08708 8.15481 9.07023 8.17856C9.05338 8.20231 9.06464 8.37179 9.08991 8.38672C9.11518 8.40156 9.13203 8.40156 9.11802 8.41348C9.10401 8.42541 8.99726 8.61563 8.97767 8.59779C8.95798 8.57995 8.99451 8.56512 8.95798 8.52052C8.92145 8.47592 8.88218 8.39564 8.87659 8.34513C8.87101 8.29461 8.78678 8.25002 8.7811 8.20833C8.77606 8.1709 8.70319 8.13823 8.68231 8.08238C8.67993 8.07608 8.6781 8.06958 8.67719 8.0626C8.66876 7.99425 8.57327 7.91397 8.54242 7.87829C8.51156 7.84261 8.38797 7.7921 8.35995 7.75041C8.33184 7.70882 8.31225 7.70581 8.29257 7.6999C8.27288 7.69398 8.25887 7.73558 8.23644 7.73257C8.21401 7.72956 8.1859 7.68797 8.18032 7.73257C8.17474 7.77717 8.18874 7.92289 8.19158 7.94665C8.19442 7.9704 8.10735 8.0596 8.08767 8.05368C8.06798 8.04777 8.03713 8.00908 8.0147 8.015C7.99227 8.02091 7.93889 8.05068 7.93047 8.02392C7.92204 7.99716 7.97258 8.00307 7.967 7.97631C7.96141 7.94955 7.95858 7.86928 7.93614 7.87228C7.91371 7.87529 7.74525 7.89604 7.72557 7.89604C7.70588 7.89604 7.69188 7.93171 7.65819 7.90495C7.62449 7.8782 7.59364 7.80684 7.54026 7.80383C7.48689 7.80083 7.41392 7.80383 7.39423 7.8365C7.37455 7.86918 7.37739 7.89594 7.32685 7.86026C7.27631 7.82458 7.17523 7.77106 7.18924 7.75322C7.20325 7.73538 7.27063 7.79482 7.28748 7.75322C7.30433 7.71163 7.27906 7.66703 7.31559 7.64919C7.35212 7.63135 7.36896 7.63135 7.36896 7.60459C7.36896 7.57783 7.4672 7.60158 7.4195 7.58084C7.3718 7.55999 7.19492 7.56891 7.18366 7.57192C7.1724 7.57492 7.13596 7.6998 7.11627 7.69088C7.09659 7.68196 7.09659 7.67003 7.10785 7.64628C7.11911 7.62253 7.1247 7.60469 7.09943 7.59577C7.07416 7.58685 7.00119 7.58685 6.97592 7.55417C6.95065 7.5215 6.82431 7.59286 6.77661 7.59286C6.72891 7.59286 6.64468 7.55718 6.61657 7.54235C6.58846 7.52751 6.61373 7.59286 6.57162 7.58394C6.5295 7.57502 6.49297 7.56019 6.4677 7.56019C6.44243 7.56019 6.36663 7.6553 6.34978 7.68807C6.33293 7.72074 6.3105 7.75642 6.27956 7.73858C6.2487 7.72074 6.2346 7.70882 6.1869 7.69699C6.1392 7.68506 6.1111 7.67023 6.1111 7.63455C6.1111 7.59887 6.12794 7.55728 6.12794 7.51859C6.12794 7.47991 6.06056 7.4324 6.08583 7.39371C6.1111 7.35503 6.17848 7.35503 6.20091 7.33719C6.22334 7.31935 6.30757 7.37878 6.34126 7.3877C6.37496 7.39662 6.41707 7.41146 6.41991 7.35202C6.42275 7.29259 6.42833 7.30442 6.42275 7.25691C6.41716 7.20931 6.40032 7.20339 6.41149 7.15879C6.42266 7.1142 6.43676 7.09044 6.41432 7.06068C6.39189 7.03091 6.29082 7.01307 6.26839 6.96556C6.24596 6.91796 6.21501 6.84369 6.19816 6.87937C6.18132 6.91505 6.21217 6.99834 6.20375 7.03401C6.19533 7.06969 6.11668 7.18265 6.0774 7.20349C6.03813 7.22434 5.94822 7.29569 5.95106 7.31945C5.9539 7.3432 5.97917 7.45916 5.9539 7.48892C5.92863 7.51869 5.9062 7.57812 5.87809 7.57812C5.86363 7.57812 5.84385 7.58132 5.82508 7.58811C5.8075 7.59441 5.79066 7.60382 5.77985 7.61681C5.75742 7.64357 5.72089 7.73868 5.72089 7.703C5.72089 7.66732 5.72373 7.64948 5.71247 7.64948C5.70121 7.64948 5.63666 7.65539 5.67035 7.63465C5.70405 7.6138 5.74058 7.59897 5.72373 7.55737C5.70688 7.51578 5.6395 7.49193 5.6395 7.44442C5.6395 7.39682 5.63666 7.37607 5.58612 7.39682C5.53558 7.41766 5.44852 7.46818 5.41766 7.45034C5.38681 7.4325 5.35586 7.40273 5.31375 7.41165C5.27163 7.42057 5.19299 7.43841 5.15371 7.4325C5.11443 7.42658 5.09191 7.48902 5.09191 7.55146C5.09191 7.6139 5.06381 7.68225 5.03579 7.7061C5.00768 7.72986 4.98809 7.78939 4.97399 7.7507C4.95998 7.71202 4.96841 7.72394 4.91787 7.69718C4.86733 7.67042 4.88976 7.61099 4.86449 7.56339C4.83922 7.51578 4.80837 7.54254 4.81111 7.48311C4.81395 7.42367 4.79143 7.44151 4.79985 7.39391C4.80828 7.3463 4.79985 7.3017 4.77742 7.25711C4.75499 7.21251 4.71562 7.26903 4.69878 7.26603C4.68193 7.26302 4.65666 7.22443 4.63423 7.25119C4.6118 7.27795 4.62865 7.36124 4.60054 7.39691C4.57243 7.43259 4.56968 7.48311 4.60054 7.50395C4.63139 7.5248 4.67635 7.50987 4.6595 7.54855C4.64265 7.58724 4.60054 7.67042 4.58085 7.67042C4.56117 7.67042 4.47978 7.6615 4.46293 7.63775C4.44673 7.61487 4.43821 7.56445 4.42008 7.51568C4.41935 7.51374 4.41871 7.51181 4.41798 7.50987C4.39829 7.45935 4.44609 7.39391 4.43199 7.34931C4.41798 7.30471 4.34776 7.22744 4.37019 7.18284C4.39262 7.13824 4.42915 7.14716 4.45158 7.11148C4.47401 7.0758 4.5077 6.94792 4.54423 6.91224C4.58076 6.87656 4.69017 6.90031 4.70427 6.84389C4.71828 6.78736 4.73796 6.80821 4.71553 6.71901C4.6931 6.62981 4.67342 6.5793 4.68468 6.56146C4.69594 6.54362 4.71553 6.56146 4.71837 6.52277C4.71874 6.51783 4.71892 6.51192 4.7191 6.50542C4.71993 6.46169 4.71599 6.3884 4.71837 6.34438C4.72121 6.29387 4.78017 6.28785 4.78017 6.26711C4.78017 6.24636 4.80828 6.29086 4.79985 6.32654C4.79143 6.36222 4.79985 6.42466 4.82796 6.44841C4.85607 6.47216 4.85323 6.55545 4.85607 6.59413C4.85891 6.63282 4.89818 6.77253 4.89818 6.80229C4.89818 6.83206 5.01894 6.95694 5.03579 7.00444C5.05264 7.05205 5.07507 7.13824 5.12286 7.16199C5.17056 7.18575 5.29132 7.25119 5.37829 7.23927C5.46536 7.22734 5.57202 7.21842 5.60288 7.18875C5.63373 7.15899 5.69553 7.13523 5.6731 7.09956C5.65067 7.06388 5.71805 7.06087 5.71805 7.01928C5.71805 6.97768 5.77418 6.97167 5.76017 6.93599C5.74616 6.90031 5.70679 6.87356 5.71521 6.8468C5.72364 6.82004 5.7349 6.7576 5.72922 6.73084C5.72364 6.70408 5.69837 6.716 5.68995 6.66249C5.68152 6.60897 5.67594 6.56437 5.65067 6.51977C5.6254 6.47517 5.65067 6.30569 5.64225 6.24035C5.63382 6.1749 5.65625 6.07678 5.62256 6.02627C5.58887 5.97576 5.54117 5.9936 5.53275 5.93407C5.52432 5.87463 5.49905 5.88646 5.47095 5.84787C5.44284 5.80919 5.38956 5.83304 5.40356 5.80919C5.41757 5.78544 5.47937 5.78544 5.45126 5.75868C5.42316 5.73192 5.40073 5.74384 5.41199 5.726C5.42325 5.70816 5.43167 5.70816 5.41757 5.68441C5.40356 5.66066 5.38388 5.63981 5.40073 5.60714C5.41757 5.57446 5.4541 5.67549 5.47369 5.66958C5.49338 5.66366 5.52423 5.67258 5.50739 5.63981C5.49054 5.60714 5.49054 5.58629 5.49054 5.55061C5.49054 5.51493 5.36703 5.53869 5.36703 5.50301C5.36703 5.48381 5.37097 5.46733 5.37161 5.45337C5.3501 5.4586 5.32766 5.46587 5.30661 5.47625C5.24343 5.50747 5.27292 5.45841 5.25607 5.43611C5.23922 5.41381 5.22238 5.43165 5.18026 5.45395C5.13815 5.47625 5.12972 5.41827 5.09182 5.40489C5.08505 5.40247 5.08166 5.39859 5.08056 5.39384C5.05254 5.40867 5.02517 5.42399 5.01601 5.43165C4.99496 5.44949 4.92757 5.38705 4.93178 5.41381C4.93599 5.44057 4.88125 5.47625 4.83071 5.49409C4.78017 5.51193 4.76332 5.58329 4.76753 5.61897C4.77175 5.65464 4.7549 5.73492 4.72542 5.75722C4.69594 5.77952 4.71278 5.82412 4.68752 5.89102C4.66225 5.95792 4.41798 5.90886 4.40534 5.95792C4.40095 5.97479 4.38456 6.01309 4.36396 6.05778C4.32478 6.14271 4.2703 6.2513 4.25373 6.28349C4.22846 6.33255 4.21583 6.35931 4.1695 6.34593C4.12317 6.33255 4.08948 6.36823 4.06421 6.40391C4.03894 6.43959 3.97156 6.44405 3.94629 6.47081C3.92102 6.49757 3.94629 6.54662 3.94629 6.56892C3.94629 6.59122 3.82837 6.61352 3.84521 6.65366C3.86206 6.6938 3.86627 6.77408 3.81995 6.79638C3.77362 6.81868 3.68097 6.79638 3.66833 6.81422C3.6557 6.83206 3.66833 6.90342 3.68097 6.95248C3.6936 7.00153 3.65148 7.05505 3.63885 7.12641C3.62622 7.19777 3.59674 7.20223 3.51672 7.24683C3.4367 7.29143 3.26824 7.23791 3.19243 7.26913C3.14775 7.28755 3.05345 7.28571 2.97142 7.27941C2.97545 7.29123 2.97957 7.30355 2.98387 7.31625C2.97957 7.30355 2.97535 7.29123 2.97142 7.27941C2.9142 7.27495 2.86293 7.26835 2.83866 7.26467C2.7797 7.25575 2.65757 7.25129 2.60282 7.26467C2.59238 7.26719 2.58066 7.2699 2.5684 7.27262C2.57004 7.27359 2.57169 7.27504 2.57334 7.27582C2.60914 7.29143 2.68073 7.32934 2.70811 7.33157C2.73548 7.3338 2.72916 7.3561 2.69968 7.36056C2.6702 7.36502 2.65967 7.43637 2.65336 7.4609C2.64851 7.47962 2.64008 7.50618 2.64851 7.53158C2.65116 7.53944 2.65528 7.54719 2.66178 7.55456C2.68916 7.58578 2.75022 7.58801 2.73548 7.63038C2.72074 7.67275 2.73127 7.75972 2.69337 7.7062C2.68934 7.70048 2.68595 7.69495 2.68293 7.68962C2.65729 7.64444 2.66178 7.61041 2.62598 7.59247C2.58597 7.5724 2.4491 7.51442 2.42804 7.48989C2.41248 7.47176 2.36615 7.49969 2.33603 7.51122C2.34244 7.53633 2.34931 7.55805 2.34592 7.5724C2.33749 7.60808 2.27011 7.58132 2.24063 7.60362C2.23331 7.60915 2.2247 7.61109 2.21499 7.61128C2.18551 7.61176 2.14596 7.59577 2.10165 7.61254C2.04269 7.63484 2.06375 7.71066 1.98373 7.73742C1.90371 7.76418 1.93319 7.79986 1.90371 7.84892C1.87423 7.89797 1.84896 7.84892 1.80684 7.85784C1.76473 7.86676 1.77736 7.93365 1.77736 7.96487C1.77736 7.99609 1.67208 8.04515 1.63417 8.06745C1.59627 8.08975 1.65523 8.11205 1.65102 8.14773C1.64681 8.18341 1.59627 8.22801 1.56258 8.27707C1.53246 8.32089 1.49895 8.35017 1.46516 8.33689C1.46416 8.34697 1.46297 8.3557 1.4615 8.3618C1.45308 8.39748 1.4994 8.37964 1.51625 8.39302C1.5331 8.4064 1.51625 8.4064 1.4994 8.44654C1.48256 8.48668 1.55415 8.48668 1.57521 8.53128C1.59627 8.57588 1.5331 8.60264 1.52889 8.63386C1.52467 8.66508 1.55837 8.66954 1.6089 8.67846C1.65944 8.68738 1.68471 8.72752 1.66365 8.74981C1.6426 8.77211 1.66786 8.83009 1.67208 8.85685C1.67263 8.86015 1.67272 8.86325 1.67244 8.86606C1.67061 8.88604 1.64946 8.89525 1.6089 8.91483C1.56258 8.93713 1.58363 8.99065 1.58363 9.00849C1.58363 9.02633 1.51625 9.02187 1.49098 9.03079C1.46571 9.03971 1.46571 9.07539 1.4615 9.11999C1.45729 9.16459 1.41939 9.21364 1.38148 9.25378C1.34358 9.29392 1.4236 9.38312 1.4236 9.38312C1.4236 9.38312 1.38569 9.42326 1.36042 9.44556C1.33516 9.46786 1.41939 9.51692 1.42781 9.55706C1.43623 9.5972 1.40254 9.58828 1.38148 9.61058C1.36042 9.63288 1.37727 9.65517 1.37727 9.69085C1.37727 9.70055 1.37434 9.70433 1.36976 9.70491C1.3575 9.70646 1.3325 9.68281 1.3141 9.67301C1.28883 9.65963 1.25514 9.68639 1.21302 9.68193C1.17091 9.67747 1.15827 9.61058 1.15406 9.56152C1.14985 9.51246 1.12458 9.508 1.10352 9.52138C1.08247 9.53476 1.06562 9.62842 1.05298 9.67301C1.0452 9.70036 0.964452 9.76977 0.892581 9.83066C0.914371 9.85248 0.932316 9.87526 0.939274 9.89601C0.960332 9.95845 1.03193 9.90493 1.0572 9.89601C1.08247 9.88709 1.07825 9.91385 1.09089 9.96737C1.10352 10.0209 1.20881 10.0387 1.23408 10.0655C1.25935 10.0922 1.28462 10.1547 1.25935 10.1904C1.2393 10.2187 1.23518 10.2664 1.23225 10.3027C1.23152 10.3122 1.23078 10.3212 1.22987 10.3286C1.22566 10.3643 1.14564 10.3242 1.14564 10.3465C1.14564 10.3688 1.09931 10.4223 1.07404 10.4669C1.04877 10.5115 1.16248 10.5739 1.18354 10.6364C1.19306 10.6648 1.16963 10.7097 1.14115 10.7543C1.107 10.8082 1.06562 10.8617 1.06562 10.886C1.06562 10.9306 1.10352 10.9351 1.14985 10.9886C1.19618 11.0421 1.16248 11.0421 1.17933 11.1045C1.19618 11.167 1.352 11.1804 1.35621 11.2116C1.36042 11.2428 1.34358 11.2874 1.32673 11.3231C1.30989 11.3588 1.36464 11.4034 1.37727 11.4212C1.38991 11.439 1.41939 11.5461 1.4615 11.5862C1.47249 11.5967 1.48219 11.6111 1.49071 11.6272C1.51497 11.6732 1.52889 11.7337 1.52889 11.7602C1.52889 11.7958 1.59627 11.8137 1.60469 11.8404C1.60707 11.8481 1.60478 11.8561 1.60048 11.8642C1.58977 11.8841 1.5656 11.9035 1.56258 11.9162C1.55837 11.9341 1.49519 11.9296 1.44465 11.9296C1.39412 11.9296 1.41939 11.9564 1.40675 12.0054C1.39412 12.0545 1.33516 11.9965 1.3141 12.0144C1.29304 12.0322 1.28041 12.1169 1.27198 12.1615C1.26356 12.2061 1.18775 12.2284 1.1667 12.2552C1.14564 12.282 1.06983 12.1482 1.02772 12.1169C0.985601 12.0857 0.951909 12.108 0.909794 12.1214C0.867679 12.1348 0.825563 12.0857 0.796083 12.1036C0.774293 12.1167 0.724854 12.1714 0.683562 12.2207C0.692352 12.2286 0.702148 12.2338 0.713592 12.2338C0.755707 12.2338 0.76413 12.2115 0.776765 12.2293C0.789399 12.2472 0.835726 12.2873 0.869418 12.2873C0.90311 12.2873 0.907322 12.3676 0.877841 12.3676C0.856234 12.3676 0.79178 12.3531 0.745545 12.3314C0.728699 12.3235 0.714142 12.3146 0.705169 12.3051C0.671477 12.2695 0.696746 12.3765 0.658843 12.3453C0.620939 12.3141 0.616728 12.3274 0.587247 12.2873C0.557766 12.2472 0.532497 12.2293 0.519863 12.2427C0.507228 12.2561 0.477748 12.3141 0.486171 12.3453C0.494594 12.3765 0.561978 12.5103 0.515651 12.5058C0.469325 12.5014 0.460902 12.4969 0.422998 12.4612C0.385095 12.4255 0.313499 12.5237 0.28823 12.4924C0.262961 12.4612 0.216634 12.6084 0.195577 12.595C0.174519 12.5816 0.157673 12.537 0.128193 12.5058C0.0987122 12.4746 0.0945007 12.3899 0.0818662 12.3988C0.0692317 12.4077 0.00184756 12.4434 0.00605906 12.4835C0.0102706 12.5237 0.0565972 12.6084 0.0313281 12.6262C0.00605906 12.6441 -0.010787 12.7021 0.0102706 12.7288C0.0313281 12.7556 0.0650202 12.8136 0.0565971 12.8582C0.0481741 12.9028 0.0987122 12.9518 0.123981 12.9875C0.14925 13.0232 0.178731 13.1436 0.166096 13.206C0.153462 13.2685 0.145039 13.4201 0.174519 13.4781C0.1769 13.4828 0.179097 13.4875 0.181294 13.4921C0.221761 13.4911 0.255637 13.4929 0.274039 13.4987C0.325859 13.5152 0.336388 13.5338 0.345085 13.5657C0.348381 13.5779 0.351494 13.5919 0.356438 13.6087C0.374383 13.6694 0.445978 13.8134 0.478206 13.8779C0.50851 13.9385 0.598783 13.9422 0.612608 13.9738C0.613523 13.9758 0.614073 13.978 0.614347 13.9803C0.617918 14.0182 0.696746 14.0523 0.689513 14.1017C0.685027 14.1326 0.725586 14.1934 0.75644 14.2419C0.774842 14.2707 0.789766 14.2952 0.789766 14.3066C0.789766 14.3369 0.76825 14.3673 0.789766 14.4014C0.807527 14.4296 0.894138 14.4449 0.931492 14.4601C0.939274 14.4633 0.944951 14.4664 0.947423 14.4697C0.953648 14.4781 0.979741 14.4993 1.01014 14.5233C1.04932 14.5541 1.09556 14.5892 1.11579 14.6062C1.15159 14.6366 1.14088 14.6745 1.14088 14.7124C1.14088 14.7266 1.1374 14.7364 1.13099 14.7446C1.13996 14.7433 1.14875 14.7418 1.15717 14.7401C1.14875 14.7418 1.13996 14.7433 1.13099 14.7446C1.12019 14.7586 1.10114 14.7678 1.07633 14.7844C1.03696 14.811 1.08347 14.8451 1.08347 14.8717C1.08347 14.8983 1.11927 14.9285 1.14793 14.9817C1.1623 15.0083 1.16221 15.0483 1.15864 15.0854C1.18519 15.1022 1.20707 15.1265 1.21183 15.1541C1.22309 15.2196 1.1894 15.2671 1.21183 15.3325C1.23426 15.398 1.29048 15.4633 1.32417 15.4633C1.35786 15.4633 1.40281 15.392 1.43651 15.4276C1.4702 15.4633 1.49831 15.4931 1.52632 15.4514C1.54079 15.43 1.57018 15.3897 1.60213 15.3605C1.59938 15.3406 1.5938 15.3223 1.58244 15.3057C1.54591 15.2522 1.57118 14.9756 1.59087 14.8775C1.61055 14.7794 1.66951 14.8003 1.6751 14.7437C1.68068 14.6872 1.69194 14.6634 1.71721 14.6456C1.74248 14.6278 1.78744 14.598 1.78176 14.5475C1.77617 14.497 1.77892 14.4196 1.76207 14.3839C1.74523 14.3482 1.71712 14.3006 1.74523 14.265C1.75814 14.2486 1.78643 14.243 1.81655 14.239C1.85198 14.2343 1.88988 14.2319 1.9081 14.2175C1.93804 14.1937 2.06759 14.1136 2.11181 14.0836C2.11731 14.0798 2.12179 14.0767 2.12426 14.0747C2.14669 14.0569 2.25345 14.1283 2.2843 14.1253C2.31516 14.1222 2.34042 14.1193 2.37412 14.1193C2.40781 14.1193 2.37695 14.1788 2.41065 14.155C2.44434 14.1313 2.41623 14.1015 2.4556 14.1104C2.49488 14.1193 2.58753 14.1431 2.59321 14.1193C2.59559 14.1095 2.59659 14.0914 2.59962 14.0747C2.56959 14.026 2.54587 13.9778 2.55246 13.9543C2.5651 13.9097 2.62827 13.9945 2.64091 13.9097C2.65354 13.825 2.67881 13.7715 2.67881 13.7046C2.67881 13.6377 2.67039 13.5886 2.67039 13.5351C2.67039 13.4816 2.58616 13.4771 2.54825 13.4325C2.51035 13.3879 2.57352 13.3255 2.57352 13.2764C2.57352 13.2274 2.48929 13.1605 2.52298 13.1025C2.53489 13.082 2.54688 13.0627 2.55988 13.0461C2.58368 13.0155 2.61124 12.9939 2.64933 12.991C2.70829 12.9865 2.7841 13.0044 2.76725 12.9285C2.75041 12.8527 2.69987 12.8572 2.75041 12.8126C2.80094 12.768 2.85569 12.7412 2.90202 12.7412C2.94835 12.7412 2.9694 12.7189 2.98625 12.6922C2.99284 12.6817 3.00401 12.6672 3.01655 12.6555C3.03615 12.6373 3.05931 12.626 3.07469 12.6476C3.09996 12.6833 3.12944 12.7903 3.10417 12.8304C3.0789 12.8706 3.12102 12.9285 3.14208 12.9419C3.16313 12.9553 3.22631 12.9508 3.23052 12.9018C3.23473 12.8527 3.28527 12.7769 3.32317 12.7635C3.36107 12.7502 3.47057 12.7992 3.48742 12.768C3.50427 12.7368 3.50848 12.6743 3.55059 12.6877C3.59271 12.7011 3.63482 12.7279 3.70221 12.7145C3.76446 12.7021 3.82315 12.6442 3.88156 12.653C3.88632 12.6538 3.89117 12.6547 3.89594 12.6565C3.90353 12.6592 3.91022 12.6625 3.91626 12.6662C3.96085 12.6935 3.96753 12.7466 3.96753 12.7858C3.96753 12.8304 4.00122 12.8616 4.0307 12.8393C4.06018 12.817 4.1023 12.7948 4.12336 12.8037C4.14441 12.8126 4.16126 12.8081 4.16126 12.8438C4.16126 12.8795 4.14441 12.9464 4.19916 12.9598C4.25391 12.9731 4.35499 13.04 4.35499 13.0891C4.35499 13.1382 4.36341 13.1783 4.39289 13.2006C4.42237 13.2229 4.44764 13.2943 4.42659 13.321C4.40553 13.3478 4.3971 13.4548 4.41816 13.4281C4.43922 13.4013 4.48134 13.321 4.49397 13.3522C4.5066 13.3835 4.54872 13.4682 4.5782 13.4994C4.60768 13.5306 4.58662 13.5931 4.65401 13.5842C4.72139 13.5752 4.71297 13.5173 4.76772 13.5128C4.82247 13.5083 4.89827 13.486 4.9446 13.544C4.99093 13.602 5.00356 13.6867 5.04568 13.6689C5.08779 13.6511 5.10043 13.6109 5.14254 13.6243C5.18466 13.6377 5.28994 13.66 5.26889 13.7001C5.24783 13.7402 5.21414 13.7313 5.22677 13.7759C5.23941 13.8205 5.25204 13.874 5.29416 13.8919C5.33627 13.9097 5.36575 13.9945 5.40787 13.9766C5.44998 13.9588 5.49631 13.8384 5.52158 13.9097C5.54685 13.9811 5.53 13.9945 5.61423 14.0301C5.69846 14.0658 5.77427 14.0346 5.79533 14.0078C5.81638 13.9811 5.87956 13.932 5.87956 13.8874C5.87956 13.8428 5.79111 13.7982 5.79954 13.767C5.80796 13.7358 5.68583 13.6867 5.69425 13.6644C5.70057 13.6477 5.6568 13.603 5.6492 13.5725C5.64673 13.5625 5.64811 13.554 5.65635 13.5485C5.69004 13.5262 5.95115 13.5173 5.93852 13.486C5.92588 13.4548 5.89219 13.3612 5.91325 13.3478C5.9343 13.3344 5.94694 13.2809 6.01854 13.3344C6.09013 13.3879 6.18278 13.4325 6.20384 13.3879C6.2249 13.3433 6.04802 13.2095 6.0775 13.1917C6.10698 13.1738 6.17015 13.2095 6.16173 13.1694C6.1533 13.1292 6.07328 13.1069 6.09855 13.0846C6.12382 13.0623 6.14909 13.0668 6.14488 13.0267C6.14067 12.9865 6.15752 12.9553 6.21226 12.9999C6.26701 13.0445 6.30071 13.0713 6.35124 13.0579C6.40178 13.0445 6.40599 13.1203 6.4439 13.1069C6.46248 13.1003 6.49233 13.0939 6.52428 13.092C6.55742 13.0902 6.59295 13.0933 6.62078 13.1069C6.67553 13.1337 6.67553 13.1605 6.70922 13.1382C6.74291 13.1159 6.82293 13.1203 6.8482 13.1292C6.87347 13.1382 6.91137 13.2229 6.94507 13.1828C6.97876 13.1426 6.93243 13.098 7.0293 13.1248C7.12616 13.1515 7.21039 13.1649 7.26935 13.1694C7.32831 13.1738 7.37885 13.1515 7.41676 13.1515C7.45466 13.1515 7.55995 13.1872 7.57258 13.1649C7.58522 13.1426 7.59785 13.1025 7.63154 13.1069C7.64445 13.1087 7.65361 13.1012 7.66267 13.0924C7.67723 13.0781 7.69142 13.0603 7.71998 13.0713C7.76631 13.0891 7.88002 13.1203 7.90108 13.1471C7.91866 13.1694 7.942 13.2256 7.96883 13.236C7.97414 13.2381 7.97963 13.2385 7.98531 13.2363C8.019 13.2229 8.06112 13.1961 8.08638 13.2274C8.11165 13.2586 8.09902 13.3076 8.10323 13.3567C8.10744 13.4058 8.13271 13.437 8.10323 13.4727C8.07375 13.5083 8.00215 13.5619 8.02742 13.5931C8.05269 13.6243 8.06533 13.6466 8.0906 13.6288C8.11587 13.6109 8.11165 13.66 8.14956 13.6466C8.18746 13.6332 8.20431 13.5619 8.24221 13.6109C8.28011 13.66 8.24642 13.767 8.2759 13.7715C8.30538 13.7759 8.33908 13.7046 8.36013 13.7269C8.38119 13.7492 8.41067 13.8339 8.457 13.825C8.50332 13.8161 8.53702 13.7759 8.53702 13.7982C8.53702 13.8205 8.48227 13.8384 8.46121 13.8696C8.44015 13.9008 8.41488 13.9855 8.457 13.9855C8.49911 13.9855 8.50332 13.932 8.54123 13.9454C8.57913 13.9588 8.58755 14.0301 8.63388 13.9989C8.68021 13.9677 8.69705 13.9365 8.75601 13.9365C8.81498 13.9365 8.8613 13.932 8.86551 13.8963C8.8678 13.8771 8.89078 13.8659 8.91669 13.858C8.93903 13.8512 8.96366 13.8469 8.97922 13.8428C9.01292 13.8339 9.07188 13.8071 9.10136 13.8205C9.13084 13.8339 9.16453 13.7581 9.16453 13.7938C9.16453 13.8294 9.0803 13.9186 9.10557 13.9588C9.12544 13.9904 9.24409 14.121 9.30003 14.1885C9.31523 14.2068 9.32603 14.2207 9.32878 14.2264C9.34141 14.2531 9.61095 15.1228 9.63622 15.163C9.66149 15.2031 9.72466 15.1808 9.72466 15.1496C9.72466 15.1184 9.74572 15.047 9.79205 15.0604C9.83837 15.0738 9.85522 15.0738 9.85522 15.1094C9.85522 15.1451 9.8131 15.1808 9.87206 15.1853C9.93102 15.1897 9.90576 15.2878 9.96051 15.2834C10.0153 15.2789 10.0447 15.27 10.1121 15.2834C10.1795 15.2968 10.1879 15.2611 10.2216 15.2388C10.2553 15.2165 10.2469 15.2611 10.3016 15.2343C10.3564 15.2076 10.4027 15.2388 10.4406 15.2745C10.4619 15.2945 10.4726 15.3469 10.4876 15.3978C10.4992 15.4373 10.5135 15.4759 10.5375 15.4974C10.5922 15.5465 10.6133 15.542 10.6512 15.6C10.6891 15.658 10.6807 15.7561 10.7228 15.7606C10.7649 15.765 10.7775 15.7115 10.8112 15.7383C10.8449 15.765 10.8449 15.8096 10.8997 15.7873C10.9544 15.765 10.9965 15.6848 11.0302 15.7026C11.0639 15.7204 11.0176 15.7517 11.0681 15.8007C11.1187 15.8498 11.0808 15.8721 11.1187 15.8988C11.1566 15.9256 11.1818 15.9524 11.2197 15.9434C11.2576 15.9345 11.3503 15.939 11.3587 15.9033C11.3671 15.8676 11.3671 15.8275 11.4051 15.823C11.443 15.8186 11.5314 15.8587 11.5609 15.8319C11.5904 15.8052 11.5904 15.7784 11.6241 15.7695C11.6577 15.7606 11.6914 15.765 11.6914 15.7294C11.6914 15.7185 11.6883 15.7112 11.6852 15.7054C11.678 15.6922 11.6706 15.6883 11.6999 15.6758C11.742 15.658 11.8304 15.6134 11.8515 15.5911C11.8725 15.5688 11.9947 15.5287 12.0157 15.493C12.0368 15.4573 12.0957 15.4841 12.1126 15.4573C12.1294 15.4306 12.1589 15.3993 12.1884 15.3993C12.2179 15.3993 12.2642 15.4261 12.2642 15.3993C12.2642 15.3726 12.2221 15.328 12.281 15.3369C12.34 15.3458 12.2979 15.3815 12.3274 15.377C12.3569 15.3726 12.3779 15.2923 12.4074 15.3369C12.4369 15.3815 12.4369 15.4082 12.479 15.4082C12.5211 15.4082 12.6222 15.3815 12.6601 15.4082C12.698 15.435 12.6896 15.4796 12.7359 15.5376C12.7822 15.5956 12.8243 15.6134 12.8496 15.5956C12.8749 15.5777 12.9549 15.658 13.0096 15.6134C13.0644 15.5688 13.0812 15.551 13.1655 15.6089C13.2497 15.6669 13.2792 15.6179 13.3213 15.6268C13.3634 15.6357 13.4182 15.6491 13.4392 15.6045C13.4603 15.5599 13.5698 15.5331 13.5656 15.4484C13.5613 15.3637 13.4982 15.3503 13.4855 15.27C13.4729 15.1897 13.4476 15.1228 13.4645 15.0871C13.4813 15.0515 13.5445 14.931 13.5571 14.9132C13.5698 14.8954 13.6119 14.8998 13.6119 14.8508C13.6119 14.8182 13.612 14.7976 13.6182 14.7874C13.6213 14.7821 13.6259 14.7794 13.6329 14.7794C13.654 14.7794 13.7172 14.8195 13.7677 14.8195C13.8182 14.8195 13.814 14.8731 13.8856 14.8641C13.9572 14.8552 14.0036 14.8418 14.0583 14.8641C14.1131 14.8864 14.1467 14.9221 14.2057 14.9221C14.2647 14.9221 14.3236 14.9043 14.3742 14.9533C14.4247 15.0024 14.4121 15.1585 14.45 15.1942C14.4879 15.2299 14.5847 15.2923 14.6353 15.27C14.6858 15.2477 14.7279 15.2968 14.7827 15.2745C14.8374 15.2522 14.8711 15.2254 14.9259 15.1853C14.9806 15.1451 15.0564 15.1273 15.107 15.1228C15.1575 15.1184 15.2207 15.0782 15.2544 15.105C15.2881 15.1317 15.2839 15.154 15.3175 15.1362C15.3512 15.1184 15.3175 15.0782 15.3976 15.1139C15.4776 15.1496 15.4397 15.1674 15.5071 15.1674C15.521 15.1674 15.5341 15.1645 15.5467 15.1602C15.595 15.144 15.6337 15.1078 15.6671 15.1362C15.7092 15.1719 15.785 15.3012 15.8398 15.3101C15.8945 15.3191 15.9451 15.2655 16.0124 15.2745C16.0798 15.2834 16.1262 15.2789 16.223 15.2388C16.3199 15.1986 16.3494 15.2388 16.3831 15.2031C16.4167 15.1674 16.4252 15.1407 16.4799 15.105C16.5347 15.0693 16.6273 15.0292 16.6736 15.0024C16.72 14.9756 16.7831 14.9533 16.7831 14.9043C16.7831 14.8552 16.7874 14.8062 16.8211 14.7749C16.8547 14.7437 16.9305 14.6634 16.9516 14.6322C16.9727 14.601 17.0569 14.5609 17.0906 14.5609C17.1243 14.5609 17.2127 14.659 17.2548 14.6367C17.297 14.6144 17.3391 14.5252 17.4065 14.5252C17.4738 14.5252 17.5202 14.5743 17.596 14.5743C17.6718 14.5743 17.7897 14.5832 17.836 14.543C17.8824 14.5029 17.8781 14.3468 17.9287 14.3156C17.9792 14.2844 18.0255 14.271 18.0171 14.2175C18.0087 14.1639 17.9666 14.1327 17.9624 14.1193C17.9582 14.106 18.0003 14.0747 17.9918 14.0301C17.9834 13.9855 17.9413 13.9766 17.9624 13.932C17.9834 13.8874 18.0298 13.9008 18.0003 13.8294C17.9708 13.7581 17.9582 13.7001 17.9708 13.651C17.9834 13.602 18.0298 13.5351 18.0255 13.4727C18.0213 13.4102 17.9834 13.3968 17.975 13.3612C17.9666 13.3255 17.9666 13.2853 17.9245 13.2898C17.8824 13.2943 17.8108 13.3522 17.7981 13.3076C17.7855 13.263 17.8402 13.0891 17.8823 13.0445C17.9056 13.0199 17.9506 12.9857 17.9941 12.9495C18.0295 12.9201 18.0637 12.8896 18.0845 12.8616C18.1308 12.7992 18.2066 12.7635 18.2909 12.7279C18.3751 12.6922 18.5057 12.7457 18.573 12.7234C18.6404 12.7011 18.6236 12.6387 18.691 12.6387C18.7583 12.6387 18.8847 12.6743 18.9142 12.7145C18.9436 12.7546 19.0279 12.7947 19.0616 12.8126C19.0953 12.8304 19.1163 12.9419 19.2006 12.9865C19.2848 13.0311 19.3185 13.1114 19.3606 13.1426C19.4027 13.1738 19.4701 13.1917 19.4911 13.2229C19.5122 13.2541 19.5922 13.2586 19.5964 13.3076C19.6006 13.3567 19.6217 13.4191 19.6765 13.4548C19.7312 13.4905 19.8196 13.5128 19.8575 13.4548C19.8955 13.3968 19.887 13.3478 19.9418 13.3701C19.9965 13.3924 20.005 13.4325 20.0639 13.3879C20.1229 13.3433 20.0723 13.2898 20.1524 13.3389C20.2324 13.3879 20.2913 13.4191 20.3629 13.379C20.376 13.3717 20.3877 13.3681 20.3985 13.3673C20.4465 13.3633 20.4728 13.4143 20.4935 13.4325C20.5188 13.4548 20.5609 13.4637 20.5693 13.5128C20.5777 13.5619 20.6072 13.5708 20.6577 13.6109C20.7083 13.651 20.6788 13.6912 20.7378 13.6421C20.7967 13.5931 20.8136 13.5619 20.8599 13.5619C20.9062 13.5619 20.9904 13.4459 20.9947 13.4147C20.9989 13.3835 20.961 13.3612 21.0073 13.3121C21.0536 13.263 21.0662 13.214 21.0999 13.1917C21.1336 13.1694 21.201 12.991 21.2347 12.9687C21.2466 12.9607 21.2532 12.9576 21.2591 12.9599C21.2698 12.9639 21.2778 12.9866 21.3105 13.0356C21.3611 13.1114 21.3821 13.0802 21.42 13.1471C21.4579 13.214 21.34 13.3166 21.3737 13.3389C21.3976 13.3547 21.4298 13.3886 21.4572 13.4323C21.4684 13.4503 21.4788 13.4696 21.4874 13.4904C21.5169 13.5618 21.5548 13.7 21.5422 13.7402C21.5295 13.7803 21.5295 13.8338 21.5548 13.8695C21.5801 13.9052 21.6222 13.9408 21.6053 13.9542C21.5885 13.9676 21.5085 14.0568 21.5422 14.1192C21.5758 14.1817 21.5716 14.2129 21.5295 14.2129C21.5184 14.2129 21.4987 14.2173 21.475 14.2237C21.4884 14.257 21.4991 14.2961 21.5166 14.3213C21.5496 14.3689 21.4896 14.4324 21.4566 14.4229C21.4237 14.4134 21.4088 14.3721 21.3787 14.3531C21.3555 14.3383 21.3217 14.3043 21.3189 14.272C21.3054 14.2761 21.295 14.279 21.2895 14.2799C21.26 14.2844 21.2768 14.4315 21.2473 14.4583C21.2179 14.4851 21.1463 14.4984 21.1926 14.5475C21.2389 14.5965 21.3526 14.6634 21.3695 14.7393C21.3863 14.8151 21.479 14.9132 21.5085 14.9489C21.5379 14.9846 21.5632 15.0916 21.5379 15.1273C21.5127 15.163 21.4706 15.1942 21.4958 15.2299C21.5155 15.2576 21.5019 15.3201 21.4791 15.3592C21.4872 15.3598 21.4967 15.3599 21.5085 15.3592C21.5262 15.3581 21.5486 15.3581 21.5724 15.3593C21.5725 15.3583 21.573 15.3573 21.5731 15.3563C21.5759 15.3206 21.5871 15.2849 21.5703 15.2582C21.5534 15.2314 21.6208 15.2403 21.6376 15.1898C21.6545 15.1393 21.6405 15.1065 21.6405 15.056C21.6405 15.0055 21.6124 14.8687 21.6433 14.8926C21.6743 14.9164 21.7079 15.0144 21.7107 14.9669C21.7135 14.9194 21.7275 14.8629 21.75 14.8718C21.7724 14.8807 21.7948 14.958 21.8145 14.9521C21.8342 14.9462 21.8511 14.9016 21.924 14.9016C21.997 14.9016 22.0167 14.8896 22.0391 14.86C22.0615 14.8302 22.1205 14.744 22.1514 14.6846C22.1823 14.6252 22.1627 14.6132 22.1991 14.5686C22.2356 14.524 22.2778 14.2951 22.2805 14.2505C22.2833 14.2059 22.2524 13.9681 22.2497 13.9324C22.2468 13.8967 22.2778 13.1593 22.2778 13.1266C22.2778 13.094 22.2385 12.9661 22.2328 12.9125C22.2273 12.859 22.1795 12.7818 22.1795 12.7312C22.1795 12.7088 22.1772 12.6777 22.1738 12.6456C22.1695 12.6052 22.1633 12.5631 22.157 12.535C22.1458 12.4845 22.1458 12.1664 22.1346 12.1218C22.1234 12.0772 21.9661 11.8067 21.9521 11.7739C21.9381 11.7412 21.8623 11.7056 21.8595 11.649C21.8566 11.5925 21.6882 11.4767 21.677 11.426C21.6657 11.3755 21.6096 11.2684 21.5872 11.2179C21.5648 11.1674 21.5759 11.1019 21.5759 11.0573C21.5759 11.0127 21.5394 10.989 21.5367 10.9622C21.5338 10.9355 21.4468 10.9474 21.4272 10.9265C21.4075 10.9057 21.3963 10.8493 21.3682 10.8225C21.3401 10.7957 21.1829 10.8047 21.2223 10.7838C21.2616 10.763 21.3178 10.769 21.3093 10.7273C21.3009 10.6856 21.3178 10.6351 21.2841 10.644C21.2504 10.6529 21.0763 10.7005 21.0034 10.6619C20.9304 10.6232 20.8152 10.6232 20.7984 10.6232C20.7815 10.6232 20.7984 10.7213 20.7422 10.7272C20.6861 10.7331 20.6383 10.7094 20.6608 10.7629C20.6833 10.8164 20.7816 10.9888 20.7535 10.9888C20.7254 10.9888 20.6945 10.855 20.6833 10.8758C20.672 10.8967 20.6944 10.9502 20.6804 10.9918C20.6664 11.0334 20.5822 11.1791 20.5681 11.1464C20.5541 11.1138 20.6299 10.9829 20.5962 10.9829C20.5625 10.9829 20.5148 10.9859 20.498 11.0037C20.4811 11.0216 20.4754 11.087 20.4614 11.1048C20.4474 11.1227 20.4362 11.1553 20.4165 11.1346C20.3968 11.1138 20.3772 11.0752 20.3772 11.0424C20.3772 11.0097 20.3238 10.9324 20.2986 10.9234C20.2733 10.9145 20.1554 11.0246 20.1301 11.0335C20.1048 11.0424 20.0319 11.1078 20.001 11.0692C19.9702 11.0305 19.9476 10.9562 19.9702 10.9235C19.9926 10.8909 20.0347 10.7927 20.0375 10.763C20.0404 10.7332 20.0516 10.5876 20.0628 10.5489C20.0741 10.5102 20.0852 10.4062 20.0852 10.3468C20.0852 10.2873 20.046 10.1089 20.0544 10.0137C20.0628 9.9186 20.0881 9.70152 20.0881 9.648C20.0881 9.59448 20.1078 9.59448 20.1049 9.55289C20.1021 9.51129 20.0488 9.37158 20.0488 9.3329C20.0488 9.29421 20.0852 9.24671 20.0881 9.17826C20.0909 9.10981 20.0544 9.04446 20.0797 8.93742C20.1049 8.83038 20.1358 8.80954 20.1555 8.77687C20.1751 8.74419 20.1947 8.69358 20.2173 8.67283C20.2397 8.65199 20.3689 8.53312 20.3886 8.49444C20.4082 8.45575 20.4671 8.49444 20.5008 8.4796C20.5345 8.46477 20.585 8.47068 20.5569 8.435C20.5288 8.39933 20.4951 8.35773 20.5372 8.33989C20.5545 8.33262 20.5852 8.32234 20.6156 8.30906C20.6597 8.28986 20.703 8.26456 20.703 8.23285C20.703 8.17934 20.6974 8.1645 20.7226 8.15258C20.7479 8.14065 20.8434 8.11098 20.8377 8.0723C20.8321 8.03361 20.7507 8.04554 20.7732 8.01577C20.7956 7.98601 20.8125 7.99793 20.7956 7.96526C20.7788 7.93259 20.7507 7.91766 20.7759 7.88498C20.8012 7.85231 20.9556 7.80771 20.9808 7.76903C21.0061 7.73034 21.0174 7.68574 21.0566 7.67091C21.0959 7.65607 21.1465 7.68574 21.1717 7.66199C21.197 7.63823 21.2391 7.59363 21.2363 7.62039C21.2334 7.64715 21.1296 7.78686 21.1436 7.79879C21.1576 7.81072 21.2166 7.81663 21.2419 7.79879C21.2671 7.78095 21.3008 7.69476 21.3064 7.668C21.312 7.64124 21.3682 7.6234 21.3682 7.60556C21.3682 7.58772 21.3569 7.45101 21.3766 7.42125C21.3963 7.39149 21.4749 7.38858 21.4749 7.37665C21.4749 7.36473 21.4636 7.33797 21.4861 7.30229C21.5086 7.26661 21.5395 7.21008 21.5254 7.18633C21.5114 7.16258 21.4552 7.16548 21.4327 7.19224C21.4103 7.219 21.3935 7.32303 21.3766 7.28144C21.3598 7.23985 21.3766 7.23684 21.3345 7.216C21.2924 7.19515 21.2615 7.19224 21.27 7.1714C21.2784 7.15055 21.2755 7.14464 21.2615 7.10004C21.2475 7.05544 21.2026 6.92766 21.2026 6.87113C21.2026 6.81461 21.1801 6.71659 21.1605 6.6749C21.1408 6.6333 21.1324 6.57678 21.0959 6.52326C21.0594 6.46974 21.0565 6.35679 21.0847 6.31219C21.1128 6.26759 21.1436 6.26759 21.1465 6.20816C21.1493 6.14872 21.1942 6.15764 21.183 6.08027C21.1718 6.0029 21.2841 6.08919 21.2868 6.02976C21.2896 5.97033 21.256 5.87512 21.2784 5.89296C21.3008 5.9108 21.4244 6.003 21.4244 6.03868C21.4244 6.07436 21.4861 6.08027 21.489 6.10413C21.4918 6.12798 21.5142 6.05652 21.5423 6.07737C21.5704 6.09821 21.5985 6.15464 21.6097 6.12788C21.621 6.10112 21.6434 6.09521 21.6462 6.05061C21.6491 6.00601 21.576 5.77409 21.5676 5.71757C21.5629 5.68654 21.5552 5.65135 21.5545 5.62265C21.554 5.59909 21.558 5.57989 21.5732 5.57185C21.6069 5.55401 21.6406 5.52424 21.6013 5.52133C21.562 5.51833 21.5479 5.52434 21.5142 5.49758C21.4805 5.47082 21.4187 5.38162 21.3795 5.35486C21.3402 5.3281 21.3626 5.28651 21.3766 5.25674C21.3906 5.22698 21.4132 5.20022 21.4075 5.16454C21.4019 5.12886 21.4777 5.11102 21.4917 5.09619C21.5057 5.08135 21.545 5.10511 21.5226 5.12886C21.5001 5.15262 21.4917 5.1913 21.5029 5.23289C21.5141 5.27449 21.5871 5.3251 21.6292 5.35186C21.6713 5.37862 21.6629 5.47373 21.7106 5.4619C21.7583 5.45007 21.7948 5.5957 21.8201 5.58978C21.8454 5.58387 21.8762 5.58387 21.8762 5.62246C21.8762 5.66114 21.8454 5.87221 21.8594 5.92864C21.8734 5.98516 21.9156 5.98516 21.9128 6.03868C21.9099 6.0922 21.983 6.15163 21.983 6.22008C21.983 6.28844 22.0111 6.32411 22.0223 6.39547C22.0335 6.46683 22.0307 6.52035 22.0728 6.55302C22.1149 6.5857 22.1795 6.7225 22.1795 6.77893C22.1795 6.83536 22.1542 6.87113 22.1935 6.92756C22.2327 6.98399 22.1935 7.01084 22.1654 7.04352C22.1373 7.07619 22.2103 7.15647 22.1738 7.17431C22.1373 7.19215 22.0783 7.25158 22.1232 7.2635C22.1682 7.27543 22.2327 7.27543 22.2412 7.33186C22.2496 7.38829 22.3057 7.59053 22.3086 7.62321C22.3114 7.65588 22.4376 7.73024 22.4658 7.76883C22.4755 7.78231 22.5074 7.81983 22.5484 7.86452C22.625 7.948 22.7339 8.05688 22.7943 8.08403C22.8869 8.12562 23.2378 8.30702 23.3136 8.35162C23.3894 8.39622 23.4989 8.43491 23.5635 8.45866C23.628 8.48242 23.7993 8.61321 23.8358 8.64889C23.8723 8.68457 23.9032 8.63405 23.9453 8.66673C23.9874 8.6994 24.0001 8.74022 24.0001 8.6897Z\",\n  fill: \"white\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"clip0\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  width: 24,\n  height: 15,\n  fill: \"white\",\n  transform: \"translate(0 0.944336)\"\n})));\n\nvar SvgMap = function SvgMap(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 16,\n    viewBox: \"0 0 24 16\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMap, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/map.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  opacity: 0.5\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  y: 0.944336,\n  width: 4,\n  height: 4,\n  fill: \"#BFCBE1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 5,\n  y: 0.944336,\n  width: 13,\n  height: 4,\n  fill: \"#BFCBE1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  y: 5.94434,\n  width: 4,\n  height: 4,\n  fill: \"#BFCBE1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 5,\n  y: 5.94434,\n  width: 13,\n  height: 4,\n  fill: \"#BFCBE1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  y: 10.9443,\n  width: 4,\n  height: 4,\n  fill: \"#BFCBE1\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  x: 5,\n  y: 10.9443,\n  width: 13,\n  height: 4,\n  fill: \"#BFCBE1\"\n}));\n\nvar SvgList = function SvgList(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 15,\n    viewBox: \"0 0 18 15\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgList, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/list.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport Switch from \"react-switch\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./BottomMenu.module.scss\";\n\nimport { ReactComponent as RestoreFiltersIcon } from \"./assets/restoreFilters.svg\";\nimport { ReactComponent as MapIcon } from \"./assets/map.svg\";\nimport { ReactComponent as ListIcon } from \"./assets/list.svg\";\n\nimport AppStore from \"../../stores/AppStore\";\n\ntype BottomMenuProps = {\n  AppStore?: AppStore;\n};\n\ntype BottomMenuState = {\n  // Переключатель (рубли : штуки)\n  checkedSwitchUnits: boolean;\n\n  // Переключатель - карта\n  switchMap: boolean;\n  // Переключатель - список\n  switchList: boolean;\n};\n\n/**\n * Компонент - нижнее меню\n */\n@inject(\"AppStore\")\n@observer\nclass BottomMenu extends PureComponent<BottomMenuProps, BottomMenuState> {\n  constructor(props: BottomMenuProps) {\n    super(props);\n    this.state = {\n      checkedSwitchUnits: false,\n\n      switchMap: true,\n      switchList: false,\n    };\n  }\n\n  /**\n   * Переключение показателя единиц измерения\n   * @param checkedUnits - единица измерения\n   * @private\n   */\n  _switchUnits = (checkedSwitchUnits: boolean): void => {\n    this.setState({ checkedSwitchUnits });\n  };\n\n  render() {\n    const {\n      state: { checkedSwitchUnits, switchMap, switchList },\n    } = this;\n\n    const { AppStore } = this.props;\n    const {\n      periodType,\n      setPeriodType,\n      resetFilters,\n      setUnitSize,\n      unitSize,\n    } = AppStore;\n\n    return (\n      <div className={styles.containerMenu}>\n        <div className={styles.containerCounts}>\n          <div className={styles.containerUnits}>\n            <span\n              className={unitSize === \"Thousand\" ? styles.activeSpan : \"\"}\n              onClick={() => setUnitSize(\"Thousand\")}\n            >\n              тыс.\n            </span>\n            <span\n              className={unitSize === \"Million\" ? styles.activeSpan : \"\"}\n              onClick={() => setUnitSize(\"Million\")}\n            >\n              млн\n            </span>\n            <span\n              className={unitSize === \"Billion\" ? styles.activeSpan : \"\"}\n              onClick={() => setUnitSize(\"Billion\")}\n            >\n              млрд\n            </span>\n          </div>\n        </div>\n        <div className={styles.containerSwitch}>\n          <span\n            className={`${\n              checkedSwitchUnits ? styles.noActive : styles.active\n            }`}\n          >\n            рубли\n          </span>\n          <Switch\n            checked={checkedSwitchUnits}\n            onChange={this._switchUnits}\n            offHandleColor=\"#3F71ED\"\n            onHandleColor=\"#3F71ED\"\n            offColor=\"#8B9CB8\"\n            onColor=\"#8B9CB8\"\n            handleDiameter={16}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            height={8}\n            width={25}\n          />\n          <select\n            className={`${styles.switchSelect} ${\n              checkedSwitchUnits ? styles.active : styles.noActive\n            }`}\n          >\n            <option>штуки</option>\n            <option>прочее</option>\n          </select>\n        </div>\n        <div className={styles.containerRestoreFilters}>\n          <div className={styles.filters} onClick={resetFilters}>\n            <RestoreFiltersIcon className={styles.icons} />\n            <span>Сбросить фильтры</span>\n          </div>\n        </div>\n        <div className={styles.containerMap}>\n          <div className={styles.containerUnits}>\n            <span className={switchMap ? styles.activeSpan : \"\"}>\n              <MapIcon\n                className={styles.iconsMap}\n                onClick={() => {\n                  this.setState({\n                    switchList: false,\n                    switchMap: true,\n                  });\n                }}\n              />\n            </span>\n            <span className={switchList ? styles.activeSpan : \"\"}>\n              <ListIcon\n                className={styles.iconsMap}\n                onClick={() => {\n                  this.setState({\n                    switchList: true,\n                    switchMap: false,\n                  });\n                }}\n              />\n            </span>\n          </div>\n        </div>\n        <div className={styles.containerPeriods}>\n          <div className={styles.containerUnits}>\n            <span\n              className={periodType === \"year\" ? styles.activeSpan : \"\"}\n              onClick={() => setPeriodType(\"year\")}\n            >\n              по годам\n            </span>\n            <span\n              className={periodType === \"quarter\" ? styles.activeSpan : \"\"}\n              onClick={() => setPeriodType(\"quarter\")}\n            >\n              по кварталам\n            </span>\n            <span\n              className={periodType === \"month\" ? styles.activeSpan : \"\"}\n              onClick={() => setPeriodType(\"month\")}\n            >\n              по месяцам\n            </span>\n            <span\n              className={periodType === \"decade\" ? styles.activeSpan : \"\"}\n              onClick={() => setPeriodType(\"decade\")}\n            >\n              по декадам\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BottomMenu;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  width: 64,\n  height: 64,\n  rx: 4,\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36 20.1074H38V26.4512H36V20.1074Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 19.3887C24 19.1125 23.7761 18.8887 23.5 18.8887C23.2239 18.8887 23 19.1125 23 19.3887H24ZM23 25.998C23 26.2742 23.2239 26.498 23.5 26.498C23.7761 26.498 24 26.2742 24 25.998H23ZM22 19.3887C22 19.1125 21.7761 18.8887 21.5 18.8887C21.2239 18.8887 21 19.1125 21 19.3887H22ZM21 23.0386C21 23.3147 21.2239 23.5386 21.5 23.5386C21.7761 23.5386 22 23.3147 22 23.0386H21ZM22 25.3887C22 25.1125 21.7761 24.8887 21.5 24.8887C21.2239 24.8887 21 25.1125 21 25.3887H22ZM21 26.4512C21 26.7273 21.2239 26.9512 21.5 26.9512C21.7761 26.9512 22 26.7273 22 26.4512H21ZM19.5 18.4648H19V18.4648L19.5 18.4648ZM39.751 21.4648L40.251 21.4725V21.4648H39.751ZM23 19.3887V25.998H24V19.3887H23ZM21 19.3887V23.0386H22V19.3887H21ZM21 25.3887V26.4512H22V25.3887H21ZM19.5 26.9512H41.0625V25.9512H19.5V26.9512ZM42.375 28.2637V44.5762H43.375V28.2637H42.375ZM41.0625 45.8887H19.3125V46.8887H41.0625V45.8887ZM18 44.5762V28.2637H17V44.5762H18ZM19.3125 45.8887C18.5876 45.8887 18 45.301 18 44.5762H17C17 45.8533 18.0353 46.8887 19.3125 46.8887V45.8887ZM42.375 44.5762C42.375 45.301 41.7874 45.8887 41.0625 45.8887V46.8887C42.3397 46.8887 43.375 45.8533 43.375 44.5762H42.375ZM41.0625 26.9512C41.7874 26.9512 42.375 27.5388 42.375 28.2637H43.375C43.375 26.9865 42.3397 25.9512 41.0625 25.9512V26.9512ZM19.5 25.9512C18.8689 25.9512 18.254 26.2045 17.7954 26.6057C17.3355 27.0081 17 27.5904 17 28.2637H18C18 27.9359 18.164 27.612 18.4539 27.3583C18.745 27.1036 19.1301 26.9512 19.5 26.9512V25.9512ZM20.5762 17.8887H29.5361V16.8887H20.5762V17.8887ZM20 26.4512L20 18.4648L19 18.4648L19 26.4512L20 26.4512ZM30.1123 18.4648V26.4512H31.1123V18.4648H30.1123ZM20.5762 16.8887C19.7057 16.8887 19 17.5943 19 18.4648H20C20 18.1466 20.2579 17.8887 20.5762 17.8887V16.8887ZM29.5361 17.8887C29.8543 17.8887 30.1123 18.1466 30.1123 18.4648H31.1123C31.1123 17.5943 30.4066 16.8887 29.5361 16.8887V17.8887ZM38.6748 19.8887H30.7168V20.8887H38.6748V19.8887ZM40.1748 26.4588L40.2509 21.4725L39.251 21.4572L39.1749 26.4435L40.1748 26.4588ZM38.6748 20.8887C38.993 20.8887 39.251 21.1466 39.251 21.4648H40.251C40.251 20.5943 39.5453 19.8887 38.6748 19.8887V20.8887Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M28.4063 18.8887C28.7342 18.8887 29 19.1545 29 19.4824V22.0615C29 22.3894 28.7342 22.6553 28.4062 22.6553H26.9033C26.5754 22.6553 26.3096 22.3894 26.3096 22.0615L26.3096 19.4824C26.3096 19.1545 26.5754 18.8887 26.9033 18.8887L28.4063 18.8887Z\",\n  fill: \"white\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M40 32.8887C38.8954 32.8887 38 33.7841 38 34.8887V36.8887C38 37.9933 38.8954 38.8887 40 38.8887H45C46.1046 38.8887 47 37.9933 47 36.8887V34.8887C47 33.7841 46.1046 32.8887 45 32.8887H40ZM41 34.8887C40.4477 34.8887 40 35.3364 40 35.8887C40 36.441 40.4477 36.8887 41 36.8887C41.5523 36.8887 42 36.441 42 35.8887C42 35.3364 41.5523 34.8887 41 34.8887Z\",\n  fill: \"white\"\n});\n\nvar SvgTraceability = function SvgTraceability(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTraceability, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/traceability.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C5.37258 24 -6.26248e-08 18.6274 -1.39876e-07 12C-2.17128e-07 5.37258 5.37258 -8.80661e-07 12 -1.96701e-06C18.6274 -3.05336e-06 24 5.37258 24 12C24 18.6274 18.6274 24 12 24Z\",\n  fill: \"#C7D5EC\",\n  fillOpacity: 0.1\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 16L14 12L10 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Line } from \"rc-progress\";\n\nimport styles from \"./ProductTraceability.module.scss\";\n\nimport { ReactComponent as TraceabilityIcon } from \"./assets/traceability.svg\";\nimport { ReactComponent as DropdownIcon } from \"./assets/dropdown.svg\";\n\nimport ProductTraceabilityStore from \"../../stores/ProductTraceabilityStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype ProductTraceabilityProps = {\n  ProductTraceabilityStore?: ProductTraceabilityStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - оборот прослеживаемого товара\n */\n@inject(\"AppStore\", \"ProductTraceabilityStore\")\n@observer\nclass ProductTraceability extends PureComponent<ProductTraceabilityProps> {\n  render() {\n    const { AppStore, ProductTraceabilityStore } = this.props;\n    const {\n      changeIncludeTraceability,\n      changeLeaveTraceability,\n    } = ProductTraceabilityStore;\n\n    const { unitSizeName } = AppStore;\n    const { indicators } = AppStore.data;\n\n    return (\n      <div className={styles.container}>\n        <div>\n          <div className={styles.containerTitle}>\n            <TraceabilityIcon className={styles.icons} />\n            <span className={styles.title}>\n              Оборот\n              <br />\n              прослеживаемого\n              <br />\n              товара\n            </span>\n          </div>\n          <div className={styles.containerTotalCost}>\n            <span className={styles.titleTotalCost}>\n              ₽{\" \"}\n              {(\n                indicators.import.value +\n                indicators.turnover.value +\n                indicators.export.value\n              ).toLocaleString(\"ru-RU\", { maximumFractionDigits: 2 })}\n            </span>\n            <span className={styles.titleUnit}>{unitSizeName}</span>\n          </div>\n        </div>\n        <div className={styles.containerProgressBar}>\n          <div className={styles.containerProgressBarLines}>\n            <div className={styles.containerProgressIcon}>\n              <div className={styles.containerProgressTitle}>\n                <span className={styles.progressBarTitle}>\n                  Включено в прослеживаемость\n                </span>\n                <span className={styles.progressBarCost}>\n                  ₽{\" \"}\n                  {indicators.import.value.toLocaleString(\"ru-RU\", {\n                    maximumFractionDigits: 2,\n                  })}{\" \"}\n                  {unitSizeName}\n                </span>\n              </div>\n              <DropdownIcon\n                className={styles.iconDropdown}\n                onClick={changeIncludeTraceability}\n              />\n            </div>\n            <Line\n              percent={indicators.import.percent}\n              strokeWidth={2.2}\n              trailWidth={2.2}\n              strokeColor=\"#8300FF\"\n              trailColor=\"rgba(21, 24, 29, 0.75)\"\n              className={styles.progressLine}\n            />\n          </div>\n          <div className={styles.containerProgressBarLines}>\n            <span className={styles.progressBarTitle}>Оборот</span>\n            <span className={styles.progressBarCost}>\n              ₽{\" \"}\n              {indicators.turnover.value.toLocaleString(\"ru-RU\", {\n                maximumFractionDigits: 2,\n              })}{\" \"}\n              {unitSizeName}\n            </span>\n            <Line\n              percent={indicators.turnover.percent}\n              strokeWidth={2}\n              trailWidth={2}\n              strokeColor=\"#21931F\"\n              trailColor=\"rgba(21, 24, 29, 0.75)\"\n              className={styles.progressLine}\n            />\n          </div>\n          <div className={styles.containerProgressBarLines}>\n            <div className={styles.containerProgressIcon}>\n              <div className={styles.containerProgressTitle}>\n                <span className={styles.progressBarTitle}>\n                  Выбыло из прослеживаемости\n                </span>\n                <span className={styles.progressBarCost}>\n                  ₽{\" \"}\n                  {indicators.export.value.toLocaleString(\"ru-RU\", {\n                    maximumFractionDigits: 2,\n                  })}{\" \"}\n                  {unitSizeName}\n                </span>\n              </div>\n              <DropdownIcon\n                className={styles.iconDropdown}\n                onClick={changeLeaveTraceability}\n              />\n            </div>\n            <Line\n              percent={indicators.export.percent}\n              strokeWidth={2.2}\n              trailWidth={2.2}\n              strokeColor=\"#FF6B00\"\n              trailColor=\"rgba(21, 24, 29, 0.75)\"\n              className={styles.progressLine}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductTraceability;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  y: 0.5,\n  width: 72,\n  height: 72,\n  rx: 4,\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36 56.5C47.0457 56.5 56 47.5457 56 36.5C56 25.4543 47.0457 16.5 36 16.5C24.9543 16.5 16 25.4543 16 36.5C16 47.5457 24.9543 56.5 36 56.5Z\",\n  fill: \"white\",\n  fillOpacity: 0.1\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M38 40.5L34 36.5L38 32.5\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 36.5C17 46.9934 25.5066 55.5 36 55.5L36 57.5C24.402 57.5 15 48.098 15 36.5L17 36.5ZM36 17.5C25.5066 17.5 17 26.0066 17 36.5L15 36.5C15 24.902 24.402 15.5 36 15.5L36 17.5ZM55 36.5C55 26.0066 46.4934 17.5 36 17.5L36 15.5C47.598 15.5 57 24.902 57 36.5L55 36.5ZM57 36.5C57 48.098 47.598 57.5 36 57.5L36 55.5C46.4934 55.5 55 46.9934 55 36.5L57 36.5Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 72,\n    height: 73,\n    viewBox: \"0 0 72 73\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport icons from \"./assets/icons.svg\";\n\ntype IconProps = {\n  name: string;\n  size?: string | number;\n  height?: string | number;\n  width?: string | number;\n  fill?: string;\n  [key: string]: any;\n};\n\n/**\n * Компонент иконки\n */\nconst Icon = ({ name, size, height, width, fill, ...props }: IconProps) => {\n  return (\n    <svg width={size || width} height={size || height} fill={fill} {...props}>\n      <use href={`${icons}#${name}`} />\n    </svg>\n  );\n};\n\nIcon.defaultProps = {\n  size: \"\",\n  height: 12,\n  width: 12,\n};\n\nexport default Icon;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n// @ts-ignore\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\n\nimport styles from \"./IncludeTranceability.module.scss\";\n\nimport { ReactComponent as BackIcon } from \"./assets/back.svg\";\n\nimport Icon from \"../Icon\";\n\nimport ProductTraceabilityStore from \"../../stores/ProductTraceabilityStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype IncludeTraceabilityProps = {\n  ProductTraceabilityStore?: ProductTraceabilityStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - Включено в прослеживаемость (\"Оборот прослеживаемого товара\")\n */\n@inject(\"AppStore\", \"ProductTraceabilityStore\")\n@observer\nclass IncludeTraceability extends PureComponent<IncludeTraceabilityProps> {\n  render() {\n    const { AppStore, ProductTraceabilityStore } = this.props;\n    const { changeIncludeTraceability } = ProductTraceabilityStore;\n\n    const { unitSizeName } = AppStore;\n    const { indicators } = AppStore.data;\n\n    const data = [\n      {\n        name: \"Ввоз\",\n        value: 35,\n        description: \"1 084,46\",\n        color: \"#8300FF\",\n      },\n      {\n        name: \"Конфискат\",\n        value: 20,\n        description: \"665,46\",\n        color: \"#FF6B00\",\n      },\n      {\n        name: \"Остатки\",\n        value: 20,\n        description: \"620,17\",\n        color: \"#21931F\",\n      },\n      {\n        name: \"Возобновление\",\n        value: 25,\n        description: \"947,24\",\n        color: \"#3F71ED\",\n      },\n    ];\n\n    return (\n      <div className={styles.container}>\n        <div>\n          <div className={styles.containerTitle}>\n            <BackIcon\n              className={styles.icons}\n              onClick={changeIncludeTraceability}\n            />\n            <span className={styles.title}>\n              Включено в\n              <br />\n              прослеживаемость\n            </span>\n          </div>\n          <div className={styles.containerTotalCost}>\n            <span className={styles.titleTotalCost}>\n              ₽{\" \"}\n              {indicators.import.value.toLocaleString(\"ru-RU\", {\n                maximumFractionDigits: 2,\n              })}\n            </span>\n            <span className={styles.titleUnit}>{unitSizeName}</span>\n          </div>\n        </div>\n        <div className={styles.containerProgressBar}>\n          <HSBar height={15} data={data} />\n          <div className={styles.containerlegend}>\n            {data.map((item: any, index: any) => (\n              <div key={item.name} className={styles.legend}>\n                <div className={styles.legendName}>\n                  <div className={styles.containerIcons}>\n                    <Icon\n                      name=\"circle\"\n                      fill={item.color}\n                      width={10}\n                      height={10}\n                      className={styles.circle}\n                    />\n                    <Icon\n                      name=\"ellipse\"\n                      fill={item.color}\n                      width={18}\n                      height={18}\n                      className={styles.ellipse}\n                    />\n                  </div>\n                  {item.name}\n                </div>\n                <span className={styles.legendDescription}>\n                  ₽ {item.description} {unitSizeName}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IncludeTraceability;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  y: 0.5,\n  width: 72,\n  height: 72,\n  rx: 4,\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36 56.5C47.0457 56.5 56 47.5457 56 36.5C56 25.4543 47.0457 16.5 36 16.5C24.9543 16.5 16 25.4543 16 36.5C16 47.5457 24.9543 56.5 36 56.5Z\",\n  fill: \"white\",\n  fillOpacity: 0.1\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M38 40.5L34 36.5L38 32.5\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 36.5C17 46.9934 25.5066 55.5 36 55.5L36 57.5C24.402 57.5 15 48.098 15 36.5L17 36.5ZM36 17.5C25.5066 17.5 17 26.0066 17 36.5L15 36.5C15 24.902 24.402 15.5 36 15.5L36 17.5ZM55 36.5C55 26.0066 46.4934 17.5 36 17.5L36 15.5C47.598 15.5 57 24.902 57 36.5L55 36.5ZM57 36.5C57 48.098 47.598 57.5 36 57.5L36 55.5C46.4934 55.5 55 46.9934 55 36.5L57 36.5Z\",\n  fill: \"#EDF1F7\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 72,\n    height: 73,\n    viewBox: \"0 0 72 73\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n// @ts-ignore\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\n\nimport styles from \"./LeaveTranceability.module.scss\";\n\nimport { ReactComponent as BackIcon } from \"./assets/back.svg\";\n\nimport Icon from \"../Icon\";\n\nimport ProductTraceabilityStore from \"../../stores/ProductTraceabilityStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype LeaveTraceabilityProps = {\n  ProductTraceabilityStore?: ProductTraceabilityStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - Выбыло из прослеживаемости (\"Оборот прослеживаемого товара\")\n */\n@inject(\"AppStore\", \"ProductTraceabilityStore\")\n@observer\nclass LeaveTraceability extends PureComponent<LeaveTraceabilityProps> {\n  render() {\n    const { AppStore, ProductTraceabilityStore } = this.props;\n    const { changeLeaveTraceability } = ProductTraceabilityStore;\n\n    const { unitSizeName } = AppStore;\n    const { indicators } = AppStore.data;\n\n    const data = [\n      {\n        name: \"Выбытие\",\n        value: 80,\n        description: \"1 084,46\",\n        color: \"#8300FF\",\n      },\n      {\n        name: \"Вывоз\",\n        value: 20,\n        description: \"665,46\",\n        color: \"#FF6B00\",\n      },\n    ];\n\n    return (\n      <div className={styles.container}>\n        <div>\n          <div className={styles.containerTitle}>\n            <BackIcon\n              className={styles.icons}\n              onClick={changeLeaveTraceability}\n            />\n            <span className={styles.title}>\n              Выбыло из\n              <br />\n              прослеживаемости\n            </span>\n          </div>\n          <div className={styles.containerTotalCost}>\n            <span className={styles.titleTotalCost}>\n              ₽{\" \"}\n              {indicators.export.value.toLocaleString(\"ru-RU\", {\n                maximumFractionDigits: 2,\n              })}\n            </span>\n            <span className={styles.titleUnit}>{unitSizeName}</span>\n          </div>\n        </div>\n        <div className={styles.containerProgressBar}>\n          <HSBar height={15} data={data} />\n          <div className={styles.containerlegend}>\n            {data.map((item: any, index: any) => (\n              <div key={item.name} className={styles.legend}>\n                <div className={styles.legendName}>\n                  <div className={styles.containerIcons}>\n                    <Icon\n                      name=\"circle\"\n                      fill={item.color}\n                      width={10}\n                      height={10}\n                      className={styles.circle}\n                    />\n                    <Icon\n                      name=\"ellipse\"\n                      fill={item.color}\n                      width={18}\n                      height={18}\n                      className={styles.ellipse}\n                    />\n                  </div>\n                  {item.name}\n                </div>\n                <span className={styles.legendDescription}>\n                  ₽ {item.description} {unitSizeName}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeaveTraceability;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport styles from \"./Participants.module.scss\";\nimport Icon from \"../Icon\";\nimport { ReactComponent as DropdownIcon } from \"../ProductTraceability/assets/dropdown.svg\";\n\nimport ParticipantsStore from \"../../stores/ParticipantsStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype ParticipantsProps = {\n  ParticipantsStore?: ParticipantsStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - участники оборота\n */\n@inject(\"AppStore\", \"ParticipantsStore\")\n@observer\nclass Participants extends PureComponent<ParticipantsProps> {\n  render() {\n    const { AppStore, ParticipantsStore } = this.props;\n    const { changeOSN, changeSRN } = ParticipantsStore;\n    const { participants } = AppStore.data;\n\n    const preparedData = [...participants.parts].map((part) => {\n      if (part.isOsno) {\n        return {\n          isOsno: part.isOsno,\n          title: \"ОСН\",\n          value: part.value,\n          color: \"#8300FF\",\n        };\n      }\n      return {\n        isOsno: part.isOsno,\n        title: \"СРН\",\n        value: part.value,\n        color: \"#FF6B00\",\n      };\n    });\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.containerTitle}>\n          <span className={styles.title}>Участники оборота</span>\n          <span className={styles.count}>{participants.full}</span>\n        </div>\n        <div className={styles.containerChart}>\n          <PieChart data={preparedData} radius={35} segmentsShift={1} />\n        </div>\n        <div className={styles.containerLegend}>\n          {preparedData.map((item: any, index: any) => (\n            <div key={item.value} className={styles.legend}>\n              <div className={styles.legendName}>\n                <div className={styles.containerIcons}>\n                  <Icon\n                    name=\"circle\"\n                    fill={item.color}\n                    width={10}\n                    height={10}\n                    className={styles.circle}\n                  />\n                  <Icon\n                    name=\"ellipse\"\n                    fill={item.color}\n                    width={18}\n                    height={18}\n                    className={styles.ellipse}\n                  />\n                </div>\n                {item.title}\n              </div>\n              <div className={styles.show}>\n                <span className={styles.legendDescription}>\n                  {item.value.toLocaleString(\"ru-RU\", {\n                    maximumFractionDigits: 2,\n                  })}\n                </span>\n                <DropdownIcon\n                  className={styles.iconDropdown}\n                  onClick={() => {\n                    item.isOsno ? changeOSN() : changeSRN();\n                  }}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Participants;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 1.96701e-06C18.6274 8.80661e-07 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 2.17128e-07 18.6274 1.39876e-07 12C6.26248e-08 5.37259 5.37258 3.05336e-06 12 1.96701e-06Z\",\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 8L10 12L14 16\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Line } from \"rc-progress\";\n\nimport styles from \"./DetailedParticipants.module.scss\";\n\nimport { ReactComponent as BackIcon } from \"./assets/back.svg\";\n\nimport ParticipantsStore from \"../../stores/ParticipantsStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype DetailedParticipantsProps = {\n  dataInfo: any;\n  ParticipantsStore?: ParticipantsStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - детализация участников оборота\n */\n@inject(\"AppStore\", \"ParticipantsStore\")\n@observer\nclass DetailedParticipants extends PureComponent<DetailedParticipantsProps> {\n  render() {\n    const { dataInfo } = this.props;\n    const { AppStore, ParticipantsStore } = this.props;\n    const { OSNcheck, changeOSN, changeSRN } = ParticipantsStore;\n    const { participants } = AppStore.data;\n\n    const value = participants.parts.find((part) =>\n      OSNcheck ? part.isOsno : !part.isOsno\n    ).value;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.containerTitle}>\n          <div className={styles.containerBack}>\n            <BackIcon\n              className={styles.icons}\n              onClick={() => {\n                dataInfo.title === \"Общая система налогообложения\"\n                  ? changeOSN()\n                  : changeSRN();\n              }}\n            />\n            <span className={styles.title}>{dataInfo.title}</span>\n          </div>\n          <span className={styles.count}>{value}</span>\n        </div>\n        <div className={styles.containerDetailedInfo}>\n          <div className={styles.detailedInfo}>\n            <div className={styles.containerProgressBarLines}>\n              <span className={styles.progressBarTitle}>Импортеры</span>\n              <span className={styles.progressBarCost}>\n                {dataInfo.importers}\n              </span>\n              <Line\n                percent={dataInfo.importersPercent}\n                strokeWidth={2.2}\n                trailWidth={2.2}\n                strokeColor=\"#8300FF\"\n                trailColor=\"rgba(21, 24, 29, 0.75)\"\n                className={styles.progressLine}\n              />\n            </div>\n            <div className={styles.containerProgressBarLines}>\n              <span className={styles.progressBarTitle}>Экспортеры</span>\n              <span className={styles.progressBarCost}>\n                {dataInfo.exporters}\n              </span>\n              <Line\n                percent={dataInfo.exportersPercent}\n                strokeWidth={2.5}\n                trailWidth={2.5}\n                strokeColor=\"#DC39D5\"\n                trailColor=\"rgba(21, 24, 29, 0.75)\"\n                className={styles.progressLine}\n              />\n            </div>\n          </div>\n          <div className={styles.detailedInfo}>\n            <div className={styles.containerProgressBarLines}>\n              <span className={styles.progressBarTitle}>Внутренний оборот</span>\n              <span className={styles.progressBarCost}>\n                {dataInfo.insideTurn}\n              </span>\n              <Line\n                percent={dataInfo.insideTurnPercent}\n                strokeWidth={2.2}\n                trailWidth={2.2}\n                strokeColor=\"#FF6B00\"\n                trailColor=\"rgba(21, 24, 29, 0.75)\"\n                className={styles.progressLine}\n              />\n            </div>\n            <div className={styles.containerProgressBarLines}>\n              <span className={styles.progressBarTitle}>Потребители</span>\n              <span className={styles.progressBarCost}>\n                {dataInfo.consumers}\n              </span>\n              <Line\n                percent={dataInfo.consumersPercent}\n                strokeWidth={2.5}\n                trailWidth={2.5}\n                strokeColor=\"#7E5B00\"\n                trailColor=\"rgba(21, 24, 29, 0.75)\"\n                className={styles.progressLine}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DetailedParticipants;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C5.37258 24 -6.26248e-08 18.6274 -1.39876e-07 12C-2.17128e-07 5.37258 5.37258 -8.80661e-07 12 -1.96701e-06C18.6274 -3.05336e-06 24 5.37258 24 12C24 18.6274 18.6274 24 12 24Z\",\n  fill: \"#C7D5EC\",\n  fillOpacity: 0.1\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 16L14 12L10 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 2.5,\n  y: 2.5,\n  width: 19,\n  height: 19,\n  rx: 3.5,\n  stroke: \"#8B9CB8\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 11V17H13V11H11Z\",\n  fill: \"#8B9CB8\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 7V9H13V7H11Z\",\n  fill: \"#8B9CB8\"\n});\n\nvar SvgInfo = function SvgInfo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgInfo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/info.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 -8.80661e-07 12 -1.96701e-06C5.37258 -3.05336e-06 2.17128e-07 5.37258 1.39876e-07 12C6.26248e-08 18.6274 5.37258 24 12 24Z\",\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 16L10 12L14 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Line } from \"rc-progress\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport styles from \"./DetailedLine.module.scss\";\nimport { ReactComponent as DropdownIcon } from \"../../assets/dropdown.svg\";\nimport { ReactComponent as InfoIcon } from \"../../assets/info.svg\";\nimport { ReactComponent as BackIcon } from \"../../assets/back.svg\";\n\nimport GroupProductStore from \"../../../../stores/GroupProductStore\";\n\ntype DetailedLineProps = {\n  GroupProductStore?: GroupProductStore;\n  dataInfo: any;\n  itemNumber: number;\n};\n\n/**\n * Компонент - группы товаров\n */\n@inject(\"GroupProductStore\")\n@observer\nclass DetailedLine extends PureComponent<DetailedLineProps> {\n  render() {\n    const { dataInfo, itemNumber, GroupProductStore } = this.props;\n    const { openGroup, closeGroup, openedGroup, getColor } = GroupProductStore;\n\n    const components = [\n      {\n        title: \"8418102001\",\n        percent: 11,\n      },\n      {\n        title: \"8418102008\",\n        percent: 6,\n      },\n      {\n        title: \"8418102003\",\n        percent: 4,\n      },\n      {\n        title: \"8418102002\",\n        percent: 1.15,\n      },\n    ];\n\n    return (\n      <div>\n        <div className={styles.containerProgressBarLines}>\n          <div className={styles.containerProgressIcon}>\n            <div className={styles.containerProgressTitle}>\n              <span className={styles.progressBarTitle}>{dataInfo.name}</span>\n              <span className={styles.progressBarCost}>\n                {dataInfo.percent}%\n              </span>\n            </div>\n            {dataInfo.code !== openedGroup ? (\n              <DropdownIcon\n                className={styles.iconDropdown}\n                onClick={() => openGroup(dataInfo.code)}\n              />\n            ) : (\n              <BackIcon className={styles.iconDropdown} onClick={closeGroup} />\n            )}\n          </div>\n          <Line\n            percent={dataInfo.percent}\n            strokeWidth={2.2}\n            trailWidth={2.2}\n            strokeColor={getColor(itemNumber)}\n            trailColor=\"rgba(21, 24, 29, 0.75)\"\n            className={styles.progressLine}\n          />\n        </div>\n        <div>\n          {dataInfo.code === openedGroup &&\n            components.map((item: any, index: any) => (\n              <div\n                key={item.title}\n                className={styles.containerProgressBarLines}\n              >\n                <div className={styles.containerProgressIcon}>\n                  <div className={styles.containerProgressTitle}>\n                    <span className={styles.progressBarTitle}>\n                      {item.title}\n                    </span>\n                    <span className={styles.progressBarCost}>\n                      {item.percent}%\n                    </span>\n                  </div>\n                  <InfoIcon\n                    className={styles.iconDropdown}\n                    data-tip=\"React-tooltip\"\n                  />\n                  <ReactTooltip\n                    place=\"right\"\n                    type=\"dark\"\n                    effect=\"solid\"\n                    border={true}\n                    borderColor=\"#8B9CB8\"\n                    arrowColor=\"#8B9CB8\"\n                  >\n                    {item.title}\n                    <br />\n                    {dataInfo.name}\n                  </ReactTooltip>\n                </div>\n                <Line\n                  percent={item.percent}\n                  strokeWidth={2.2}\n                  trailWidth={2.2}\n                  strokeColor={getColor(itemNumber)}\n                  trailColor=\"rgba(21, 24, 29, 0.75)\"\n                  className={styles.progressLine}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DetailedLine;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./GroupProduct.module.scss\";\nimport DetailedLine from \"./components/DetailedLine\";\n\nimport GroupProductStore from \"../../stores/GroupProductStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype GroupProductProps = {\n  GroupProductStore?: GroupProductStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - группы товаров\n */\n@inject(\"AppStore\", \"GroupProductStore\")\n@observer\nclass GroupProduct extends PureComponent<GroupProductProps> {\n  render() {\n    const { AppStore } = this.props;\n\n    const { goodsGroups } = AppStore.data;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.containerTitle}>\n          <span className={styles.title}>Группы товаров</span>\n\n          {goodsGroups.map((item: any, index: any) => (\n            <DetailedLine key={item.code} dataInfo={item} itemNumber={index} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GroupProduct;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C5.37258 24 -6.26248e-08 18.6274 -1.39876e-07 12C-2.17128e-07 5.37258 5.37258 -8.80661e-07 12 -1.96701e-06C18.6274 -3.05336e-06 24 5.37258 24 12C24 18.6274 18.6274 24 12 24Z\",\n  fill: \"#C7D5EC\",\n  fillOpacity: 0.1\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 16L14 12L10 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 -8.80661e-07 12 -1.96701e-06C5.37258 -3.05336e-06 2.17128e-07 5.37258 1.39876e-07 12C6.26248e-08 18.6274 5.37258 24 12 24Z\",\n  fill: \"#3F71ED\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 16L10 12L14 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Line } from \"rc-progress\";\n// @ts-ignore\nimport ReactCountryFlag from \"react-country-flag\";\n\nimport { ReactComponent as DropdownIcon } from \"../../assets/dropdown.svg\";\nimport { ReactComponent as BackIcon } from \"../../assets/back.svg\";\n\nimport styles from \"./DetailedCountries.module.scss\";\n\nimport AppStore from \"../../../../stores/AppStore\";\nimport CountriesStore from \"../../../../stores/CountriesStore\";\n\ntype DetailedCountriesProps = {\n  AppStore?: AppStore;\n  CountriesStore?: CountriesStore;\n};\n\n/**\n * Компонент - страна происхождения\n */\n@inject(\"CountriesStore\", \"AppStore\")\n@observer\nclass DetailedCountries extends PureComponent<DetailedCountriesProps> {\n  render() {\n    const { AppStore, CountriesStore } = this.props;\n    const { isOpen, setOpen, setClose } = CountriesStore;\n\n    const { countries } = AppStore.data;\n\n    const components = [\n      {\n        title: \"Бразилия\",\n        percent: 11,\n        code: \"BR\",\n      },\n      {\n        title: \"Канада\",\n        percent: 6,\n        code: \"CA\",\n      },\n      {\n        title: \"Венгрия\",\n        percent: 4,\n        code: \"HU\",\n      },\n      {\n        title: \"Япония\",\n        percent: 1.15,\n        code: \"JP\",\n      },\n    ];\n\n    return (\n      <div>\n        {countries.map((item: any, index: any) => (\n          <div key={item.code} className={styles.containerProgressBarLines}>\n            <div className={styles.containerProgressIcon}>\n              <div className={styles.containerProgressTitle}>\n                <span className={styles.progressBarTitle}>{item.name}</span>\n                <span className={styles.progressBarCost}>{item.percent}%</span>\n              </div>\n              {item.code === \"ANY_CODE\" && !isOpen && (\n                <DropdownIcon\n                  className={styles.iconDropdown}\n                  onClick={setOpen}\n                />\n              )}\n              {item.code === \"ANY_CODE\" && isOpen && (\n                <BackIcon className={styles.iconDropdown} onClick={setClose} />\n              )}\n              {item.code !== \"ANY_CODE\" && item.code !== \"--\" && (\n                <ReactCountryFlag\n                  countryCode={item.code}\n                  svg\n                  style={{\n                    width: \"25px\",\n                    height: \"23px\",\n                  }}\n                  className={styles.iconCountry}\n                />\n              )}\n            </div>\n            <Line\n              percent={item.percent}\n              strokeWidth={2.2}\n              trailWidth={2.2}\n              strokeColor=\"#023AFF\"\n              trailColor=\"rgba(21, 24, 29, 0.75)\"\n              className={styles.progressLine}\n            />\n\n            {isOpen &&\n              item.code === \"ANY_CODE\" &&\n              components.map((country: any, index: any) => (\n                <div\n                  key={country.code}\n                  className={styles.containerProgressBarLinesDetailed}\n                >\n                  <div className={styles.containerProgressIcon}>\n                    <div className={styles.containerProgressTitle}>\n                      <span className={styles.progressBarTitle}>\n                        {country.title}\n                      </span>\n                      <span className={styles.progressBarCost}>\n                        {country.percent}%\n                      </span>\n                    </div>\n                    <ReactCountryFlag\n                      countryCode={country.code}\n                      svg\n                      style={{\n                        width: \"25px\",\n                        height: \"23px\",\n                      }}\n                      className={styles.iconCountry}\n                    />\n                  </div>\n                  <Line\n                    percent={country.percent}\n                    strokeWidth={2.2}\n                    trailWidth={2.2}\n                    strokeColor=\"#023AFF\"\n                    trailColor=\"rgba(21, 24, 29, 0.75)\"\n                    className={styles.progressLine}\n                  />\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default DetailedCountries;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./Countries.module.scss\";\nimport DetailedCountries from \"./components/DetailedCountries\";\n\nimport CountriesStore from \"../../stores/CountriesStore\";\n\ntype CountriesProps = {\n  CountriesStore?: CountriesStore;\n};\n\ntype CountriesState = {\n  dataInfo: any;\n};\n\n/**\n * Компонент - страна происхождения\n */\n@inject(\"CountriesStore\")\n@observer\nclass Countries extends PureComponent<CountriesProps, CountriesState> {\n  render() {\n    const { CountriesStore } = this.props;\n    const {\n      filterAll,\n      filterEAES,\n      showAllCountries,\n      showEAESCountries,\n    } = CountriesStore;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.containerTitle}>\n          <span className={styles.title}>\n            Страна\n            <br />\n            происхождения\n          </span>\n          <div className={styles.containerChooseCountries}>\n            <div className={styles.containerCountries}>\n              <span\n                onClick={showEAESCountries}\n                className={filterEAES ? styles.activeSpan : \"\"}\n              >\n                ЕАЭС\n              </span>\n              <span\n                onClick={showAllCountries}\n                className={filterAll ? styles.activeSpan : \"\"}\n              >\n                Все\n              </span>\n            </div>\n          </div>\n        </div>\n        <div>\n          <DetailedCountries />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Countries;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 24C5.37258 24 -6.26248e-08 18.6274 -1.39876e-07 12C-2.17128e-07 5.37258 5.37258 -8.80661e-07 12 -1.96701e-06C18.6274 -3.05336e-06 24 5.37258 24 12C24 18.6274 18.6274 24 12 24Z\",\n  fill: \"#C7D5EC\",\n  fillOpacity: 0.1\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 16L14 12L10 8\",\n  stroke: \"#EDF1F7\",\n  strokeWidth: 2\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport styles from \"./Risks.module.scss\";\nimport Icon from \"../Icon\";\nimport { ReactComponent as DropdownIcon } from \"./assets/dropdown.svg\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype RisksProps = {\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - риски\n */\n@inject(\"AppStore\")\n@observer\nclass Risks extends PureComponent<RisksProps> {\n  render() {\n    const { AppStore } = this.props;\n    const { risks } = AppStore.data;\n\n    const preparedData = risks.map((risk) => {\n      return risk.withRisks\n        ? {\n            title: \"С рисками\",\n            color: \"#FF6B00\",\n            percent: risk.percent,\n            value: risk.percent,\n          }\n        : {\n            title: \"Без рисков\",\n            color: \"#21931F\",\n            percent: risk.percent,\n            value: risk.percent,\n          };\n    });\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.containerTitle}>\n          <span className={styles.title}>Риски</span>\n        </div>\n        <div className={styles.containerChart}>\n          <PieChart data={preparedData} radius={35} segmentsShift={1} />\n        </div>\n        <div className={styles.containerLegend}>\n          {preparedData.map((item: any, index: any) => (\n            <div key={index} className={styles.legend}>\n              <div className={styles.legendName}>\n                <div className={styles.containerIcons}>\n                  <Icon\n                    name=\"circle\"\n                    fill={item.color}\n                    width={10}\n                    height={10}\n                    className={styles.circle}\n                  />\n                  <Icon\n                    name=\"ellipse\"\n                    fill={item.color}\n                    width={18}\n                    height={18}\n                    className={styles.ellipse}\n                  />\n                </div>\n                {item.title}\n              </div>\n              <div className={styles.show}>\n                <span className={styles.legendDescription}>{item.percent}</span>\n                <DropdownIcon className={styles.iconDropdown} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Risks;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./DiagramsMain.module.scss\";\n\nimport ProductTraceability from \"../ProductTraceability\";\nimport IncludeTraceability from \"../IncludeTranceability\";\nimport LeaveTraceability from \"../LeaveTraceability\";\nimport Participants from \"../Participants\";\nimport DetailedParticipants from \"../DetailedParticipants\";\nimport GroupProduct from \"../GroupProduct\";\nimport Countries from \"../Countries\";\nimport Risks from \"../Risks\";\n\nimport AppStore from \"../../stores/AppStore\";\nimport ProductTraceabilityStore from \"../../stores/ProductTraceabilityStore\";\nimport ParticipantsStore from \"../../stores/ParticipantsStore\";\n\ntype DiagramsMainProps = {\n  ProductTraceabilityStore?: ProductTraceabilityStore;\n  AppStore?: AppStore;\n  ParticipantsStore?: ParticipantsStore;\n};\n\ntype DiagramsMainState = {\n  OSN: any;\n  SRN: any;\n};\n\n/**\n * Общий компонент для диаграмм\n */\n\n@inject(\"AppStore\", \"ProductTraceabilityStore\", \"ParticipantsStore\")\n@observer\nclass DiagramsMain extends PureComponent<DiagramsMainProps, DiagramsMainState> {\n  constructor(props: DiagramsMainProps) {\n    super(props);\n\n    this.state = {\n      OSN: {\n        title: \"Общая система налогообложения\",\n        value: \"897 564\",\n        importers: \"546 056\",\n        importersPercent: 60,\n        exporters: \"356 154\",\n        exportersPercent: 40,\n        insideTurn: \"389 465\",\n        insideTurnPercent: 42,\n        consumers: \"508 646\",\n        consumersPercent: 55,\n      },\n      SRN: {\n        title: \"Специальный режим налогообложения\",\n        value: \"568 315\",\n        importers: \"546 056\",\n        importersPercent: 60,\n        exporters: \"356 154\",\n        exportersPercent: 40,\n        insideTurn: \"389 465\",\n        insideTurnPercent: 42,\n        consumers: \"508 646\",\n        consumersPercent: 55,\n      },\n    };\n  }\n\n  render() {\n    const {\n      state: { OSN, SRN },\n    } = this;\n\n    const {\n      AppStore,\n      ParticipantsStore,\n      ProductTraceabilityStore,\n    } = this.props;\n    const { includeTraceability, leaveTraceability } = ProductTraceabilityStore;\n    const { OSNcheck, SRNcheck } = ParticipantsStore;\n\n    return (\n      <div className={styles.container}>\n        {!includeTraceability && !leaveTraceability ? (\n          <ProductTraceability />\n        ) : (\n          (includeTraceability && <IncludeTraceability />) ||\n          (leaveTraceability && <LeaveTraceability />)\n        )}\n\n        {!OSNcheck && !SRNcheck ? (\n          <Participants />\n        ) : (\n          <DetailedParticipants dataInfo={OSNcheck ? OSN : SRN} />\n        )}\n        <div>\n          <div className={styles.containerGroupAndCountires}>\n            <GroupProduct />\n            <Countries />\n          </div>\n        </div>\n        {AppStore.data.risks ? <Risks /> : null}\n      </div>\n    );\n  }\n}\n\nexport default DiagramsMain;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./Breadcrumb.module.scss\";\nimport arrow from \"./assets/arrow.svg\";\n\nimport MapStore from \"../../../../stores/MapStore\";\nimport AppStore from \"../../../../stores/AppStore\";\n\ntype BreadcrumbProps = {\n  MapStore?: MapStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - карта\n */\n@inject(\"AppStore\", \"MapStore\")\n@observer\nclass Breadcrumb extends PureComponent<BreadcrumbProps> {\n  render() {\n    const { MapStore } = this.props;\n    const { level, currentFO, currentRegion, backToFO, reset } = MapStore;\n\n    const NavCountry = () => {\n      if (level === 0) {\n        return (\n          <li className={styles.breadcrumb__title}>Российская федерация</li>\n        );\n      } else {\n        return (\n          <li>\n            <span className={styles.breadcrumb__link} onClick={reset}>\n              Российская федерация\n            </span>\n          </li>\n        );\n      }\n    };\n\n    const NavFO = () => {\n      if (level === 0) {\n        return null;\n      } else if (level === 1) {\n        return (\n          <li>\n            <img src={arrow} alt=\"\" className={styles.breadcrumb__arrow} />\n            {currentFO.properties.name}\n          </li>\n        );\n      } else {\n        return (\n          <li>\n            <img src={arrow} alt=\"\" className={styles.breadcrumb__arrow} />\n            <span\n              className={styles.breadcrumb__link}\n              onClick={() => backToFO()}\n            >\n              {currentFO.properties.name}\n            </span>\n          </li>\n        );\n      }\n    };\n    const NavRegion = () =>\n      level === 2 ? (\n        <li>\n          <img src={arrow} alt=\"\" className={styles.breadcrumb__arrow} />\n          {currentRegion.properties.name}\n        </li>\n      ) : null;\n\n    return (\n      <div className={styles.breadcrumb}>\n        <ul>\n          <NavCountry />\n          <NavFO />\n          <NavRegion />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Breadcrumb;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker,\n} from \"react-simple-maps\";\n\nimport Breadcrumb from \"./components/Breadcrumb\";\n\nimport { geoCentroid } from \"d3-geo\";\n\nimport rusFederative from \"./json/rus_federative.json\";\nimport rusRegions from \"./json/rus_regions.json\";\n\nimport styles from \"./Map.module.scss\";\n\nimport KnIcon from \"./assets/kn.svg\";\n\nimport MapStore from \"../../stores/MapStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype MapProps = {\n  MapStore?: MapStore;\n  AppStore?: AppStore;\n};\n\n/**\n * Компонент - карта\n */\n@inject(\"AppStore\", \"MapStore\")\n@observer\nclass Map extends PureComponent<MapProps> {\n  private mapContainerRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    const mapContainer: any = this.mapContainerRef.current;\n    const mapHeight =\n      (mapContainer.offsetHeight * 1020) / mapContainer.offsetWidth;\n    this.props.MapStore.setHeight(mapHeight);\n  }\n\n  private onBundleMouseEnter = (e: any) => {\n    const mapGroup: any = document.querySelector(\"#rsm-geographies\");\n    const currentBundle = e.currentTarget.parentNode;\n    mapGroup.appendChild(currentBundle);\n\n    const cuurentValue = currentBundle.querySelector(\".bubble__value\");\n    cuurentValue.style.transform = `translate(0, ${\n      1.5 / this.props.MapStore.zoom\n    }%)`;\n\n    const areas = mapGroup.querySelectorAll(\".rsm-geography\");\n    const currentArea = mapGroup.querySelector(\n      `path.${e.currentTarget.classList[2]}`\n    );\n    areas.forEach((area: any) => {\n      area.style.opacity = 0.5;\n      area.style.stroke = \"rgba(199, 213, 236, 0.25)\";\n    });\n\n    currentArea.style.opacity = 1;\n    currentArea.style.stroke = \"#44C8F5\";\n  };\n\n  private onBundleMouseLeave = (e: any) => {\n    const currentBundle = e.currentTarget.parentNode;\n    const cuurentValue = currentBundle.querySelector(\".bubble__value\");\n    const cuurentName = currentBundle.querySelector(\".bubble__name\");\n    if (!cuurentName.classList.contains(\"visible\"))\n      cuurentValue.style.transform = `translate(0,0)`;\n\n    const mapGroup: any = document.querySelector(\"#rsm-geographies\");\n    const areas = mapGroup.querySelectorAll(\".rsm-geography\");\n    areas.forEach((area: any) => {\n      area.style.opacity = 1;\n      area.style.stroke = \"rgba(199, 213, 236, 0.25)\";\n    });\n  };\n\n  private onAreaMouseEnter = (e: any) => {\n    const mapGroup: any = document.querySelector(\"#rsm-geographies\");\n    const currentArea = e.currentTarget;\n    const areas = mapGroup.querySelectorAll(\".rsm-geography\");\n\n    areas.forEach((area: any) => {\n      area.style.opacity = 0.5;\n    });\n\n    currentArea.style.opacity = 1;\n    currentArea.style.stroke = \"#44C8F5\";\n  };\n\n  private onAreaMouseLeave = (e: any) => {\n    const mapGroup: any = document.querySelector(\"#rsm-geographies\");\n    const areas = mapGroup.querySelectorAll(\".rsm-geography\");\n\n    if (\n      e.relatedTarget &&\n      !e.relatedTarget.classList.contains(styles.bubble__circle)\n    ) {\n      areas.forEach((area: any) => {\n        area.style.opacity = 1;\n        area.style.stroke = \"rgba(199, 213, 236, 0.25)\";\n      });\n    }\n  };\n\n  render() {\n    const { AppStore, MapStore } = this.props;\n    const {\n      width,\n      height,\n      center,\n      zoom,\n      level,\n      currentFO,\n      currentRegion,\n      diffs,\n    } = MapStore;\n\n    const data =\n      level === 0\n        ? AppStore.data.districts || [\n            {\n              code: \"0\",\n              value: 0,\n            },\n          ]\n        : AppStore.data.regions || [\n            {\n              code: \"0\",\n              value: 0,\n            },\n          ];\n\n    const maxValue = [...data].sort((a: any, b: any) => b.value - a.value)[0]\n      .value;\n    const minValue = [...data].sort((a: any, b: any) => a.value - b.value)[0]\n      .value;\n\n    const type = level === 0 ? \"foId\" : \"regionId\";\n\n    return (\n      <div ref={this.mapContainerRef} className={styles.map__container}>\n        <Breadcrumb />\n        <div className={styles.kn}>\n          <div className={styles.kn__icon}>\n            <img src={KnIcon} alt=\"\" />\n          </div>\n          <div className={styles.kn__text}>\n            <div className={styles.kn__title}>МИ ФНС Росссии по КН</div>\n            <div className={styles.kn__value}>67,45</div>\n          </div>\n        </div>\n        <div className={styles.map}>\n          <ComposableMap\n            projection={MapStore.projection()}\n            width={width}\n            height={height}\n          >\n            <ZoomableGroup\n              center={center}\n              zoom={zoom}\n              maxZoom={150}\n              className={styles.map__zoomable}\n            >\n              <Geographies\n                geography={level === 0 ? rusFederative : rusRegions}\n                id=\"rsm-geographies\"\n              >\n                {({ geographies }) => (\n                  <>\n                    {geographies.map((geo) => {\n                      if (\n                        level === 0 ||\n                        (level === 1 &&\n                          geo.properties.foId === currentFO.properties.foId) ||\n                        (level === 2 &&\n                          geo.properties.regionId ===\n                            currentRegion.properties.regionId)\n                      ) {\n                        const markerData = data.find(\n                          (item: any) => item.code === geo.properties[type] + \"\"\n                        ) || {\n                          code: geo.properties[type],\n                          value: 0,\n                        };\n\n                        return (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            onMouseLeave={this.onAreaMouseLeave}\n                            onMouseEnter={this.onAreaMouseEnter}\n                            className={`${styles.map__area} region_${geo.properties.regionId}`}\n                            onClick={() =>\n                              level === 0\n                                ? MapStore.selectFO(geo)\n                                : MapStore.selectRegion(geo)\n                            }\n                            style={{\n                              default: {\n                                fill: MapStore.getSizeColor(\n                                  maxValue,\n                                  minValue,\n                                  markerData.value\n                                )[1],\n                                outline: \"none\",\n                                strokeWidth: 1 / zoom,\n                                cursor: \"pointer\",\n                              },\n                              hover: {\n                                fill: MapStore.getSizeColor(\n                                  maxValue,\n                                  minValue,\n                                  markerData.value\n                                )[1],\n                                strokeWidth: 1 / zoom,\n                                outline: \"none\",\n                                cursor: \"pointer\",\n                              },\n                              pressed: {\n                                fill: MapStore.getSizeColor(\n                                  maxValue,\n                                  minValue,\n                                  markerData.value\n                                )[1],\n                                strokeWidth: 1 / zoom,\n                                outline: \"none\",\n                                cursor: \"pointer\",\n                              },\n                            }}\n                          />\n                        );\n                      }\n                      return null;\n                    })}\n                    {geographies.map((geo) => {\n                      const diff =\n                        level < 2\n                          ? diffs.find(\n                              (diff: any) => diff[0] === geo.properties.regionId\n                            ) || [0, 0, 0]\n                          : [0, 0, 0];\n                      const centroid = geoCentroid(geo);\n                      const center: any = [\n                        centroid[0] + diff[1],\n                        centroid[1] + diff[2],\n                      ];\n\n                      const markerData = data.find(\n                        (item: any) => item.code === geo.properties[type] + \"\"\n                      );\n\n                      const valueStyle = {\n                        transform:\n                          geo.properties.regionId === 77 ||\n                          geo.properties.regionId === 78\n                            ? `translate(0, ${1.5 / zoom}%)`\n                            : `translate(0,0)`,\n                      };\n\n                      const textVisible =\n                        geo.properties.regionId === 77 ||\n                        geo.properties.regionId === 78\n                          ? `${styles.visible} visible`\n                          : ``;\n\n                      if (\n                        (markerData && level === 0) ||\n                        (markerData &&\n                          level === 1 &&\n                          geo.properties.foId === currentFO.properties.foId) ||\n                        (markerData &&\n                          level === 2 &&\n                          geo.properties.regionId ===\n                            currentRegion.properties.regionId)\n                      ) {\n                        return (\n                          <g key={geo.rsmKey + \"-name\"}>\n                            <Marker\n                              coordinates={center}\n                              className={`${styles.bubble} region_${geo.properties.regionId}`}\n                              onClick={() =>\n                                level === 0\n                                  ? MapStore.selectFO(geo)\n                                  : MapStore.selectRegion(geo)\n                              }\n                              onMouseEnter={this.onBundleMouseEnter}\n                              onMouseLeave={this.onBundleMouseLeave}\n                            >\n                              <circle\n                                r={\n                                  MapStore.getSizeColor(\n                                    maxValue,\n                                    minValue,\n                                    markerData.value\n                                  )[0] /\n                                  2 /\n                                  zoom\n                                }\n                                strokeWidth={2 / zoom}\n                                className={styles.bubble__circle}\n                              />\n                              <text\n                                y={-(5 / zoom)}\n                                fontSize={16 / zoom}\n                                className={`${styles.bubble__name} bubble__name ${textVisible}`}\n                              >\n                                {geo.properties.name}\n                              </text>\n                              <text\n                                y={7 / zoom}\n                                fontSize={20 / zoom}\n                                className={`${styles.bubble__value} bubble__value`}\n                                style={valueStyle}\n                              >\n                                {markerData.value.toLocaleString(\"ru-RU\", {\n                                  maximumFractionDigits: 2,\n                                })}\n                              </text>\n                            </Marker>\n                          </g>\n                        );\n                      }\n                      return null;\n                    })}\n                  </>\n                )}\n              </Geographies>\n            </ZoomableGroup>\n          </ComposableMap>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport styles from \"./Period.module.scss\";\n\nimport PeriodsStore from \"../../../../stores/PeriodsStore\";\nimport AppStore from \"../../../../stores/AppStore\";\n\ntype PeriodProps = {\n  PeriodsStore?: PeriodsStore;\n  AppStore?: AppStore;\n  period: any;\n};\n\n/**\n * Компонент - период\n */\n@inject(\"PeriodsStore\", \"AppStore\")\n@observer\nclass Period extends PureComponent<PeriodProps> {\n  render() {\n    const { AppStore, PeriodsStore, period } = this.props;\n    const { activeYear, selectYear } = PeriodsStore;\n\n    const { unitSizeName } = AppStore;\n\n    const barStyle: any = {\n      height: `${(period.percent / 100) * 90}px`,\n    };\n    const periodClass: string =\n      period.code === activeYear\n        ? `${styles.period} ${styles.active}`\n        : styles.period;\n\n    return (\n      <div key={period.code} className={styles.period__container}>\n        <div className={periodClass} onClick={() => selectYear(period.code)}>\n          <div className={styles.period__top}>\n            <div className={styles.period__bar} style={barStyle}>\n              <div className={styles.period__value}>\n                &#8381;{\" \"}\n                {period.value.toLocaleString(\"ru-RU\", {\n                  maximumFractionDigits: 2,\n                })}{\" \"}\n                {unitSizeName}\n              </div>\n            </div>\n          </div>\n          <div className={styles.period__date}>{period.code}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Period;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Period from \"./components/Period\";\nimport styles from \"./Periods.module.scss\";\n\nimport PeriodsStore from \"../../stores/PeriodsStore\";\nimport AppStore from \"../../stores/AppStore\";\n\ntype PeriodsProps = {\n  PeriodsStore?: PeriodsStore;\n  AppStore?: AppStore;\n};\n\ntype PeriodsState = {\n  activePeriod: number;\n  data: any;\n};\n\n/**\n * Компонент - периоды\n */\n@inject(\"AppStore\", \"PeriodsStore\")\n@observer\nclass Periods extends PureComponent<PeriodsProps, PeriodsState> {\n  render() {\n    const { AppStore } = this.props;\n    const { periods } = AppStore.data;\n\n    return (\n      <div className={styles.container}>\n        {periods.periods.map((period: any, i: any) => (\n          <Period key={i} period={period} />\n        ))}\n        <div\n          className={`${styles.periods__line} ${styles.periods__line__1}`}\n        ></div>\n        <div\n          className={`${styles.periods__line} ${styles.periods__line__2}`}\n        ></div>\n        <div\n          className={`${styles.periods__line} ${styles.periods__line__3}`}\n        ></div>\n        <div\n          className={`${styles.periods__line} ${styles.periods__line__4}`}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default Periods;\n","import React, { PureComponent } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nimport \"./App.scss\";\nimport LeftMenu from \"../LeftMenu/LeftMenu\";\nimport BottomMenu from \"../BottomMenu/BottomMenu\";\nimport DiagramsMain from \"../DiagramsMain\";\nimport Map from \"../Map\";\nimport Periods from \"../Periods\";\n\nimport AppStore from \"../../stores/AppStore\";\n\ntype AppProps = {\n  AppStore?: AppStore;\n};\n\n@inject(\"AppStore\")\n@observer\nclass App extends PureComponent<AppProps> {\n  render() {\n    const { AppStore } = this.props;\n\n    return (\n      <div className={AppStore.theme}>\n        <LeftMenu />\n        <BottomMenu />\n        <DiagramsMain />\n        <Map />\n        <Periods />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass ProductTraceabilityStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  includeTraceability: boolean = false;\n  leaveTraceability: boolean = false;\n\n  changeIncludeTraceability = (): void => {\n    this.includeTraceability = !this.includeTraceability;\n    this.appStore.setParams([\n      [\"indicator\", this.includeTraceability ? \"Import\" : null],\n    ]);\n  };\n\n  changeLeaveTraceability = (): void => {\n    this.leaveTraceability = !this.leaveTraceability;\n    this.appStore.setParams([\n      [\"indicator\", this.leaveTraceability ? \"Export\" : null],\n    ]);\n  };\n\n  resetFilters = () => {\n    this.includeTraceability = false;\n    this.leaveTraceability = false;\n  };\n}\n\ndecorate(ProductTraceabilityStore, {\n  includeTraceability: observable,\n  leaveTraceability: observable,\n  changeIncludeTraceability: action,\n  changeLeaveTraceability: action,\n});\n\nexport default ProductTraceabilityStore;\n","const data = [\n  {\n    regionId: 3,\n    foId: 31,\n    value: 67.5,\n    level: 4,\n  },\n  {\n    regionId: 5,\n    foId: 35,\n    value: 98.45,\n    level: 6,\n  },\n  {\n    regionId: 4,\n    foId: 36,\n    value: 78.25,\n    level: 5,\n  },\n  {\n    regionId: 6,\n    foId: 34,\n    value: 17.45,\n    level: 1,\n  },\n  {\n    regionId: 8,\n    foId: 38,\n    value: 24.87,\n    level: 2,\n  },\n  {\n    regionId: 2,\n    foId: 37,\n    value: 167.56,\n    level: 8,\n  },\n  {\n    regionId: 7,\n    foId: 33,\n    value: 64.46,\n    level: 3,\n  },\n  {\n    regionId: 1,\n    foId: 30,\n    value: 124.56,\n    level: 7,\n  },\n\n  {\n    regionId: 71,\n    foId: 30,\n    value: 1.79,\n    level: 1,\n  },\n  {\n    regionId: 46,\n    foId: 30,\n    value: 4.87,\n    level: 3,\n  },\n  {\n    regionId: 69,\n    foId: 30,\n    value: 13.56,\n    level: 7,\n  },\n  {\n    regionId: 37,\n    foId: 30,\n    value: 8.45,\n    level: 5,\n  },\n  {\n    regionId: 57,\n    foId: 30,\n    value: 4.73,\n    level: 3,\n  },\n  {\n    regionId: 67,\n    foId: 30,\n    value: 2.87,\n    level: 1,\n  },\n  {\n    regionId: 36,\n    foId: 30,\n    value: 6.79,\n    level: 4,\n  },\n  {\n    regionId: 76,\n    foId: 30,\n    value: 7.5,\n    level: 5,\n  },\n  {\n    regionId: 50,\n    foId: 30,\n    value: 18.14,\n    level: 8,\n  },\n  {\n    regionId: 77,\n    foId: 30,\n    value: 6.47,\n    level: 4,\n  },\n  {\n    regionId: 44,\n    foId: 30,\n    value: 8.25,\n    level: 5,\n  },\n  {\n    regionId: 31,\n    foId: 30,\n    value: 2.48,\n    level: 1,\n  },\n  {\n    regionId: 40,\n    foId: 30,\n    value: 5.07,\n    level: 3,\n  },\n  {\n    regionId: 33,\n    foId: 30,\n    value: 11.87,\n    level: 6,\n  },\n  {\n    regionId: 68,\n    foId: 30,\n    value: 2.17,\n    level: 1,\n  },\n  {\n    regionId: 48,\n    foId: 30,\n    value: 4.07,\n    level: 3,\n  },\n  {\n    regionId: 62,\n    foId: 30,\n    value: 2.47,\n    level: 1,\n  },\n  {\n    regionId: 32,\n    foId: 30,\n    value: 5.01,\n    level: 3,\n  },\n];\n\nexport default data;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nimport { geoPath, geoMercator, geoCentroid } from \"d3-geo\";\nimport data from \"../components/Map/json/data\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass MapStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  width = 1020;\n  height = 905;\n  center: any = [92, 60];\n  zoom = 2.8;\n  level = 0;\n  currentFO = null;\n  currentFOCenter = null;\n  currentFOZoom = null;\n  currentRegion = null;\n  data = data;\n  diffs = [\n    [99, 2, 8],\n    [1, -3, 2.5],\n    [2, -4, 2],\n    [4, -4, 3],\n    [5, 2, 5],\n    [8, 3, -2],\n    [77, 9, -3.7],\n    [78, -20, 4],\n  ];\n\n  setHeight = (height): void => {\n    this.height = height;\n    this.center = [93, 61];\n  };\n\n  projection = (): any =>\n    geoMercator()\n      .rotate([-11, 0])\n      .translate([800 / 2, (800 * 1.35) / 2])\n      .precision(0.1);\n\n  getSizeColor = (maxValue, minValue, value: number): any => {\n    const step = (maxValue - minValue) / 6;\n\n    if (value >= maxValue - step) {\n      return [144, \"#94A3B8\"];\n    } else if (value >= maxValue - 2 * step) {\n      return [132, \"#7B8DA7\"];\n    } else if (value >= maxValue - 3 * step) {\n      return [120, \"#647896\"];\n    } else if (value >= maxValue - 4 * step) {\n      return [114, \"#4E6383\"];\n    } else if (value >= maxValue - 5 * step) {\n      return [90, \"#3F5069\"];\n    } else if (value >= minValue) {\n      return [82, \"#2F3B4E\"];\n    }\n\n    return [100, \"#455369\"];\n  };\n\n  handleGeographyClick = (geography: any, isToFO: boolean) => {\n    const path = geoPath().projection(this.projection());\n    const centroid = geoCentroid(geography);\n\n    const bounds = path.bounds(geography);\n    const dx = bounds[1][0] - bounds[0][0];\n    const dy = bounds[1][1] - bounds[0][1];\n    const zoom = 0.8 / Math.max(dx / this.width, dy / this.height);\n\n    this.center = centroid;\n    this.zoom = zoom;\n\n    if (isToFO) {\n      this.currentFOCenter = centroid;\n      this.currentFOZoom = zoom;\n    }\n  };\n\n  selectFO = (geo: any): void => {\n    this.level = 1;\n    this.currentFO = geo;\n    this.appStore.setParams([\n      [\"district\", geo.properties.foId],\n      [\"region\", null],\n    ]);\n    this.handleGeographyClick(geo, true);\n  };\n\n  backToFO = (): void => {\n    this.level = 1;\n    this.appStore.setParams([[\"region\", null]]);\n    this.center = this.currentFOCenter;\n    this.zoom = this.currentFOZoom;\n  };\n\n  selectRegion = (geo: any): void => {\n    this.level = 2;\n    this.currentRegion = geo;\n    this.appStore.setParams([[\"region\", geo.properties.regionId]]);\n    this.handleGeographyClick(geo, false);\n  };\n\n  reset = (): void => {\n    this.level = 0;\n    this.currentFO = null;\n    this.currentRegion = null;\n    this.center = [93, 61];\n    this.zoom = 2.8;\n    this.appStore.setParams([\n      [\"district\", null],\n      [\"region\", null],\n    ]);\n  };\n}\n\ndecorate(MapStore, {\n  width: observable,\n  height: observable,\n  center: observable,\n  zoom: observable,\n  level: observable,\n  currentFO: observable,\n  currentRegion: observable,\n  data: observable,\n  diffs: observable,\n  currentFOCenter: observable,\n  currentFOZoom: observable,\n  setHeight: action,\n  handleGeographyClick: action,\n  selectFO: action,\n  backToFO: action,\n  selectRegion: action,\n  reset: action,\n});\n\nexport default MapStore;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass ParticipantsStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  OSNcheck: boolean = false;\n  SRNcheck: boolean = false;\n\n  changeOSN = (): void => {\n    this.OSNcheck = !this.OSNcheck;\n    this.appStore.setParams([[\"osno\", this.OSNcheck ? \"true\" : null]]);\n  };\n\n  changeSRN = (): void => {\n    this.SRNcheck = !this.SRNcheck;\n    this.appStore.setParams([[\"osno\", this.SRNcheck ? \"false\" : null]]);\n  };\n\n  resetFilters = () => {\n    this.OSNcheck = false;\n    this.SRNcheck = false;\n  };\n}\n\ndecorate(ParticipantsStore, {\n  OSNcheck: observable,\n  SRNcheck: observable,\n  changeOSN: action,\n  changeSRN: action,\n});\n\nexport default ParticipantsStore;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass GroupProductStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  openedGroup: string | null = null;\n\n  openGroup = (group): void => {\n    this.openedGroup = group;\n    this.appStore.setParams([[\"tnved_group\", group]]);\n  };\n\n  closeGroup = (): void => {\n    this.openedGroup = null;\n    this.appStore.setParams([[\"tnved_group\", null]]);\n  };\n\n  getColor = (number: number): string => {\n    switch (number) {\n      case 0:\n        return \"#b658f5\";\n      case 1:\n        return \"#29cc97\";\n      case 2:\n        return \"#fcc300\";\n      case 3:\n        return \"#44c8f5\";\n      default:\n        return \"#44c8f5\";\n    }\n  };\n\n  resetFilters = () => {\n    this.openedGroup = null;\n  };\n}\n\ndecorate(GroupProductStore, {\n  openedGroup: observable,\n  openGroup: action,\n  closeGroup: action,\n});\n\nexport default GroupProductStore;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass CountriesStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  filterAll: boolean = true;\n  filterEAES: boolean = false;\n  activeColor: string = \"#3E516F\";\n  isOpen: boolean = false;\n\n  showAllCountries = (): void => {\n    this.filterEAES = false;\n    this.filterAll = true;\n    this.appStore.setParams([[\"eaeu\", null]]);\n  };\n\n  showEAESCountries = (): void => {\n    this.filterEAES = true;\n    this.filterAll = false;\n    this.appStore.setParams([[\"eaeu\", true]]);\n  };\n\n  setOpen = (): void => {\n    this.isOpen = true;\n  };\n\n  setClose = (): void => {\n    this.isOpen = false;\n  };\n\n  resetFilters = () => {\n    this.filterEAES = false;\n    this.filterAll = true;\n    this.isOpen = false;\n  };\n}\n\ndecorate(CountriesStore, {\n  filterAll: observable,\n  filterEAES: observable,\n  activeColor: observable,\n  isOpen: observable,\n  showAllCountries: action,\n  showEAESCountries: action,\n  setOpen: action,\n  setClose: action,\n});\n\nexport default CountriesStore;\n","import { configure, observable, action, decorate } from \"mobx\";\nimport AppStore from \"./AppStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass PeriodsStore {\n  appStore: AppStore;\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore;\n  }\n\n  activeYear: string | null = null;\n\n  selectYear = (year: string): void => {\n    this.activeYear = year;\n    this.appStore.setParams([[\"rep_year\", year]]);\n  };\n\n  resetFilters = () => {\n    this.activeYear = null;\n  };\n}\n\ndecorate(PeriodsStore, {\n  activeYear: observable,\n  selectYear: action,\n});\n\nexport default PeriodsStore;\n","import { observable, configure, action, decorate, computed } from \"mobx\";\n\nimport ProductTraceabilityStore from \"./ProductTraceabilityStore\";\nimport MapStore from \"./MapStore\";\nimport ParticipantsStore from \"./ParticipantsStore\";\nimport GroupProductStore from \"./GroupProductStore\";\nimport CountriesStore from \"./CountriesStore\";\nimport PeriodsStore from \"./PeriodsStore\";\n\nconfigure({ enforceActions: \"observed\" });\n\nclass AppStore {\n  //ProductTraceabilityStore: ProductTraceabilityStore = new ProductTraceabilityStore();\n  ProductTraceabilityStore: ProductTraceabilityStore;\n  MapStore: MapStore;\n  ParticipantsStore: ParticipantsStore;\n  GroupProductStore: GroupProductStore;\n  CountriesStore: CountriesStore;\n  PeriodsStore: PeriodsStore;\n\n  constructor() {\n    this.ProductTraceabilityStore = new ProductTraceabilityStore(this);\n    this.MapStore = new MapStore(this);\n    this.ParticipantsStore = new ParticipantsStore(this);\n    this.GroupProductStore = new GroupProductStore(this);\n    this.CountriesStore = new CountriesStore(this);\n    this.PeriodsStore = new PeriodsStore(this);\n    this.fetch();\n  }\n\n  theme: string = \"light\";\n  params: any = {\n    indicator: null,\n  };\n\n  data: any = {\n    indicators: {\n      import: {\n        value: 0,\n        percent: 0,\n      },\n      turnover: {\n        value: 0,\n        percent: 0,\n      },\n      export: {\n        value: 0,\n        percent: 0,\n      },\n    },\n    participants: {\n      full: 0,\n      parts: [],\n    },\n    goodsGroups: [],\n    countries: [],\n    risks: [],\n    districts: [\n      {\n        code: \"0\",\n        value: 0,\n      },\n    ],\n    regions: [\n      {\n        code: \"0\",\n        value: 0,\n      },\n    ],\n    periods: {\n      periodType: \"year\",\n      periods: [],\n    },\n  };\n\n  fetch = () => {\n    let params = \"\";\n    const paramsKeys = Object.keys(this.params).filter(\n      (key) => this.params[key] !== null\n    );\n\n    paramsKeys.forEach((key, index) => {\n      if (this.params[key]) {\n        if (index === 0) params += \"?\";\n        params += `${key}=${this.params[key]}`;\n        if (index !== paramsKeys.length - 1) params += \"&\";\n      }\n    });\n\n    const responceStr = 'https://lesh1j.github.io/DashboardManager.json' + params;\n    //const responceStr =\n    //  \"/inias/csc/gws/uc/TrcDashboardManagerApi/api/GetPageData\" + params;\n\n    fetch(responceStr, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((json) => this.updateData(json));\n  };\n\n  setParams = (params: any) => {\n    params.forEach((param) => (this.params[param[0]] = param[1]));\n    this.fetch();\n  };\n\n  updateData = (data: any) => {\n    this.data = data;\n  };\n\n  periodType: string = \"year\";\n\n  setPeriodType = (type) => {\n    this.periodType = type;\n    //this.setParams([['tax_period', '']]);\n  };\n\n  unitSize: string = \"Thousand\";\n\n  get unitSizeName(): string {\n    switch (this.unitSize) {\n      case \"Thousand\":\n        return \"тыс.\";\n      case \"Million\":\n        return \"млн.\";\n      case \"Billion\":\n        return \"млрд.\";\n      default:\n        return \"тыс.\";\n    }\n  }\n\n  setUnitSize = (unitSize) => {\n    this.unitSize = unitSize;\n    this.setParams([[\"unit_size\", unitSize]]);\n  };\n\n  resetFilters = () => {\n    this.params = {};\n    this.ProductTraceabilityStore.resetFilters();\n    this.ParticipantsStore.resetFilters();\n    this.GroupProductStore.resetFilters();\n    this.CountriesStore.resetFilters();\n    this.PeriodsStore.resetFilters();\n    this.MapStore.reset();\n    this.periodType = \"year\";\n    this.unitSize = \"Thousand\";\n    this.fetch();\n  };\n}\n\ndecorate(AppStore, {\n  periodType: observable,\n  data: observable,\n  theme: observable,\n  params: observable,\n  unitSize: observable,\n  unitSizeName: computed,\n  setParams: action,\n  fetch: action,\n  updateData: action,\n  setPeriodType: action,\n  resetFilters: action,\n  setUnitSize: action,\n});\n\nexport default AppStore;\n","import React, { PureComponent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport App from \"./components/App\";\nimport AppStore from \"./stores/AppStore\";\n\ntype AppWrapperProps = {};\n\nclass AppWrapper extends PureComponent<AppWrapperProps> {\n  private AppStore: AppStore = new AppStore();\n\n  get stores(): object {\n    return {\n      AppStore: this.AppStore,\n      ProductTraceabilityStore: this.AppStore.ProductTraceabilityStore,\n      MapStore: this.AppStore.MapStore,\n      ParticipantsStore: this.AppStore.ParticipantsStore,\n      GroupProductStore: this.AppStore.GroupProductStore,\n      CountriesStore: this.AppStore.CountriesStore,\n      PeriodsStore: this.AppStore.PeriodsStore,\n    };\n  }\n\n  render() {\n    return (\n      <Provider {...this.stores}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<AppWrapper />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerProgressBarLines\":\"DetailedCountries_containerProgressBarLines__3Uy0D\",\"containerProgressBarLinesDetailed\":\"DetailedCountries_containerProgressBarLinesDetailed__2b2w6\",\"containerProgressIcon\":\"DetailedCountries_containerProgressIcon__29giO\",\"containerProgressTitle\":\"DetailedCountries_containerProgressTitle__1ZE3K\",\"progressBarTitle\":\"DetailedCountries_progressBarTitle__1ZpDN\",\"progressBarCost\":\"DetailedCountries_progressBarCost__2cJ6-\",\"iconDropdown\":\"DetailedCountries_iconDropdown__bDAvB\",\"progressLine\":\"DetailedCountries_progressLine__1LcP5\",\"iconCountry\":\"DetailedCountries_iconCountry__2RgQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IncludeTranceability_container__3MpO9\",\"containerTitle\":\"IncludeTranceability_containerTitle__1FGbO\",\"containerProgressBar\":\"IncludeTranceability_containerProgressBar__1tT8r\",\"icons\":\"IncludeTranceability_icons__1dpcK\",\"title\":\"IncludeTranceability_title__eZ5tW\",\"containerTotalCost\":\"IncludeTranceability_containerTotalCost__L599k\",\"titleTotalCost\":\"IncludeTranceability_titleTotalCost__1kHz8\",\"titleUnit\":\"IncludeTranceability_titleUnit__2S6bY\",\"containerlegend\":\"IncludeTranceability_containerlegend__1jOlK\",\"legend\":\"IncludeTranceability_legend__2Wlxt\",\"legendName\":\"IncludeTranceability_legendName__2h9Sv\",\"legendDescription\":\"IncludeTranceability_legendDescription__7tFRy\",\"circle\":\"IncludeTranceability_circle__1B17t\",\"ellipse\":\"IncludeTranceability_ellipse__1ELhp\",\"containerIcons\":\"IncludeTranceability_containerIcons__VGtCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeaveTranceability_container__2Cpd0\",\"containerTitle\":\"LeaveTranceability_containerTitle__2Vx6P\",\"containerProgressBar\":\"LeaveTranceability_containerProgressBar__3BiIt\",\"icons\":\"LeaveTranceability_icons__X-hYA\",\"title\":\"LeaveTranceability_title__3biqB\",\"containerTotalCost\":\"LeaveTranceability_containerTotalCost__1irF6\",\"titleTotalCost\":\"LeaveTranceability_titleTotalCost__x5Gll\",\"titleUnit\":\"LeaveTranceability_titleUnit__3IQUK\",\"containerlegend\":\"LeaveTranceability_containerlegend__SmDIX\",\"legend\":\"LeaveTranceability_legend__2f6Zp\",\"legendName\":\"LeaveTranceability_legendName__39uky\",\"legendDescription\":\"LeaveTranceability_legendDescription__nB5nZ\",\"circle\":\"LeaveTranceability_circle__3gUkA\",\"ellipse\":\"LeaveTranceability_ellipse__1VJi2\",\"containerIcons\":\"LeaveTranceability_containerIcons__3BsJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerProgressBarLines\":\"DetailedLine_containerProgressBarLines__2oqKL\",\"containerProgressIcon\":\"DetailedLine_containerProgressIcon__whYWC\",\"containerProgressTitle\":\"DetailedLine_containerProgressTitle__c_01A\",\"progressBarTitle\":\"DetailedLine_progressBarTitle__2DGoQ\",\"progressBarCost\":\"DetailedLine_progressBarCost__2Wn91\",\"iconDropdown\":\"DetailedLine_iconDropdown__3Q9Iv\",\"progressLine\":\"DetailedLine_progressLine__21Otf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__3zg1l\",\"map__container\":\"Map_map__container__3lRSV\",\"map__area\":\"Map_map__area__4Pc1y\",\"bubble\":\"Map_bubble__1dFhv\",\"bubble__circle\":\"Map_bubble__circle__22rEg\",\"bubble__value\":\"Map_bubble__value__1cQGV\",\"bubble__name\":\"Map_bubble__name__3wvDn\",\"visible\":\"Map_visible__26Qfo\",\"kn\":\"Map_kn__2O6rF\",\"kn__icon\":\"Map_kn__icon__kygdu\",\"kn__title\":\"Map_kn__title__1ZILl\",\"kn__value\":\"Map_kn__value__1fTzA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Participants_container__1JdRN\",\"title\":\"Participants_title__3-Bm2\",\"count\":\"Participants_count__2INZ4\",\"containerTitle\":\"Participants_containerTitle__3y6sa\",\"containerChart\":\"Participants_containerChart__xJGSX\",\"containerLegend\":\"Participants_containerLegend__3MPCd\",\"legend\":\"Participants_legend__2O2Kr\",\"legendName\":\"Participants_legendName__1Q8d9\",\"legendDescription\":\"Participants_legendDescription__2MZta\",\"circle\":\"Participants_circle__2UEdZ\",\"ellipse\":\"Participants_ellipse__umv1y\",\"containerIcons\":\"Participants_containerIcons__1aFNZ\",\"show\":\"Participants_show__9Dff4\",\"iconDropdown\":\"Participants_iconDropdown__3PKNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Risks_container__3xP66\",\"title\":\"Risks_title__36pl7\",\"containerTitle\":\"Risks_containerTitle__2yi9l\",\"containerChart\":\"Risks_containerChart__2te8-\",\"containerLegend\":\"Risks_containerLegend__151bn\",\"legend\":\"Risks_legend__2TR6D\",\"legendName\":\"Risks_legendName__P9TcS\",\"legendDescription\":\"Risks_legendDescription__1t_KV\",\"circle\":\"Risks_circle__j4KN2\",\"ellipse\":\"Risks_ellipse__V2K-Z\",\"containerIcons\":\"Risks_containerIcons__1Wr8R\",\"show\":\"Risks_show__1qXbT\",\"iconDropdown\":\"Risks_iconDropdown__VvZzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Periods_container__3dOEJ\",\"periods__line\":\"Periods_periods__line__3ex2H\",\"periods__line__4\":\"Periods_periods__line__4__O6BZm\",\"periods__line__3\":\"Periods_periods__line__3__2zgXv\",\"periods__line__2\":\"Periods_periods__line__2__3rRDK\",\"periods__line__1\":\"Periods_periods__line__1__3beRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"Period_period__3NwZr\",\"active\":\"Period_active__31hlU\",\"period__bar\":\"Period_period__bar__3KymR\",\"period__value\":\"Period_period__value__3__3O\",\"period__container\":\"Period_period__container__3Yc3d\",\"period__top\":\"Period_period__top__X3SJ-\",\"period__date\":\"Period_period__date__IbCLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Countries_container__2PqWo\",\"containerTitle\":\"Countries_containerTitle__1HgCy\",\"title\":\"Countries_title__3CuaO\",\"containerChooseCountries\":\"Countries_containerChooseCountries__1706f\",\"containerCountries\":\"Countries_containerCountries__314UA\",\"activeSpan\":\"Countries_activeSpan__639f_\",\"containerProgressBarLines\":\"Countries_containerProgressBarLines__1n5Bi\",\"containerProgressBarLinesDetailed\":\"Countries_containerProgressBarLinesDetailed__14Jls\",\"containerProgressIcon\":\"Countries_containerProgressIcon__36jwl\",\"containerProgressTitle\":\"Countries_containerProgressTitle__gTn_E\",\"progressBarTitle\":\"Countries_progressBarTitle__2yjlb\",\"progressBarCost\":\"Countries_progressBarCost__4LCNl\",\"iconDropdown\":\"Countries_iconDropdown__3b0Tl\",\"progressLine\":\"Countries_progressLine__svnxM\",\"iconCountry\":\"Countries_iconCountry__Bk5uu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumb\":\"Breadcrumb_breadcrumb__1eeHR\",\"breadcrumb__link\":\"Breadcrumb_breadcrumb__link__3RDxv\",\"breadcrumb__title\":\"Breadcrumb_breadcrumb__title__UZRex\",\"breadcrumb__arrow\":\"Breadcrumb_breadcrumb__arrow__g6Htg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GroupProduct_container__3g7PA\",\"containerTitle\":\"GroupProduct_containerTitle__36ONv\",\"title\":\"GroupProduct_title__ewMMM\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DiagramsMain_container__3LtqZ\",\"containerGroupAndCountires\":\"DiagramsMain_containerGroupAndCountires__Dkm65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMenu\":\"BottomMenu_containerMenu__2xWtX\",\"containerCounts\":\"BottomMenu_containerCounts__3azcG\",\"containerUnits\":\"BottomMenu_containerUnits__oM0u7\",\"activeSpan\":\"BottomMenu_activeSpan__2VPWL\",\"containerPeriods\":\"BottomMenu_containerPeriods__1TMPx\",\"containerSwitch\":\"BottomMenu_containerSwitch__oXG1O\",\"active\":\"BottomMenu_active__dmA57\",\"noActive\":\"BottomMenu_noActive__1-l3x\",\"switchSelect\":\"BottomMenu_switchSelect__2yIQ2\",\"icons\":\"BottomMenu_icons__26EbS\",\"iconsMap\":\"BottomMenu_iconsMap__2EDFV\",\"containerRestoreFilters\":\"BottomMenu_containerRestoreFilters__23LPa\",\"filters\":\"BottomMenu_filters__3mgsl\",\"containerMap\":\"BottomMenu_containerMap__1pA6S\"};","module.exports = __webpack_public_path__ + \"static/media/icons.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductTraceability_container__10_ZS\",\"containerTitle\":\"ProductTraceability_containerTitle__QXphl\",\"containerProgressBar\":\"ProductTraceability_containerProgressBar__36wcU\",\"containerProgressBarLines\":\"ProductTraceability_containerProgressBarLines__cKHXf\",\"progressLine\":\"ProductTraceability_progressLine__1iK7o\",\"icons\":\"ProductTraceability_icons__Zzmup\",\"iconDropdown\":\"ProductTraceability_iconDropdown__3bXOR\",\"containerProgressIcon\":\"ProductTraceability_containerProgressIcon__YGjQN\",\"containerProgressTitle\":\"ProductTraceability_containerProgressTitle__1xuVK\",\"title\":\"ProductTraceability_title__1aa7D\",\"containerTotalCost\":\"ProductTraceability_containerTotalCost__1kQeB\",\"titleTotalCost\":\"ProductTraceability_titleTotalCost__3DHFY\",\"titleUnit\":\"ProductTraceability_titleUnit__JGO3S\",\"progressBarTitle\":\"ProductTraceability_progressBarTitle__reCEi\",\"progressBarCost\":\"ProductTraceability_progressBarCost__1m_Se\"};","module.exports = __webpack_public_path__ + \"static/media/kn.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailedParticipants_container__2mYCl\",\"containerTitle\":\"DetailedParticipants_containerTitle__1nhhQ\",\"title\":\"DetailedParticipants_title__ypDwd\",\"count\":\"DetailedParticipants_count__eoxJY\",\"containerBack\":\"DetailedParticipants_containerBack__3fkgA\",\"containerProgressBarLines\":\"DetailedParticipants_containerProgressBarLines__1lFym\",\"progressBarTitle\":\"DetailedParticipants_progressBarTitle__ra8Le\",\"progressBarCost\":\"DetailedParticipants_progressBarCost__3ZnQy\",\"progressLine\":\"DetailedParticipants_progressLine__cNWzO\",\"detailedInfo\":\"DetailedParticipants_detailedInfo__MmVMR\",\"containerDetailedInfo\":\"DetailedParticipants_containerDetailedInfo__c3BzQ\",\"icons\":\"DetailedParticipants_icons__2z2E5\"};"],"sourceRoot":""}