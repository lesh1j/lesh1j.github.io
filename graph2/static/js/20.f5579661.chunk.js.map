{"version":3,"sources":["components/modals/ModalSaveGraph/ModalSaveGraph.module.scss","components/modals/ModalSaveGraph/ModalSaveGraph.tsx","components/modals/ModalSaveGraph/index.ts"],"names":["module","exports","ModalSaveGraph","inject","observer","props","_onSave","a","nameGraph","state","graphStore","copyGraph","console","warn","message","onClose","_onChange","e","setState","target","value","today","Date","date","getDate","getMonth","getFullYear","toString","substr","getHours","getMinutes","getSeconds","graphID","getSchemeId","graphName","getGraphName","this","Dialog","withOverlay","className","styles","dialog","options","opened","type","title","okText","text","Input","label","labelPosition","onChange","onConfirm","onCancel","PureComponent"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,iC,+JCuGZC,EArFdC,YAAO,a,GACPC,Y,oDAEC,WAAYC,GAA6B,IAAD,uBACtC,cAAMA,IAgCRC,QAjCwC,sBAiC9B,8BAAAC,EAAA,6DACAC,EAAc,EAAKC,MAAnBD,UACAE,EAAe,EAAKL,MAApBK,WAFA,yBAIAA,QAJA,IAIAA,OAJA,EAIAA,EAAYC,UAAUH,GAJtB,uDAMNI,QAAQC,KAAK,+BAAgC,KAAIC,SAN3C,QAQR,EAAKT,MAAMU,UARH,yDAjC8B,EAiDxCC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEV,UAAWS,EAAEE,OAAOC,SAlDE,IAG9BV,EAAeL,EAAfK,WAEFW,EAAQ,IAAIC,KAChBC,GACGF,EAAMG,UAAY,GAAK,IAAMH,EAAMG,UAAYH,EAAMG,WACtD,KACCH,EAAMI,WAAa,EAAI,GAAK,KAAOJ,EAAMI,WAAa,GAAKJ,EAAMI,WAAa,GAC/E,IACAJ,EAAMK,cAAcC,WAAWC,QAAQ,GACvC,KACCP,EAAMQ,WAAa,GAAK,IAAMR,EAAMQ,WAAaR,EAAMQ,YACxD,KACCR,EAAMS,aAAe,GAAK,IAAMT,EAAMS,aAAeT,EAAMS,cAC5D,KACCT,EAAMU,aAAe,GAAK,IAAMV,EAAMU,aAAeV,EAAMU,cAE1DC,EAAO,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAYuB,YACtBC,EAAS,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAYyB,aAExB3B,EAAYwB,EAAU,kCAAWA,EAAU,iBAAST,EAAKI,WAAaO,EAtBtC,OAwBtC,EAAKzB,MAAQ,CACXD,UAAWA,GAzByB,E,0CAqDxC,WAAU,IACAO,EAAYqB,KAAK/B,MAAjBU,QACAP,EAAc4B,KAAK3B,MAAnBD,UAER,OACE,kBAAC6B,EAAA,EAAD,CACEC,aAAa,EACbC,UAAWC,IAAOC,OAClBC,QAAS,CACPC,QAAQ,EACRC,KAAM,UACNC,MAAO,wFACPC,OAAQ,yDACRC,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,2GACNC,cAAc,MACd9B,MAAOZ,EACP2C,SAAUf,KAAKpB,YAGnBoC,UAAWhB,KAAK9B,QAChB+C,SAAUtC,S,GA5ESuC,mB,MCrB7B","file":"static/js/20.f5579661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"ModalSaveGraph_dialog__n3PCN\"};","import Dialog from 'components/Dialog';\r\nimport Input from 'components/Input';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { PureComponent } from 'react';\r\nimport { GraphStoreType } from '../../../stores/graph/graphStore';\r\nimport styles from './ModalSaveGraph.module.scss';\r\n\r\ntype ModalSaveGraphProps = {\r\n  graphStore?: GraphStoreType;\r\n  [key: string]: any;\r\n};\r\n\r\ntype ModalSaveGraphState = {\r\n  nameGraph: any;\r\n};\r\n\r\n/**\r\n * Компонент модального окна по сохранению графа\r\n */\r\n@inject('graphStore')\r\n@observer\r\nclass ModalSaveGraph extends PureComponent<ModalSaveGraphProps, ModalSaveGraphState> {\r\n  constructor(props: ModalSaveGraphProps) {\r\n    super(props);\r\n\r\n    const { graphStore } = props;\r\n\r\n    const today = new Date(),\r\n      date =\r\n        (today.getDate() < 10 ? '0' + today.getDate() : today.getDate()) +\r\n        '-' +\r\n        (today.getMonth() + 1 < 10 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1) +\r\n        '-' +\r\n        today.getFullYear().toString().substr(-2) +\r\n        ' ' +\r\n        (today.getHours() < 10 ? '0' + today.getHours() : today.getHours()) +\r\n        ':' +\r\n        (today.getMinutes() < 10 ? '0' + today.getMinutes() : today.getMinutes()) +\r\n        ':' +\r\n        (today.getSeconds() < 10 ? '0' + today.getSeconds() : today.getSeconds());\r\n\r\n    const graphID = graphStore?.getSchemeId;\r\n    const graphName = graphStore?.getGraphName;\r\n\r\n    const nameGraph = graphID ? 'Схема ' + graphID + ' от ' + date.toString() : graphName;\r\n\r\n    this.state = {\r\n      nameGraph: nameGraph,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Функция на сохранение копии графа\r\n   * @private\r\n   */\r\n  _onSave = async () => {\r\n    const { nameGraph } = this.state;\r\n    const { graphStore } = this.props;\r\n    try {\r\n      await graphStore?.copyGraph(nameGraph);\r\n    } catch (err) {\r\n      console.warn('Error on create copy graph: ', err.message);\r\n    }\r\n    this.props.onClose();\r\n  };\r\n\r\n  /**\r\n   * Функция, реагирующая на изменение в поле input (наименование графа)\r\n   * @param e - системная информация об input\r\n   * @private\r\n   */\r\n  _onChange = (e: any): void => {\r\n    this.setState({ nameGraph: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { onClose } = this.props;\r\n    const { nameGraph } = this.state;\r\n\r\n    return (\r\n      <Dialog\r\n        withOverlay={false}\r\n        className={styles.dialog}\r\n        options={{\r\n          opened: true,\r\n          type: 'confirm',\r\n          title: 'Сохранить схему',\r\n          okText: 'Сохранить',\r\n          text: (\r\n            <Input\r\n              label=\"Наименование схемы:\"\r\n              labelPosition=\"top\"\r\n              value={nameGraph}\r\n              onChange={this._onChange}\r\n            />\r\n          ),\r\n          onConfirm: this._onSave,\r\n          onCancel: onClose,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalSaveGraph;\r\n","export { default } from './ModalSaveGraph';\r\n"],"sourceRoot":""}