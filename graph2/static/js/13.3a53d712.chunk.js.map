{"version":3,"sources":["components/modals/AddNewNode/AddNewNode.module.scss","components/modals/AddNewNode/Taxpayer/Taxpayer.module.scss","components/modals/AddNewNode/Taxpayer/Taxpayer.tsx","components/modals/AddNewNode/AddNewNode.tsx","components/modals/AddNewNode/index.ts"],"names":["module","exports","Taxpayer","state","showAdditionalInfo","hovered","wrapperRef","React","createRef","hoverTimeout","clickTimeout","_collapseSection","_expandSection","_toggleShowAdditionalInfo","setState","_onHover","clearTimeout","setTimeout","_onUnHover","_onClick","_onDoubleClickNode","props","onSelect","taxpayer","this","wrapperStyle","theme","className","styles","wrapper","ref","onDoubleClick","onMouseEnter","onMouseLeave","title","main","inn","kpp","name","period","PureComponent","defaultProps","AddNewNode","inject","observer","searchValue","_onCreateNode","a","graphStore","modalStore","createLinkModeV3","modeLink","diagramStore","subject_type","fromNode","toNode","diagram","selection","first","data","openModal","MODAL_CREATE_LINK","isFL","infoNodeModeV3","MODAL_DETAILED_INDIVIDUAL_PERSON","isShow","Handmade","disabledINN","createNode","_onClose","_onChange","value","length","commonStore","resetNodesOrder","_onSearch","nodes","pending","ApiServices","source","cancel","nodesPendingFalse","searchNodesByText","nodesPendingTrue","closeModal","ADD_NEW_NODE","_onReset","_onCreateIndividualPerson","header","data-draggable","headerLabel","onClick","Icon","close","appTheme","separateLine","label","container","Search","onChange","onSearch","autoSearchTimeout","placeholder","autoFocus","withButton","search","error","noResults","errorText","loader","Loader","list","order","map","item","index","key","action","ActionButton","disabled","buttonStyle","button","apply"],"mappings":"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","file":"static/js/13.3a53d712.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddNewNode_wrapper__3vF8L\",\"loader\":\"AddNewNode_loader__32yO7\",\"header\":\"AddNewNode_header__ADYBo\",\"headerLabel\":\"AddNewNode_headerLabel__fukkg\",\"close\":\"AddNewNode_close__2s0cF\",\"search\":\"AddNewNode_search__2JyZt\",\"list\":\"AddNewNode_list__25D7t\",\"item\":\"AddNewNode_item__2Otbf\",\"emptyContainer\":\"AddNewNode_emptyContainer__2eWne\",\"emptyText\":\"AddNewNode_emptyText__3fIJ1\",\"error\":\"AddNewNode_error__2Bpfh\",\"errorText\":\"AddNewNode_errorText__18ecG\",\"actions\":\"AddNewNode_actions__1m9Lq\",\"action\":\"AddNewNode_action__1isnF\",\"separateLine\":\"AddNewNode_separateLine__1_a4W\",\"container\":\"AddNewNode_container__1G45R\",\"button\":\"AddNewNode_button__3HrzT\",\"apply\":\"AddNewNode_apply__3FOrr\",\"label\":\"AddNewNode_label__3eseH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Taxpayer_wrapper__2A3hn\",\"main\":\"Taxpayer_main__2YILC\",\"additional\":\"Taxpayer_additional__1bEBz\",\"fadeIn\":\"Taxpayer_fadeIn__2oEMw\",\"additionalData\":\"Taxpayer_additionalData__1vymC\",\"additionalDataContainer\":\"Taxpayer_additionalDataContainer__3RRHV\",\"inn\":\"Taxpayer_inn__2FZ1e\",\"kpp\":\"Taxpayer_kpp__3RIj5\",\"name\":\"Taxpayer_name__1GWlA\",\"period\":\"Taxpayer_period__ww2j1\",\"dataName\":\"Taxpayer_dataName__3vkh1\",\"dataValue\":\"Taxpayer_dataValue__iTVFX\",\"additionalButtonContainer\":\"Taxpayer_additionalButtonContainer__3UE8-\",\"additionalButtonLabel\":\"Taxpayer_additionalButtonLabel__1rWrW\",\"additionalInfoIcon\":\"Taxpayer_additionalInfoIcon__18mX5\"};","import React, { PureComponent } from 'react';\r\nimport { taxpayerPropTypes } from './Taxpayer.props';\r\nimport styles from './Taxpayer.module.scss';\r\n\r\nimport Icon from '../../../Icon';\r\n\r\nimport { formatDate } from '../../../../utils/ui/formatDate';\r\n\r\nimport { TaxpayerType } from 'DataTypes';\r\nimport { formatIntegralAssessment } from '../../../../utils/ui/formatIntegralAssessment';\r\n\r\ninterface TaxpayerProps {\r\n  taxpayer: TaxpayerType;\r\n  onSelect: (data: any) => void;\r\n  wrapperStyle?: string;\r\n  theme?: string;\r\n}\r\n\r\ninterface TaxpayerState {\r\n  showAdditionalInfo: boolean;\r\n  hovered: boolean;\r\n}\r\n\r\n/**\r\n * Компонент НП для списка НП\r\n */\r\nclass Taxpayer extends PureComponent<TaxpayerProps, TaxpayerState> {\r\n  static propTypes = taxpayerPropTypes;\r\n\r\n  static defaultProps = {\r\n    wrapperStyle: '',\r\n  };\r\n\r\n  state = {\r\n    showAdditionalInfo: false,\r\n    hovered: false,\r\n  };\r\n\r\n  wrapperRef = React.createRef<HTMLDivElement>();\r\n  hoverTimeout: any;\r\n  clickTimeout: any;\r\n\r\n  /**\r\n   * Метод сворачивает компонент по высоте\r\n   */\r\n  _collapseSection = (): void => {};\r\n\r\n  /**\r\n   * Метод разворачивает компонент по высоте\r\n   */\r\n  _expandSection = (): void => {};\r\n\r\n  /**\r\n   * Метод переключает состояние дополнительной информации\r\n   */\r\n  _toggleShowAdditionalInfo = (): void => {\r\n    this.setState({ showAdditionalInfo: !this.state.showAdditionalInfo });\r\n  };\r\n\r\n  /**\r\n   * Метод переключает состояние наведение на true\r\n   */\r\n  _onHover = (): void => {\r\n    clearTimeout(this.hoverTimeout);\r\n\r\n    this.hoverTimeout = setTimeout(() => {\r\n      this.setState({ hovered: true });\r\n    }, 300);\r\n  };\r\n\r\n  /**\r\n   * Метод переключает состояние наведение на false\r\n   */\r\n  _onUnHover = (): void => {\r\n    clearTimeout(this.hoverTimeout);\r\n    this.setState({ hovered: false });\r\n  };\r\n\r\n  /**\r\n   * Метод обрабатывает событие клика\r\n   */\r\n  _onClick = (): void => {\r\n    const secondClickTimeout = 300;\r\n\r\n    clearTimeout(this.clickTimeout);\r\n    this.clickTimeout = setTimeout(this._toggleShowAdditionalInfo, secondClickTimeout);\r\n  };\r\n\r\n  /**\r\n   * Метод добавления узла\r\n   */\r\n  _onDoubleClickNode = (): void => {\r\n    clearTimeout(this.clickTimeout);\r\n\r\n    const { onSelect, taxpayer } = this.props;\r\n    onSelect(taxpayer);\r\n  };\r\n\r\n  /**\r\n   * Метод отрисовывает элементы\r\n   */\r\n  render() {\r\n    const {\r\n      props: { taxpayer, wrapperStyle, theme },\r\n      state: { hovered, showAdditionalInfo },\r\n    } = this;\r\n\r\n    /** Максимальная длина текста */\r\n    const sliceLen = 70;\r\n\r\n    return (\r\n      <div\r\n        className={`${styles.wrapper} ${wrapperStyle}`}\r\n        ref={this.wrapperRef}\r\n        onDoubleClick={this._onDoubleClickNode}\r\n        onMouseEnter={this._onHover}\r\n        onMouseLeave={this._onUnHover}\r\n        title={'Кликните дважды для создания узла'}\r\n      >\r\n        <div className={styles.main}>\r\n          <span className={styles.inn}>{taxpayer.inn}</span>\r\n          <span className={styles.kpp}>{taxpayer.kpp}</span>\r\n          <span className={styles.name}>{taxpayer.name}</span>\r\n          <span className={styles.period}>-</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Taxpayer;\r\n","import React, { PureComponent } from 'react';\r\nimport styles from './AddNewNode.module.scss';\r\n\r\nimport Search from '../../Search';\r\nimport Taxpayer from './Taxpayer';\r\nimport Icon from '../../Icon';\r\nimport Loader from '../../Loader';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport {\r\n  ADD_NEW_NODE,\r\n  MODAL_CREATE_LINK,\r\n  MODAL_DETAILED_INDIVIDUAL_PERSON,\r\n} from '../constants/modalNames';\r\nimport ApiServices from '../../../utils/services/api/ApiServices';\r\nimport ActionButton from '../../ActionButton';\r\n\r\ninterface AddNewNodeProps {\r\n  createLinkModeV3?: boolean;\r\n  modeLink?: string;\r\n  commonStore?: any;\r\n  modalStore?: any;\r\n  graphStore?: any;\r\n  diagramStore?: any;\r\n}\r\n\r\ninterface AddNewNodeState {\r\n  // Значение поля поиска\r\n  searchValue: string;\r\n}\r\n\r\n/**\r\n * Компонент добавления нового узла(поиск по ИНН и наименованию)\r\n */\r\n@inject('commonStore', 'modalStore', 'graphStore', 'diagramStore')\r\n@observer\r\nclass AddNewNode extends PureComponent<AddNewNodeProps, AddNewNodeState> {\r\n  state = {\r\n    searchValue: '',\r\n  };\r\n\r\n  /**\r\n   * Метод создания узла\r\n   */\r\n  _onCreateNode = async (taxpayer: any): Promise<void> => {\r\n    const { graphStore, modalStore, createLinkModeV3, modeLink, diagramStore } = this.props;\r\n\r\n    let fromNode, toNode;\r\n    if (createLinkModeV3) {\r\n      const createLinkModeV3 = true;\r\n      if (taxpayer.subject_type !== 'FL') {\r\n        if (modeLink === 'from') {\r\n          fromNode = taxpayer;\r\n          toNode = diagramStore?.diagram?.selection.first()!.data;\r\n        } else {\r\n          fromNode = diagramStore?.diagram?.selection.first()!.data;\r\n          toNode = taxpayer;\r\n        }\r\n        const isFL = false;\r\n        modalStore?.openModal(MODAL_CREATE_LINK, {\r\n          fromNode,\r\n          toNode,\r\n          createLinkModeV3,\r\n          modeLink,\r\n          isFL,\r\n        });\r\n      } else {\r\n        const infoNodeModeV3 = diagramStore?.diagram?.selection.first()!.data;\r\n        const isShow = false;\r\n        const Handmade = true;\r\n        const disabledINN = true;\r\n        modalStore?.openModal(MODAL_DETAILED_INDIVIDUAL_PERSON, {\r\n          taxpayer,\r\n          isShow,\r\n          Handmade,\r\n          disabledINN,\r\n          createLinkModeV3,\r\n          modeLink,\r\n          infoNodeModeV3,\r\n        });\r\n      }\r\n    } else {\r\n      if (taxpayer.subject_type !== 'FL') {\r\n        await graphStore.createNode(taxpayer);\r\n      } else {\r\n        const isShow = false;\r\n        const Handmade = true;\r\n        const disabledINN = true;\r\n        modalStore?.openModal(MODAL_DETAILED_INDIVIDUAL_PERSON, {\r\n          taxpayer,\r\n          isShow,\r\n          Handmade,\r\n          disabledINN,\r\n        });\r\n      }\r\n    }\r\n\r\n    this._onClose();\r\n  };\r\n\r\n  /**\r\n   * Метод изменяет значение поля ввода\r\n   */\r\n  _onChange = (value: string): void => {\r\n    this.setState({ searchValue: value });\r\n\r\n    if (value.length === 0) {\r\n      const { commonStore } = this.props;\r\n      commonStore.resetNodesOrder();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Метод отправляет запрос на поиск\r\n   */\r\n  _onSearch = (): void => {\r\n    const {\r\n      state: { searchValue },\r\n      props: { commonStore },\r\n    } = this;\r\n\r\n    commonStore.resetNodesOrder();\r\n\r\n    if (commonStore.nodes.pending) {\r\n      ApiServices.source.cancel();\r\n      commonStore.nodesPendingFalse();\r\n    }\r\n\r\n    if (searchValue) {\r\n      commonStore.searchNodesByText(searchValue);\r\n      commonStore.nodesPendingTrue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Метод очищает список найденных узлов и закрывает окно\r\n   */\r\n  _onClose = (): void => {\r\n    const { modalStore, commonStore } = this.props;\r\n\r\n    commonStore.resetNodesOrder();\r\n\r\n    if (commonStore.nodes.pending) {\r\n      ApiServices.source.cancel();\r\n      commonStore.nodesPendingFalse();\r\n    }\r\n\r\n    modalStore.closeModal(ADD_NEW_NODE);\r\n  };\r\n\r\n  /**\r\n   * Метод очищает поле ввода\r\n   */\r\n  _onReset = (): void => {\r\n    const { commonStore } = this.props;\r\n\r\n    if (!commonStore.nodes.pending) {\r\n      this.setState({ searchValue: '' });\r\n      commonStore.resetNodesOrder();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Метод открытия модального окна по детализации ФЛ (для создания ФЛ)\r\n   */\r\n  _onCreateIndividualPerson = (): void => {\r\n    const { modalStore, createLinkModeV3, modeLink, diagramStore } = this.props;\r\n    this._onClose();\r\n    const isFL = true;\r\n    const Handmade = true;\r\n    if (createLinkModeV3) {\r\n      const infoNodeModeV3 = diagramStore?.diagram?.selection.first()!.data;\r\n      modalStore?.openModal(MODAL_DETAILED_INDIVIDUAL_PERSON, {\r\n        Handmade,\r\n        createLinkModeV3,\r\n        isFL,\r\n        modeLink,\r\n        infoNodeModeV3,\r\n      });\r\n    } else {\r\n      modalStore?.openModal(MODAL_DETAILED_INDIVIDUAL_PERSON, { Handmade });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Метод рисует элементы на странице\r\n   */\r\n  render() {\r\n    const {\r\n      state: { searchValue },\r\n      props: { commonStore },\r\n    } = this;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.header} data-draggable>\r\n          <span className={styles.headerLabel} data-draggable>\r\n            Добавить новый узел\r\n          </span>\r\n          <div onClick={this._onClose}>\r\n            <Icon className={styles.close} name=\"close\" theme={commonStore.appTheme} />\r\n          </div>\r\n        </div>\r\n        <div className={styles.separateLine} />\r\n        <div className={styles.label}>\r\n          <span>Поиск юридических и физических лиц (ИНН)</span>\r\n          <span>Создать узел ФЛ вручную</span>\r\n        </div>\r\n        <div className={styles.container}>\r\n          <div>\r\n            <Search\r\n              value={searchValue}\r\n              onChange={this._onChange}\r\n              onSearch={this._onSearch}\r\n              autoSearchTimeout={700}\r\n              placeholder={'Введите ИНН для поиска'}\r\n              autoFocus\r\n              withButton\r\n              theme={commonStore.appTheme}\r\n              wrapperStyle={styles.search}\r\n            />\r\n            {searchValue.length > 0 &&\r\n              (commonStore.nodes.error || commonStore.nodes.noResults ? (\r\n                <div className={styles.error}>\r\n                  <span className={styles.errorText}>Поиск не дал результатов</span>\r\n                </div>\r\n              ) : commonStore.nodes.pending ? (\r\n                <div className={styles.loader}>\r\n                  <Loader />\r\n                </div>\r\n              ) : (\r\n                <ul className={styles.list}>\r\n                  {commonStore.nodes.order.map((item: any, index: number) => (\r\n                    <li key={'nodes-list-item' + index} className={styles.item}>\r\n                      <Taxpayer\r\n                        onSelect={this._onCreateNode}\r\n                        taxpayer={item}\r\n                        theme={commonStore?.appTheme}\r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ))}\r\n          </div>\r\n          <div className={styles.action}>\r\n            <ActionButton\r\n              label=\"Создать узел ФЛ\"\r\n              onClick={this._onCreateIndividualPerson}\r\n              disabled={!commonStore.nodes.noResults}\r\n              buttonStyle={`${styles.button} ${styles.apply}`}\r\n              title={\r\n                !commonStore.nodes.noResults\r\n                  ? 'Кнопка будет доступна если не найдена информация через Поиск'\r\n                  : 'Задание физического лица в качестве нового узла'\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewNode;\r\n","export { default } from './AddNewNode';\r\n"],"sourceRoot":""}